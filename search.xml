<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Docker搭建部署ELK环境-SpringBoot日志集成ELK</title>
    <url>/post/e611022d.html</url>
    <content><![CDATA[<!-- build time:Sat Jan 16 2021 18:50:27 GMT+0800 (GMT+08:00) --><h2 id="使用pip安装docker-compose"><a href="#使用pip安装docker-compose" class="headerlink" title="使用pip安装docker-compose"></a>使用pip安装docker-compose</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum -y install epel-release</span><br><span class="line">yum -y install python-pip</span><br><span class="line"></span><br><span class="line">#查看版本  </span><br><span class="line">pip --version</span><br><span class="line"></span><br><span class="line">#更新pip</span><br><span class="line">pip  install --upgrade pip</span><br><span class="line"></span><br><span class="line">#安装docker-compose</span><br><span class="line">pip install docker-compose</span><br><span class="line"></span><br><span class="line">#查看版本</span><br><span class="line">docker-compose version</span><br></pre></td></tr></table></figure><h2 id="拉取ELK-elasticsearch-logstash-kibana-镜像"><a href="#拉取ELK-elasticsearch-logstash-kibana-镜像" class="headerlink" title="拉取ELK(elasticsearch   logstash   kibana)镜像"></a>拉取ELK(elasticsearch logstash kibana)镜像</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker pull docker.elastic.co&#x2F;elasticsearch&#x2F;elasticsearch:7.1.1</span><br><span class="line"></span><br><span class="line">docker pull docker.elastic.co&#x2F;logstash&#x2F;logstash:7.1.1</span><br><span class="line"></span><br><span class="line">docker pull docker.elastic.co&#x2F;kibana&#x2F;kibana:7.1.1</span><br></pre></td></tr></table></figure><h2 id="创建一个目录存放docker-compose-yml文件"><a href="#创建一个目录存放docker-compose-yml文件" class="headerlink" title="创建一个目录存放docker-compose.yml文件"></a>创建一个目录存放docker-compose.yml文件</h2><h3 id="注意yml格式缩进以及-复制时首行丢失"><a href="#注意yml格式缩进以及-复制时首行丢失" class="headerlink" title="注意yml格式缩进以及  复制时首行丢失"></a>注意yml格式缩进以及 复制时首行丢失</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir  &#x2F;opt&#x2F;elkDocker</span><br><span class="line">cd &#x2F;opt&#x2F;elkDocker</span><br><span class="line">vi docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3.1"</span>   <span class="comment">#Docker版本   docker --version查看</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"> <span class="attr">elasticsearch:</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">docker.elastic.co/elasticsearch/elasticsearch:7.1.1</span></span><br><span class="line">  <span class="attr">container_name:</span> <span class="string">'elasticsearch7.1.1'</span></span><br><span class="line">  <span class="attr">environment:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">discovery.type=single-node</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">"ES_JAVA_OPTS=-Xms512m -Xmx512m"</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">esdata:/usr/share/elasticsearch/data</span></span><br><span class="line">  <span class="attr">hostname:</span> <span class="string">elasticsearch</span></span><br><span class="line">  <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="number">9200</span><span class="string">:9200</span>	</span><br><span class="line">   <span class="bullet">-</span> <span class="number">9300</span><span class="string">:9300</span></span><br><span class="line"> <span class="attr">kibana:</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">docker.elastic.co/kibana/kibana:7.1.1</span></span><br><span class="line">  <span class="attr">container_name:</span> <span class="string">'kibana7.1.1'</span></span><br><span class="line">  <span class="attr">environment:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">elasticsearch.hosts=http://192.168.194.128:9200</span></span><br><span class="line">  <span class="attr">hostname:</span> <span class="string">kibana</span></span><br><span class="line">  <span class="attr">depends_on:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">elasticsearch</span></span><br><span class="line">  <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">"5601:5601"</span></span><br><span class="line"> <span class="attr">logstash:</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">docker.elastic.co/logstash/logstash:7.1.1</span></span><br><span class="line">  <span class="attr">container_name:</span> <span class="string">'logstash7.1.1'</span></span><br><span class="line">  <span class="attr">hostname:</span> <span class="string">logstash</span></span><br><span class="line">  <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">  <span class="attr">depends_on:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">elasticsearch</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="number">9600</span><span class="string">:9600</span></span><br><span class="line">   <span class="bullet">-</span> <span class="number">5044</span><span class="string">:5044</span></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line"> <span class="attr">esdata:</span></span><br><span class="line">  <span class="attr">driver:</span> <span class="string">local</span></span><br></pre></td></tr></table></figure><h2 id="docker-compose-yml文件目录执行命令"><a href="#docker-compose-yml文件目录执行命令" class="headerlink" title="docker-compose.yml文件目录执行命令"></a>docker-compose.yml文件目录执行命令</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br><span class="line"></span><br><span class="line">等待启动...   出现done即成功:</span><br><span class="line">[root@192 elkDocker]# docker-compose up -d</span><br><span class="line">&#x2F;usr&#x2F;lib64&#x2F;python2.7&#x2F;site-packages&#x2F;cryptography&#x2F;__init__.py:39: CryptographyDeprecationWarning: Python 2 is no longer supported by the Python core team. Support for it is now deprecated in cryptography, and will be removed in a future relse.</span><br><span class="line">  CryptographyDeprecationWarning,</span><br><span class="line">Starting elasticsearch7.1.1 ... done</span><br><span class="line">Starting logstash7.1.1      ... done</span><br><span class="line">Starting kibana7.1.1        ... done</span><br></pre></td></tr></table></figure><h2 id="查看容器"><a href="#查看容器" class="headerlink" title="查看容器"></a>查看容器</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@192 elkDocker]# docker ps</span><br><span class="line">CONTAINER ID        IMAGE                                                 COMMAND                  CREATED             STATUS              PORTS                                            NAMES</span><br><span class="line">53b1c7fd8ae2        docker.elastic.co&#x2F;logstash&#x2F;logstash:7.1.1             &quot;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;dock…&quot;   31 minutes ago      Up 7 seconds        0.0.0.0:5044-&gt;5044&#x2F;tcp, 0.0.0.0:9600-&gt;9600&#x2F;tcp   logstash7.1.1</span><br><span class="line">98d13c114d90        docker.elastic.co&#x2F;kibana&#x2F;kibana:7.1.1                 &quot;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;kiba…&quot;   31 minutes ago      Up 7 seconds        0.0.0.0:5601-&gt;5601&#x2F;tcp                           kibana7.1.1</span><br><span class="line">8b075e22e32a        docker.elastic.co&#x2F;elasticsearch&#x2F;elasticsearch:7.1.1   &quot;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;dock…&quot;   31 minutes ago      Up 8 seconds        0.0.0.0:9200-&gt;9200&#x2F;tcp, 0.0.0.0:9300-&gt;9300&#x2F;tcp   elasticsearch7.1.1</span><br></pre></td></tr></table></figure><h2 id="打开浏览器-访问路径-http-ip-9200"><a href="#打开浏览器-访问路径-http-ip-9200" class="headerlink" title="打开浏览器,访问路径  http://ip:9200"></a>打开浏览器,访问路径 <a href="http://ip:9200" target="_blank" rel="external nofollow noopener noreferrer">http://ip:9200</a></h2><p>返回以下json数据 启动成功</p><img src="/post/e611022d/psa.jpg" title="图示1"><h2><a href="#" class="headerlink"></a></h2><h2 id="访问路径-logstash：http-ip-9600-以及-kibana：-http-ip-5601"><a href="#访问路径-logstash：http-ip-9600-以及-kibana：-http-ip-5601" class="headerlink" title="访问路径  logstash：http://ip:9600  以及 kibana： http://ip:5601"></a>访问路径 logstash：<a href="http://ip:9600" target="_blank" rel="external nofollow noopener noreferrer">http://ip:9600</a> 以及 kibana： <a href="http://ip:5601" target="_blank" rel="external nofollow noopener noreferrer">http://ip:5601</a></h2><img src="/post/e611022d/psb.jpg" title="图示2"> <img src="/post/e611022d/psc.jpg" title="图示3"><p><strong>ps：如果访问被拒 多半是防火墙的问题 可以开放端口 也可以关闭防火墙（个人使用）</strong></p><p><strong>启动会有时间 很大概率都在延迟 多刷新亿下下</strong></p><h2 id="Docker安装elasticsearch-head-一个数据可视化工具"><a href="#Docker安装elasticsearch-head-一个数据可视化工具" class="headerlink" title="Docker安装elasticsearch-head: 一个数据可视化工具"></a>Docker安装elasticsearch-head: 一个数据可视化工具</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker pullmobz&#x2F;elasticsearch-head:5</span><br><span class="line">.....省略</span><br><span class="line">docker run -d -name es_admin -p 9100:9100 mobz&#x2F;elasticsearch-head:5</span><br><span class="line">#查看容器</span><br><span class="line">docker ps</span><br><span class="line"></span><br><span class="line">6d4cd3907f6b        mobz&#x2F;elasticsearch-head:5                             &quot;&#x2F;bin&#x2F;sh -c &#39;grunt s…&quot;   27 hours ago        Up About an hour    0.0.0.0:9100-&gt;9100&#x2F;tcp                           es_admin</span><br></pre></td></tr></table></figure><p><strong>浏览器访问 <a href="http://ip:9100" target="_blank" rel="external nofollow noopener noreferrer">http://ip:9100</a></strong></p><img src="/post/e611022d/psd.jpg" title="图示4"><p>*<em>填写自己的elasticsearch的ip地址 访问 连接失败 多半是跨域的问题 *</em></p><p><strong>解决方案：配置elasticsearch.yml 文件</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#拷贝配置文件至宿主机</span><br><span class="line">docker cp contain_id:&#x2F;usr&#x2F;share&#x2F;elasticsearch&#x2F;config&#x2F;elasticsearch.yml &#x2F;tmp</span><br><span class="line">cd &#x2F;tmp</span><br><span class="line">ls</span><br><span class="line">vi elasticsearch.yml</span><br><span class="line">#添加配置</span><br><span class="line">http.cors.enabled: true</span><br><span class="line">http.cors.allow-origin: &quot;*&quot;</span><br><span class="line">#覆盖容器内配置</span><br><span class="line">docker cp &#x2F;tmp&#x2F;elasticsearch.yml contain_id:&#x2F;usr&#x2F;share&#x2F;elasticsearch&#x2F;config&#x2F;</span><br><span class="line"></span><br><span class="line">#重启容器</span><br><span class="line">docker restart contain_id</span><br></pre></td></tr></table></figure><p><strong>重新访问即可 可能有延迟 多刷新</strong></p><h2 id="配置logstash"><a href="#配置logstash" class="headerlink" title="配置logstash"></a>配置logstash</h2><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line">docker cp contain_id:<span class="meta-keyword">/usr/</span>share<span class="meta-keyword">/logstash/</span>config/logstash-sample.conf /tmp</span><br><span class="line">docker cp contain_id:<span class="meta-keyword">/usr/</span>share<span class="meta-keyword">/logstash/</span>config/pipelines.yml /tmp</span><br><span class="line">scd /tmp</span><br><span class="line">ls</span><br><span class="line">vi logstash-sample.conf</span><br><span class="line"></span><br><span class="line"><span class="meta"># Sample Logstash configuration for creating a simple</span></span><br><span class="line"><span class="meta"># Beats -&gt; Logstash -&gt; Elasticsearch pipeline.</span></span><br><span class="line"></span><br><span class="line"><span class="class">input </span>&#123;</span><br><span class="line">  <span class="class">tcp </span>&#123;</span><br><span class="line">      port =&gt; <span class="number">5044</span></span><br><span class="line">      codec =&gt; json_lines</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class">output </span>&#123;</span><br><span class="line">  <span class="class">elasticsearch </span>&#123;</span><br><span class="line">      action =&gt; <span class="string">"index"</span></span><br><span class="line">      index =&gt; <span class="string">"%&#123;[appname]&#125;-%&#123;+YYYY.MM.dd&#125;"</span></span><br><span class="line">      hosts =&gt; [<span class="string">"*.*.*.*:9200"</span>]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#*.*.*.*替换为elasticsearch的ip</span></span><br><span class="line"></span><br><span class="line">vi pipelines.yml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- pipeline.id: main</span><br><span class="line">  path.config: <span class="string">"/usr/share/logstash/config/logstash-sample.conf"</span></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">docker cp <span class="meta-keyword">/tmp/</span>logstash-sample.conf contain_id:<span class="meta-keyword">/usr/</span>share<span class="meta-keyword">/logstash/</span>config/</span><br><span class="line">docker cp <span class="meta-keyword">/tmp/</span>pipelines.yml contain_id:<span class="meta-keyword">/usr/</span>share<span class="meta-keyword">/logstash/</span>config/</span><br><span class="line"></span><br><span class="line"><span class="meta">#重启容器</span></span><br></pre></td></tr></table></figure><p><strong>path.config</strong>指定自己配置的<strong>conf文件路径</strong> 大部分报错可能问题就出在这</p><p><strong>例如 SoringBoot 启动项目后 显示依已连接 ip:5044 但是kibana就是查询不到索引</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;opt&#x2F;elkDocker </span><br><span class="line">docker-compose logs  #打印日志查看  好家伙  异常一大堆 如下:  网上搜 信息也是寥寥无几</span><br></pre></td></tr></table></figure><hr><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">logstash7.1.1    | [2020-07-29T02:38:18,466][INFO ][org.logstash.beats.BeatsHandler] [local: 172.18.0.4:5044, remote: 172.18.0.1:39412] Handling exception: org.logstash.beats.BeatsParser$InvalidFrameProtocolException: Invalid Frame Type, received: 64</span><br><span class="line">logstash7.1.1    | [2020-07-29T02:38:18,466][WARN ][io.netty.channel.DefaultChannelPipeline] An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.</span><br><span class="line">logstash7.1.1    | io.netty.handler.codec.DecoderException: org.logstash.beats.BeatsParser$InvalidFrameProtocolException: Invalid Frame Type, received: 64</span><br><span class="line">logstash7.1.1    | 	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:472) ~[netty-all-4.1.30.Final.jar:4.1.30.Final]</span><br><span class="line">logstash7.1.1    | 	at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:405) ~[netty-all-4.1.30.Final.jar:4.1.30.Final]</span><br><span class="line">logstash7.1.1    | 	at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:372) ~[netty-all-4.1.30.Final.jar:4.1.30.Final]</span><br><span class="line">logstash7.1.1    | 	at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:355) ~[netty-all-4.1.30.Final.jar:4.1.30.Final]</span><br><span class="line">logstash7.1.1    | 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245) ~[netty-all-4.1.30.Final.jar:4.1.30.Final]</span><br><span class="line">logstash7.1.1    | 	at io.netty.channel.AbstractChannelHandlerContext.access$300(AbstractChannelHandlerContext.java:38) ~[netty-all-4.1.30.Final.jar:4.1.30.Final]</span><br><span class="line">logstash7.1.1    | 	at io.netty.channel.AbstractChannelHandlerContext$4.run(AbstractChannelHandlerContext.java:236) ~[netty-all-4.1.30.Final.jar:4.1.30.Final]</span><br><span class="line">logstash7.1.1    | 	at io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:66) ~[netty-all-4.1.30.Final.jar:4.1.30.Final]</span><br><span class="line">logstash7.1.1    | 	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897) [netty-all-4.1.30.Final.jar:4.1.30.Final]</span><br><span class="line">logstash7.1.1    | 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-all-4.1.30.Final.jar:4.1.30.Final]</span><br><span class="line">logstash7.1.1    | 	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_212]</span><br><span class="line">logstash7.1.1    | Caused by: org.logstash.beats.BeatsParser$InvalidFrameProtocolException: Invalid Frame Type, received: 64</span><br><span class="line">logstash7.1.1    | 	at org.logstash.beats.BeatsParser.decode(BeatsParser.java:92) ~[logstash-input-beats-6.0.0.jar:?]</span><br><span class="line">logstash7.1.1    | 	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502) ~[netty-all-4.1.30.Final.jar:4.1.30.Final]</span><br><span class="line">logstash7.1.1    | 	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441) ~[netty-all-4.1.30.Final.jar:4.1.30.Final]</span><br><span class="line">logstash7.1.1    | 	... 10 more</span><br></pre></td></tr></table></figure><h2 id="配置kibana-yml文件"><a href="#配置kibana-yml文件" class="headerlink" title="配置kibana.yml文件"></a>配置kibana.yml文件</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker cp contain_id:&#x2F;usr&#x2F;share&#x2F;kibana&#x2F;config&#x2F;kibana.yml &#x2F;tmp</span><br><span class="line">cd &#x2F;tmp</span><br><span class="line">ls</span><br><span class="line">vi kibana.yml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># ** THIS IS AN AUTO-GENERATED FILE **</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line"># Default Kibana configuration for docker target</span><br><span class="line">server.name: kibana</span><br><span class="line">server.host: &quot;0.0.0.0&quot;</span><br><span class="line">server.port: 5601</span><br><span class="line">elasticsearch.hosts: [ &quot;http:&#x2F;&#x2F;*.*.*.*:9200&quot; ]</span><br><span class="line">xpack.monitoring.ui.container.elasticsearch.enabled: true</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#*.*.*.*修改为elasticsearch的ip</span><br><span class="line"></span><br><span class="line">docker cp &#x2F;tmp&#x2F;kibana.yml contain_id:&#x2F;usr&#x2F;share&#x2F;kibana&#x2F;config&#x2F;</span><br><span class="line"></span><br><span class="line">#重启容器</span><br></pre></td></tr></table></figure><h2 id="创建SpringBoot项目-集成ELK日志管理"><a href="#创建SpringBoot项目-集成ELK日志管理" class="headerlink" title="创建SpringBoot项目 集成ELK日志管理"></a>创建SpringBoot项目 集成ELK日志管理</h2><p><strong>pom文件</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;project xmlns&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0&quot; xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;</span><br><span class="line">	xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0 http:&#x2F;&#x2F;maven.apache.org&#x2F;xsd&#x2F;maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">	&lt;modelVersion&gt;4.0.0&lt;&#x2F;modelVersion&gt;</span><br><span class="line">	&lt;parent&gt;</span><br><span class="line">		&lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">		&lt;artifactId&gt;spring-boot-starter-parent&lt;&#x2F;artifactId&gt;</span><br><span class="line">		&lt;version&gt;2.2.2.RELEASE&lt;&#x2F;version&gt;</span><br><span class="line">		&lt;relativePath&#x2F;&gt; &lt;!-- lookup parent from repository --&gt;</span><br><span class="line">	&lt;&#x2F;parent&gt;</span><br><span class="line">	&lt;groupId&gt;com.example&lt;&#x2F;groupId&gt;</span><br><span class="line">	&lt;artifactId&gt;demo&lt;&#x2F;artifactId&gt;</span><br><span class="line">	&lt;version&gt;0.0.1-SNAPSHOT&lt;&#x2F;version&gt;</span><br><span class="line">	&lt;name&gt;ELKDemo&lt;&#x2F;name&gt;</span><br><span class="line">	&lt;description&gt;Demo project for Spring Boot&lt;&#x2F;description&gt;</span><br><span class="line"></span><br><span class="line">	&lt;properties&gt;</span><br><span class="line">		&lt;java.version&gt;1.8&lt;&#x2F;java.version&gt;</span><br><span class="line">	&lt;&#x2F;properties&gt;</span><br><span class="line"></span><br><span class="line">	&lt;dependencies&gt;</span><br><span class="line">		&lt;dependency&gt;</span><br><span class="line">			&lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">			&lt;artifactId&gt;spring-boot-starter&lt;&#x2F;artifactId&gt;</span><br><span class="line">		&lt;&#x2F;dependency&gt;</span><br><span class="line">		&lt;dependency&gt;</span><br><span class="line">			&lt;groupId&gt;ch.qos.logback&lt;&#x2F;groupId&gt;</span><br><span class="line">			&lt;artifactId&gt;logback-classic&lt;&#x2F;artifactId&gt;</span><br><span class="line">		&lt;&#x2F;dependency&gt;</span><br><span class="line">		&lt;dependency&gt;</span><br><span class="line">			&lt;groupId&gt;net.logstash.logback&lt;&#x2F;groupId&gt;</span><br><span class="line">			&lt;artifactId&gt;logstash-logback-encoder&lt;&#x2F;artifactId&gt;</span><br><span class="line">			&lt;version&gt;4.10&lt;&#x2F;version&gt;</span><br><span class="line">		&lt;&#x2F;dependency&gt;</span><br><span class="line">		&lt;dependency&gt;</span><br><span class="line">			&lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">			&lt;artifactId&gt;spring-boot-starter-test&lt;&#x2F;artifactId&gt;</span><br><span class="line">			&lt;scope&gt;test&lt;&#x2F;scope&gt;</span><br><span class="line">		&lt;&#x2F;dependency&gt;</span><br><span class="line">	&lt;&#x2F;dependencies&gt;</span><br><span class="line"></span><br><span class="line">	&lt;build&gt;</span><br><span class="line">		&lt;plugins&gt;</span><br><span class="line">			&lt;plugin&gt;</span><br><span class="line">				&lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">				&lt;artifactId&gt;spring-boot-maven-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">			&lt;&#x2F;plugin&gt;</span><br><span class="line">		&lt;&#x2F;plugins&gt;</span><br><span class="line">	&lt;&#x2F;build&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;project&gt;</span><br></pre></td></tr></table></figure><p><strong>logback.xml</strong></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--该日志将日志级别不同的log信息保存到不同的文件中 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"LOGSTASH"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">class</span>=<span class="string">"net.logstash.logback.appender.LogstashTcpSocketAppender"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 你的ip和logstash-sample.conf中配置的端口	--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">destination</span>&gt;</span>ip:5044<span class="tag">&lt;/<span class="name">destination</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- encoder必须配置,有多种可选 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">class</span>=<span class="string">"net.logstash.logback.encoder.LogstashEncoder"</span> &gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- "appname":"bootlogs" 的作用是指定创建索引的名字时用，并且在生成的文档中会多了这个字段</span></span><br><span class="line"><span class="comment"> logstash-sample.conf中有配置 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">customFields</span>&gt;</span>&#123;"appname":"bootlogs"&#125;<span class="tag">&lt;/<span class="name">customFields</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- ch.qos.logback.core.ConsoleAppender 表示控制台输出 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"stdout"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.ConsoleAppender"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        日志输出格式：</span></span><br><span class="line"><span class="comment">            %d表示日期时间，</span></span><br><span class="line"><span class="comment">            %thread表示线程名，</span></span><br><span class="line"><span class="comment">            %-5level：级别从左显示5个字符宽度</span></span><br><span class="line"><span class="comment">            %logger&#123;50&#125; 表示logger名字最长50个字符，否则按照句点分割。</span></span><br><span class="line"><span class="comment">            %msg：日志消息，</span></span><br><span class="line"><span class="comment">            %n是换行符</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">layout</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.PatternLayout"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; ----&gt; [%thread] ---&gt; %-5level %logger&#123;50&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        logger主要用于存放日志对象，也可以定义日志类型、级别</span></span><br><span class="line"><span class="comment">        name：表示匹配的logger类型前缀，也就是包的前半部分</span></span><br><span class="line"><span class="comment">        level：要记录的日志级别，包括 TRACE &lt; DEBUG &lt; INFO &lt; WARN &lt; ERROR</span></span><br><span class="line"><span class="comment">        additivity：作用在于children-logger是否使用 rootLogger配置的appender进行输出，</span></span><br><span class="line"><span class="comment">        false：表示只用当前logger的appender-ref，true：</span></span><br><span class="line"><span class="comment">        表示当前logger的appender-ref和rootLogger的appender-ref都有效</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- hibernate logger --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"com.shawwang"</span> <span class="attr">level</span>=<span class="string">"debug"</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Spring framework logger --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"org.springframework"</span> <span class="attr">level</span>=<span class="string">"debug"</span> <span class="attr">additivity</span>=<span class="string">"false"</span>&gt;</span><span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"INFO"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"stdout"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"LOGSTASH"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>测试</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.Scheduled;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">logTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Logger logger = LoggerFactory.getLogger(logTest<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Scheduled</span>(fixedRate = <span class="number">1000</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">logtest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        logger.trace(<span class="string">"trace日志"</span>);</span><br><span class="line">        logger.debug(<span class="string">"debug日志"</span>);</span><br><span class="line">        logger.info(<span class="string">"info日志"</span>);</span><br><span class="line">        logger.warn(<span class="string">"warn日志"</span>);</span><br><span class="line">        logger.error(<span class="string">"error日志"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>启动项目</strong></p><p>控制台打印信息</p><img src="/post/e611022d/pse.jpg" title="图示5"><p><strong>访问kibana 如图所示 创建索引 查看数据</strong></p><img src="/post/e611022d/psf.jpg" title="图示6"> <img src="/post/e611022d/psg.jpg" title="图示7"> <img src="/post/e611022d/psh.jpg" title="图示8"><!-- rebuild by neat -->]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>linux系统扩展磁盘空间</title>
    <url>/post/270c8d8b.html</url>
    <content><![CDATA[<!-- build time:Sat Jan 16 2021 18:50:27 GMT+0800 (GMT+08:00) --><h2 id="no-space-left-on-device-磁盘空间不足"><a href="#no-space-left-on-device-磁盘空间不足" class="headerlink" title="no space left on device:磁盘空间不足"></a>no space left on device:磁盘空间不足</h2><h2 id="扩展磁盘空间"><a href="#扩展磁盘空间" class="headerlink" title="扩展磁盘空间"></a>扩展磁盘空间</h2><h3 id="在系统关机状态扩展系统的磁盘空间-shutdown-h-now"><a href="#在系统关机状态扩展系统的磁盘空间-shutdown-h-now" class="headerlink" title="在系统关机状态扩展系统的磁盘空间 shutdown -h now"></a>在系统关机状态扩展系统的磁盘空间 shutdown -h now</h3><img src="/post/270c8d8b/psa.jpg" title="图示"><h3 id="打开虚拟机，登录root用户，执行命令fdisk-l-查看扩展后的结果"><a href="#打开虚拟机，登录root用户，执行命令fdisk-l-查看扩展后的结果" class="headerlink" title="打开虚拟机，登录root用户，执行命令fdisk -l  查看扩展后的结果"></a>打开虚拟机，登录root用户，执行命令fdisk -l 查看扩展后的结果</h3><img src="/post/270c8d8b/psb.jpg" title="图示2"><h3 id="从主磁盘空间创建新的分区，fdisk-dev-sda-依次执行命令-w保存"><a href="#从主磁盘空间创建新的分区，fdisk-dev-sda-依次执行命令-w保存" class="headerlink" title="从主磁盘空间创建新的分区，fdisk /dev/sda  依次执行命令  w保存"></a>从主磁盘空间创建新的分区，fdisk /dev/sda 依次执行命令 w保存</h3><img src="/post/270c8d8b/psc.jpg" title="图示3"><h3 id="检查执行结果-fdisk-l"><a href="#检查执行结果-fdisk-l" class="headerlink" title="检查执行结果  fdisk -l"></a>检查执行结果 fdisk -l</h3><img src="/post/270c8d8b/psd.jpg" title="图示4"><h3 id="重启系统-格式化新的分区-mkfs-ext3-dev-sda3"><a href="#重启系统-格式化新的分区-mkfs-ext3-dev-sda3" class="headerlink" title="重启系统  格式化新的分区  mkfs.ext3 /dev/sda3"></a>重启系统 格式化新的分区 mkfs.ext3 /dev/sda3</h3><img src="/post/270c8d8b/pse.jpg" title="图示5"><h3 id="进入lvm管理-pvcreate-dev-sda3"><a href="#进入lvm管理-pvcreate-dev-sda3" class="headerlink" title="进入lvm管理  pvcreate /dev/sda3"></a>进入lvm管理 pvcreate /dev/sda3</h3><img src="/post/270c8d8b/psf.jpg" title="图示6"><h4 id="查看物理卷组-记录VGName"><a href="#查看物理卷组-记录VGName" class="headerlink" title="查看物理卷组  记录VGName"></a>查看物理卷组 记录VGName</h4><img src="/post/270c8d8b/psg.jpg" title="图示7"><h3 id="将初始化的分区加入虚拟卷组-vgextend-el-dev-sda3"><a href="#将初始化的分区加入虚拟卷组-vgextend-el-dev-sda3" class="headerlink" title="将初始化的分区加入虚拟卷组  vgextend el /dev/sda3"></a>将初始化的分区加入虚拟卷组 vgextend el /dev/sda3</h3><img src="/post/270c8d8b/psh.jpg" title="图示8"><h4 id="查看磁盘-已成功添加"><a href="#查看磁盘-已成功添加" class="headerlink" title="查看磁盘 已成功添加"></a>查看磁盘 已成功添加</h4><img src="/post/270c8d8b/psi.jpg" title="图示9"><h3 id="扩展已有卷的容量-以你添加的容量为准-lvextend-numG-dev-mapper-cl-root"><a href="#扩展已有卷的容量-以你添加的容量为准-lvextend-numG-dev-mapper-cl-root" class="headerlink" title="扩展已有卷的容量    以你添加的容量为准  lvextend -: +numG /dev/mapper/cl-root"></a>扩展已有卷的容量 以你添加的容量为准 lvextend -: +numG /dev/mapper/cl-root</h3><img src="/post/270c8d8b/psj.jpg" title="图示10"><h3 id="查看添加结果"><a href="#查看添加结果" class="headerlink" title="查看添加结果"></a>查看添加结果</h3><img src="/post/270c8d8b/psk.jpg" title="图示11"><h3 id="查看df-h-查看大小无变化"><a href="#查看df-h-查看大小无变化" class="headerlink" title="查看df -h  查看大小无变化"></a>查看df -h 查看大小无变化</h3><img src="/post/270c8d8b/psk.jpg" title="图示11"><h4 id="使用命令进行同步-xfs-growfs-dev-mapper-cl-root"><a href="#使用命令进行同步-xfs-growfs-dev-mapper-cl-root" class="headerlink" title="使用命令进行同步 xfs_growfs /dev/mapper/cl-root"></a>使用命令进行同步 xfs_growfs /dev/mapper/cl-root</h4><img src="/post/270c8d8b/psn.jpg" title="图示12"><!-- rebuild by neat -->]]></content>
      <categories>
        <category>bug解决大全</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>磁盘</tag>
      </tags>
  </entry>
  <entry>
    <title>springboot使用lombok配置日志输出到指定目录</title>
    <url>/post/f400a6d1.html</url>
    <content><![CDATA[<!-- build time:Sat Jan 16 2021 18:50:27 GMT+0800 (GMT+08:00) --><h2 id="pom文件添加依赖"><a href="#pom文件添加依赖" class="headerlink" title="pom文件添加依赖"></a>pom文件添加依赖</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">         &lt;groupId&gt;org.projectlombok&lt;&#x2F;groupId&gt;</span><br><span class="line">         &lt;artifactId&gt;lombok&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.18.12&lt;&#x2F;version&gt;</span><br><span class="line">     &lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><h2 id="resources目录下创建logback-xml文件"><a href="#resources目录下创建logback-xml文件" class="headerlink" title="resources目录下创建logback.xml文件"></a>resources目录下创建logback.xml文件</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">scan</span>=<span class="string">"true"</span> <span class="attr">scanPeriod</span>=<span class="string">"60 seconds"</span> <span class="attr">debug</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">contextName</span>&gt;</span>logback<span class="tag">&lt;/<span class="name">contextName</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--定义日志文件的存储地址目录--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"LOG_HOME"</span> <span class="attr">value</span>=<span class="string">"D:/logs/"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--输出到控制台--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"console"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.ConsoleAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.filter.ThresholdFilter"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">level</span>&gt;</span>INFO<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">withJansi</span>&gt;</span>true<span class="tag">&lt;/<span class="name">withJansi</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;pattern&gt;%d %p (%file:%line\)- %m%n&lt;/pattern&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--格式化输出：%d:表示日期    %thread:表示线程名     %-5level:级别从左显示5个字符宽度  %msg:日志消息    %n:是换行符--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%black(控制台-) %red(%d&#123;yyyy-MM-dd HH:mm:ss&#125;) %green([%thread]) %highlight(%-5level)</span><br><span class="line">                %boldMagenta(%logger) - %cyan(%msg%n)</span><br><span class="line">            <span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--输出到文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"file"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.RollingFileAppender"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>$&#123;LOG_HOME&#125;logback.%d&#123;yyyy-MM-dd-HH-mm&#125;[%i].log<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">maxFileSize</span>&gt;</span>10kb<span class="tag">&lt;/<span class="name">maxFileSize</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>30<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">totalSizeCap</span>&gt;</span>1GB<span class="tag">&lt;/<span class="name">totalSizeCap</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--格式化输出：%d:表示日期    %thread:表示线程名     %-5level:级别从左显示5个字符宽度  %msg:日志消息    %n:是换行符--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>文件记录-%d&#123;yyyy-MM-dd HH:mm:ss&#125; [%thread] %-5level %logger - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"info"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"console"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"file"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"com.sxd.controller"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"com.sxd.util.LogTestController"</span> <span class="attr">level</span>=<span class="string">"WARN"</span> <span class="attr">additivity</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"console"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="类上面注解-Slf4j-直接使用log记录日志"><a href="#类上面注解-Slf4j-直接使用log记录日志" class="headerlink" title="类上面注解@Slf4j   直接使用log记录日志:"></a>类上面注解@Slf4j 直接使用log记录日志:</h2><img src="/post/f400a6d1/psa.jpg" title="图片1"> <img src="/post/f400a6d1/psb.jpg" title="图片2"><h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示:"></a>效果展示:</h2><img src="/post/f400a6d1/psc.jpg" title="图片3"> <img src="/post/f400a6d1/psd.jpg" title="图片4"> <img src="/post/f400a6d1/pse.jpg" title="图片5"><!-- rebuild by neat -->]]></content>
      <categories>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>idea设置doc注释模板</title>
    <url>/post/b8329979.html</url>
    <content><![CDATA[<!-- build time:Sat Jan 16 2021 18:50:27 GMT+0800 (GMT+08:00) --><h2 id="设置类注释模板"><a href="#设置类注释模板" class="headerlink" title="设置类注释模板"></a>设置类注释模板</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * @version 0.1.0</span><br><span class="line"> *</span><br><span class="line"> * @Description </span><br><span class="line"> *</span><br><span class="line"> * @author name</span><br><span class="line"> *</span><br><span class="line"> * @since 0.1.0</span><br><span class="line"> *</span><br><span class="line"> * @create $&#123;YEAR&#125;-$&#123;MONTH&#125;-$&#123;DAY&#125; $&#123;HOUR&#125;:$&#123;MINUTE&#125;</span><br><span class="line"> **&#x2F;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">File&gt;&gt;Setting&gt;&gt;Editor&gt;&gt;File and Code Templates&gt;&gt;Includes&gt;&gt;File Header 粘贴即可</span><br></pre></td></tr></table></figure><img src="/post/b8329979/psa.jpg" title="图片1"><h2 id="设置方法注释模板"><a href="#设置方法注释模板" class="headerlink" title="设置方法注释模板"></a>设置方法注释模板</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">File&gt;&gt;Setting&gt;&gt;Editor&gt;&gt;Live Templates  点击右上角 +  </span><br><span class="line">添加Group后  点击 +  Live Template</span><br></pre></td></tr></table></figure><img src="/post/b8329979/psb.jpg" title="图片2"> <img src="/post/b8329979/psc.jpg" title="图片3"><p>添加模板</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*</span><br><span class="line"> * @Description: $description$</span><br><span class="line"> * @version 0.1.0</span><br><span class="line"> $params$</span><br><span class="line"> * @return $returns$</span><br><span class="line"> * @author name</span><br><span class="line"> * @date $date$ $time$</span><br><span class="line"> * @since 0.1.0</span><br><span class="line"> **&#x2F;</span><br></pre></td></tr></table></figure><p><strong>Applicable</strong> 设置为 *</p><p><strong>Expand with</strong> 选择设置哪个键按下生成注释 选择 <strong>Enter</strong></p><p><strong>Edit variables</strong> 设置变量</p><p><strong>Change</strong> 选择生效区域</p><img src="/post/b8329979/psd.jpg" title="图片4"><p><strong>params</strong>设置为:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">groovyScript(&quot;def result&#x3D;&#39;&#39;; def params&#x3D;\&quot;$&#123;_1&#125;\&quot;.replaceAll(&#39;[\\\\[|\\\\]|\\\\s]&#39;, &#39;&#39;).split(&#39;,&#39;).toList(); for(i &#x3D; 1; i &lt; params.size() +1; i++) &#123;result+&#x3D;&#39;* @param &#39; + params[i - 1] + &#39; &#39; + i + ((i &lt; params.size()) ? &#39;\\n &#39; : &#39;&#39;)&#125;; return result&quot;, methodParameters())</span><br></pre></td></tr></table></figure><p>创建类会自动生成注释 方法/**+Enter生成 效果如下:</p><img src="/post/b8329979/pse.jpg" title="图片5"><!-- rebuild by neat -->]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>idea</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker 安装 Rabbitmq</title>
    <url>/post/b3b7cc65.html</url>
    <content><![CDATA[<!-- build time:Sat Jan 16 2021 18:50:27 GMT+0800 (GMT+08:00) --><h2 id="访问hub-docker-com查看需要的版本"><a href="#访问hub-docker-com查看需要的版本" class="headerlink" title="访问hub.docker.com查看需要的版本"></a>访问<a href="https://hub.docker.com/" target="_blank" rel="external nofollow noopener noreferrer">hub.docker.com</a>查看需要的版本</h2><p>选择带有management的 有web管理</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@192 &#x2F;]# docker pull rabbitmq:3.7.27-rc.1-management-alpine</span><br><span class="line">3.7.27-rc.1-management-alpine: Pulling from library&#x2F;rabbitmq</span><br><span class="line">df20fa9351a1: Pull complete </span><br><span class="line">6a4ed0140701: Pull complete </span><br><span class="line">6d5c7c78b67f: Pull complete </span><br><span class="line">7ea126e61bcf: Pull complete </span><br><span class="line">0be712904441: Pull complete </span><br><span class="line">11ecc3358c20: Pull complete </span><br><span class="line">458347edfc65: Pull complete </span><br><span class="line">b1878f623a16: Pull complete </span><br><span class="line">ed6d2988e61a: Pull complete </span><br><span class="line">Digest: sha256:f5bdefeb16b294796bc7ea0b03ca2d2b3c2507ba812b59e48d856108ecf622af</span><br><span class="line">Status: Downloaded newer image for rabbitmq:3.7.27-rc.1-management-alpine</span><br></pre></td></tr></table></figure><h2 id="查看镜像"><a href="#查看镜像" class="headerlink" title="查看镜像"></a>查看镜像</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@192 &#x2F;]# docker images</span><br><span class="line">REPOSITORY          TAG                             IMAGE ID            CREATED             SIZE</span><br><span class="line">rabbitmq            3.7.27-rc.1-management-alpine   d2e6c12987b8        9 days ago          144MB</span><br></pre></td></tr></table></figure><h2 id="创建并启动容器-后台挂起"><a href="#创建并启动容器-后台挂起" class="headerlink" title="创建并启动容器  后台挂起"></a>创建并启动容器 后台挂起</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@192 &#x2F;]# docker run -d -p 5672:5672 -p 15672:15672 --name rabbitmq rabbitmq:3.7.27-rc.1-management-alpine</span><br><span class="line">2888f6d4a75bab5640955b2548e798ea0dd5a7931464a531b7fa5801dff4b2f0</span><br></pre></td></tr></table></figure><h2 id="查看运行中容器"><a href="#查看运行中容器" class="headerlink" title="查看运行中容器"></a>查看运行中容器</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@192 &#x2F;]# docker ps</span><br><span class="line">CONTAINER ID        IMAGE                                    COMMAND                  CREATED             STATUS              PORTS                                                                                        NAMES</span><br><span class="line">2888f6d4a75b        rabbitmq:3.7.27-rc.1-management-alpine   &quot;docker-entrypoint.s…&quot;   11 seconds ago      Up 7 seconds        4369&#x2F;tcp, 5671&#x2F;tcp, 0.0.0.0:5672-&gt;5672&#x2F;tcp, 15671&#x2F;tcp, 25672&#x2F;tcp, 0.0.0.0:15672-&gt;15672&#x2F;tcp   rabbitmq</span><br><span class="line">c2d8883595f4        mysql:5.7                                &quot;docker-entrypoint.s…&quot;   2 hours ago         Up 2 hours          33060&#x2F;tcp, 0.0.0.0:3307-&gt;3306&#x2F;tcp                                                            mysql01</span><br></pre></td></tr></table></figure><h2 id="访问Rabbitmq管理界面"><a href="#访问Rabbitmq管理界面" class="headerlink" title="访问Rabbitmq管理界面"></a>访问Rabbitmq管理界面</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="attribute">http://&#123;ip&#125;:15672</span></span><br><span class="line">用户名/密码   guest/guest</span><br></pre></td></tr></table></figure><img src="/post/b3b7cc65/psc.jpg" title="web界面"><!-- rebuild by neat -->]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker命令attach卡住解决</title>
    <url>/post/61750088.html</url>
    <content><![CDATA[<!-- build time:Sat Jan 16 2021 18:50:27 GMT+0800 (GMT+08:00) --><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>当启动容器时加入 -d 参数 用户则无法直接进入容器中</p><p>因为此时容器运行的进程是ssh 而不是/bin/bash</p><p>使用docker exec -it containerId /bin/bash进入</p><h2 id="run、attach、exec区别"><a href="#run、attach、exec区别" class="headerlink" title="run、attach、exec区别"></a>run、attach、exec区别</h2><p>run 用于创建容器 每次使用会创建一个新的容器</p><p>attach通过连接stdin，连接到容器内输入输出流，会在输入<code>exit</code>后终止进程.</p><p>exec 会连接到容器，可以像SSH一样进入容器内部，进行操作，可以通过<code>exit</code>退出容器，不影响容器运行。</p><p>可使用快捷键ctrl+P+q 使容器在后台运行</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>bug解决大全</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker安装mysql并设置字符集(中文乱码)</title>
    <url>/post/5655b191.html</url>
    <content><![CDATA[<!-- build time:Sat Jan 16 2021 18:50:27 GMT+0800 (GMT+08:00) --><h2 id="Docker安装mysql"><a href="#Docker安装mysql" class="headerlink" title="Docker安装mysql"></a>Docker安装mysql</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker search mysql    #查找mysql</span><br></pre></td></tr></table></figure><p>可在 <a href="https://hub.docker.com" target="_blank" rel="external nofollow noopener noreferrer">hub.docker</a>查看详细版本信息</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker pull mysql:5.7    #选择版本  拉取镜像   不指定版本会拉取最新版本  latest</span><br><span class="line">mkdir -p &#x2F;data&#x2F;mysql01		#创建同步mysql的文件夹</span><br><span class="line">docker run --name mysql01 -p 3307:3306 -v &#x2F;data&#x2F;mysql01:&#x2F;var&#x2F;lib&#x2F;mysql -e MYSQL_ROOT_PASSWORD&#x3D;root -d mysql:5.7</span><br><span class="line"></span><br><span class="line"># -v 容器内的 &#x2F;var&#x2F;lib&#x2F;mysql 在宿主机上 &#x2F;data&#x2F;mysql01 做映射  </span><br><span class="line"># -e MYSQL_ROOT_PASSWORD 设置初始密码</span><br><span class="line"># -p 将宿主机3307的端口映射到容器3306端口</span><br></pre></td></tr></table></figure><p>从MySQL8.0 开始，默认的加密规则使用的是 caching_sha2_password 需要修改加密算法</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; grant all PRIVILEGES on *.* to root@&#39;%&#39; WITH GRANT OPTION;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"> </span><br><span class="line">mysql&gt; ALTER user &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;123456&#39; PASSWORD EXPIRE NEVER;</span><br><span class="line">Query OK, 0 rows affected (0.11 sec)</span><br><span class="line"> </span><br><span class="line">mysql&gt; ALTER user &#39;root&#39;@&#39;%&#39; IDENTIFIED WITH mysql_native_password BY &#39;123456&#39;;</span><br><span class="line">Query OK, 0 rows affected (0.11 sec)</span><br><span class="line"> </span><br><span class="line">mysql&gt;  FLUSH PRIVILEGES;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br></pre></td></tr></table></figure><h2 id="修改字符集"><a href="#修改字符集" class="headerlink" title="修改字符集"></a>修改字符集</h2><p>登录mysql查看字符集 默认为latin1</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; show variables like&#39;%char%&#39;;</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| Variable_name            | Value                      |</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| character_set_client     | latin1                     |</span><br><span class="line">| character_set_connection | latin1                     |</span><br><span class="line">| character_set_database   | latin1                     |</span><br><span class="line">| character_set_filesystem | binary                     |</span><br><span class="line">| character_set_results    | latin1                     |</span><br><span class="line">| character_set_server     | latin1                     |</span><br><span class="line">| character_set_system     | utf8                       |</span><br><span class="line">| character_sets_dir       | &#x2F;usr&#x2F;share&#x2F;mysql&#x2F;charsets&#x2F; |</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">8 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><h3 id="查找my-cnf文件位置"><a href="#查找my-cnf文件位置" class="headerlink" title="查找my.cnf文件位置"></a>查找my.cnf文件位置</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@192 etc]# docker exec -it c2d8883595f4 &#x2F;bin&#x2F;bash</span><br><span class="line">root@c2d8883595f4:&#x2F;# ls </span><br><span class="line">bin   docker-entrypoint-initdb.d  home	 media	proc  sbin  tmp</span><br><span class="line">boot  entrypoint.sh		  lib	 mnt	root  srv   usr</span><br><span class="line">dev   etc			  lib64  opt	run   sys   var</span><br><span class="line">root@c2d8883595f4:&#x2F;# cd &#x2F;etc</span><br><span class="line">root@c2d8883595f4:&#x2F;etc# ls</span><br><span class="line">X11			hostname       mtab	      resolv.conf</span><br><span class="line">adduser.conf		hosts	       mysql	      rmt</span><br><span class="line">alternatives		init.d	       nsswitch.conf  securetty</span><br><span class="line">apt			inputrc        opt	      security</span><br><span class="line">bash.bashrc		issue	       os-release     selinux</span><br><span class="line">bindresvport.blacklist	issue.net      pam.conf       shadow</span><br><span class="line">cron.daily		kernel	       pam.d	      shadow-</span><br><span class="line">debconf.conf		ld.so.cache    passwd	      shells</span><br><span class="line">debian_version		ld.so.conf     passwd-	      skel</span><br><span class="line">default			ld.so.conf.d   perl	      ssl</span><br><span class="line">deluser.conf		ldap	       profile	      subgid</span><br><span class="line">dpkg			libaudit.conf  profile.d      subuid</span><br><span class="line">environment		localtime      rc0.d	      systemd</span><br><span class="line">fstab			logcheck       rc1.d	      terminfo</span><br><span class="line">gai.conf		login.defs     rc2.d	      timezone</span><br><span class="line">group			logrotate.d    rc3.d	      update-motd.d</span><br><span class="line">group-			machine-id     rc4.d	      xattr.conf</span><br><span class="line">gshadow			mecabrc        rc5.d</span><br><span class="line">gshadow-		mke2fs.conf    rc6.d</span><br><span class="line">host.conf		motd	       rcS.d</span><br><span class="line">root@c2d8883595f4:&#x2F;etc# cd mysql</span><br><span class="line">root@c2d8883595f4:&#x2F;etc&#x2F;mysql# ls</span><br><span class="line">conf.d	my.cnf	my.cnf.fallback  mysql.cnf  mysql.conf.d</span><br><span class="line">root@c2d8883595f4:&#x2F;etc&#x2F;mysql# cd conf.d</span><br><span class="line">root@c2d8883595f4:&#x2F;etc&#x2F;mysql&#x2F;conf.d# ls</span><br><span class="line">docker.cnf  mysql.cnf  mysqldump.cnf</span><br><span class="line">root@c2d8883595f4:&#x2F;etc&#x2F;mysql&#x2F;conf.d# exit</span><br></pre></td></tr></table></figure><h3 id="cp容器文件到物理机"><a href="#cp容器文件到物理机" class="headerlink" title="cp容器文件到物理机"></a>cp容器文件到物理机</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@192 etc]# docker cp mysql01:&#x2F;etc&#x2F;mysql&#x2F;conf.d&#x2F;mysql&#x2F;cnf &#x2F;tmp</span><br><span class="line">Error: No such container:path: mysql01:&#x2F;etc&#x2F;mysql&#x2F;conf.d&#x2F;mysql&#x2F;cnf</span><br><span class="line">[root@192 etc]# docker cp mysql01:&#x2F;etc&#x2F;mysql&#x2F;conf.d&#x2F;mysql.cnf  &#x2F;tmp</span><br><span class="line">[root@192 etc]# cd &#x2F;tmp</span><br><span class="line">[root@192 tmp]# ls</span><br><span class="line">mysql.cnf                                                                vmware-root_655-4021587944  vmware-root_686-2689274894   vmware-root_9726-2824408292                yum_save_tx.2020-07-22.03-00.wpUrcx.yumtx</span><br><span class="line">systemd-private-14b3f32ece2e42be8035dd16f67c30d9-chronyd.service-RWHYU3  vmware-root_682-2697467275  vmware-root_9706-2865892209  yum_save_tx.2020-07-22.02-59.A1CPz5.yumtx</span><br></pre></td></tr></table></figure><h3 id="vi-编辑mysql-cnf"><a href="#vi-编辑mysql-cnf" class="headerlink" title="vi 编辑mysql.cnf"></a>vi 编辑mysql.cnf</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@192 tmp]# vi mysql.cnf</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[client]</span><br><span class="line">default-character-set&#x3D;utf8</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">default-character-set&#x3D;utf8</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">init_connect&#x3D;&#39;SET collation_connection &#x3D; utf8_unicode_ci&#39;</span><br><span class="line">init_connect&#x3D;&#39;SET NAMES utf8&#39;</span><br><span class="line">character-set-server&#x3D;utf8</span><br><span class="line">collation-server&#x3D;utf8_unicode_ci</span><br><span class="line">skip-character-set-client-handshake</span><br></pre></td></tr></table></figure><p>esc :wq退出</p><h3 id="将mysql-cnf文件拷贝回容器"><a href="#将mysql-cnf文件拷贝回容器" class="headerlink" title="将mysql.cnf文件拷贝回容器"></a>将mysql.cnf文件拷贝回容器</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@192 tmp]# docker cp &#x2F;tmp&#x2F;mysql.cnf mysql01:&#x2F;etc&#x2F;mysql&#x2F;conf.d&#x2F;</span><br><span class="line">[root@192 tmp]# docker restart mysql01   #重启容器  使配置生效</span><br></pre></td></tr></table></figure><h3 id="进入容器运行mysql查看字符集"><a href="#进入容器运行mysql查看字符集" class="headerlink" title="进入容器运行mysql查看字符集"></a>进入容器运行mysql查看字符集</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@192 tmp]# docker exec -it c2d8883595f4 &#x2F;bin&#x2F;bash</span><br><span class="line">root@c2d8883595f4:&#x2F;# mysql -uroot -p</span><br><span class="line">Enter password: </span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 2</span><br><span class="line">Server version: 5.7.31 MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2020, Oracle and&#x2F;or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and&#x2F;or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; show variables like &#39;%char%&#39;;</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| Variable_name            | Value                      |</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| character_set_client     | utf8                       |</span><br><span class="line">| character_set_connection | utf8                       |</span><br><span class="line">| character_set_database   | utf8                       |</span><br><span class="line">| character_set_filesystem | binary                     |</span><br><span class="line">| character_set_results    | utf8                       |</span><br><span class="line">| character_set_server     | utf8                       |</span><br><span class="line">| character_set_system     | utf8                       |</span><br><span class="line">| character_sets_dir       | &#x2F;usr&#x2F;share&#x2F;mysql&#x2F;charsets&#x2F; |</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">8 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker的安装与简单使用</title>
    <url>/post/830c686a.html</url>
    <content><![CDATA[<!-- build time:Sat Jan 16 2021 18:50:27 GMT+0800 (GMT+08:00) --><h2 id="Docker的三个概念"><a href="#Docker的三个概念" class="headerlink" title="Docker的三个概念"></a>Docker的三个概念</h2><h4 id="镜像（Image）："><a href="#镜像（Image）：" class="headerlink" title="镜像（Image）："></a>镜像（Image）：</h4><p>类似于虚拟机中的镜像，是一个包含有文件系统的面向Docker引擎的只读模板。任何应用程序运行都需要环境，而镜像就是用来提供这种运行环境的。例如一个Ubuntu镜像就是一个包含Ubuntu操作系统环境的模板，同理在该镜像上装上Apache软件，就可以称为Apache镜像。</p><h4 id="容器（Container）："><a href="#容器（Container）：" class="headerlink" title="容器（Container）："></a>容器（Container）：</h4><p>类似于一个轻量级的沙盒，可以将其看作一个极简的Linux系统环境（包括root权限、进程空间、用户空间和网络空间等），以及运行在其中的应用程序。Docker引擎利用容器来运行、隔离各个应用。容器是镜像创建的应用实例，可以创建、启动、停止、删除容器，各个容器之间是是相互隔离的，互不影响。注意：镜像本身是只读的，容器从镜像启动时，Docker在镜像的上层创建一个可写层，镜像本身不变。</p><h4 id="仓库（Repository）："><a href="#仓库（Repository）：" class="headerlink" title="仓库（Repository）："></a>仓库（Repository）：</h4><p>类似于代码仓库，这里是镜像仓库，是Docker用来集中存放镜像文件的地方。注意与注册服务器（Registry）的区别：注册服务器是存放仓库的地方，一般会有多个仓库；而仓库是存放镜像的地方，一般每个仓库存放一类镜像，每个镜像利用tag进行区分，比如Ubuntu仓库存放有多个版本（12.04、14.04等）的Ubuntu镜像。</p><h2 id="Docker的安装与卸载"><a href="#Docker的安装与卸载" class="headerlink" title="Docker的安装与卸载"></a>Docker的安装与卸载</h2><p>Docker可以安装在Windows、linux、Mac等多个平台上，详细查看文档</p><p><a href="https://docs.docker.com/engine/install/" target="_blank" rel="external nofollow noopener noreferrer">Install Docker Engine</a></p><h3 id="centos"><a href="#centos" class="headerlink" title="centos:"></a>centos:</h3><ul><li><h4 id="更新yum包"><a href="#更新yum包" class="headerlink" title="更新yum包"></a>更新yum包</h4></li><li><p>yum update (升级所有包同时升级软件和系统内核 生产环境慎用)</p></li><li><p>yum upgrade (只升级所有包，不升级软件和系统内核 )</p></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum update</span><br></pre></td></tr></table></figure><p>-y 表示不询问，使用默认配置进行安装</p><h4 id="安装需要的软件包，-yum-util-提供yum-config-manager功能，另外两个是devicemapper驱动依赖的"><a href="#安装需要的软件包，-yum-util-提供yum-config-manager功能，另外两个是devicemapper驱动依赖的" class="headerlink" title="安装需要的软件包， yum-util 提供yum-config-manager功能，另外两个是devicemapper驱动依赖的"></a>安装需要的软件包， yum-util 提供yum-config-manager功能，另外两个是devicemapper驱动依赖的</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure><h4 id="设置yum源"><a href="#设置yum源" class="headerlink" title="设置yum源"></a>设置yum源</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# yum-config-manager --add-repo https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo</span><br></pre></td></tr></table></figure><h4 id="查看仓库中所有docker版本"><a href="#查看仓库中所有docker版本" class="headerlink" title="查看仓库中所有docker版本"></a>查看仓库中所有docker版本</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@192 ~]# yum list docker-ce --showduplicates | sort -r</span><br><span class="line">已加载插件：fastestmirror, product-id, search-disabled-repos, subscription-manager</span><br><span class="line">可安装的软件包</span><br><span class="line"> * updates: ftp.sjtu.edu.cn</span><br><span class="line">This system is not registered with an entitlement server. You can use subscription-manager to register.</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * extras: ftp.sjtu.edu.cn</span><br><span class="line">docker-ce.x86_64            3:19.03.9-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:19.03.8-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:19.03.7-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:19.03.6-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:19.03.5-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:19.03.4-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:19.03.3-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:19.03.2-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:19.03.1-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:19.03.12-3.el7                    docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:19.03.11-3.el7                    docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:19.03.10-3.el7                    docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:19.03.0-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:18.09.9-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:18.09.8-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:18.09.7-3.el7                     docker-ce-stable</span><br></pre></td></tr></table></figure><h4 id="选择版本安装-yum-install-docker-ce-version"><a href="#选择版本安装-yum-install-docker-ce-version" class="headerlink" title="选择版本安装 yum install docker-ce-version"></a>选择版本安装 yum install docker-ce-version</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@192 ~]# yum install docker-ce-18.03.1.ce</span><br><span class="line">已加载插件：fastestmirror, product-id, search-disabled-repos, subscription-manager</span><br><span class="line"></span><br><span class="line">This system is not registered with an entitlement server. You can use subscription-manager to register.</span><br><span class="line"></span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: ftp.sjtu.edu.cn</span><br><span class="line"> * extras: ftp.sjtu.edu.cn</span><br><span class="line"> * updates: ftp.sjtu.edu.cn</span><br><span class="line">正在解决依赖关系</span><br><span class="line">--&gt; 正在检查事务</span><br><span class="line">---&gt; 软件包 docker-ce.x86_64.0.18.03.1.ce-1.el7.centos 将被 安装</span><br><span class="line">--&gt; 正在处理依赖关系 pigz，它被软件包 docker-ce-18.03.1.ce-1.el7.centos.x86_64 需要</span><br><span class="line">--&gt; 正在检查事务</span><br><span class="line">---&gt; 软件包 pigz.x86_64.0.2.3.3-1.el7.centos 将被 安装</span><br><span class="line">--&gt; 解决依赖关系完成</span><br><span class="line"></span><br><span class="line">依赖关系解决</span><br><span class="line">.........................</span><br><span class="line">安装  1 软件包 (+1 依赖软件包)</span><br><span class="line"></span><br><span class="line">总下载量：35 M</span><br><span class="line">安装大小：35 M</span><br><span class="line">Is this ok [y&#x2F;d&#x2F;N]: y</span><br></pre></td></tr></table></figure><h4 id="安装之后查看版本信息-出现-Client-Server安装成功"><a href="#安装之后查看版本信息-出现-Client-Server安装成功" class="headerlink" title="安装之后查看版本信息  出现 Client  Server安装成功"></a>安装之后查看版本信息 出现 Client Server安装成功</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker version</span><br><span class="line">Client:</span><br><span class="line"> Version:      18.03.1-ce</span><br><span class="line"> API version:  1.37</span><br><span class="line"> Go version:   go1.9.5</span><br><span class="line"> Git commit:   9ee9f40</span><br><span class="line"> Built:        Thu Apr 26 07:20:16 2018</span><br><span class="line"> OS&#x2F;Arch:      linux&#x2F;amd64</span><br><span class="line"> Experimental: false</span><br><span class="line"> Orchestrator: swarm</span><br><span class="line"></span><br><span class="line">Server:</span><br><span class="line"> Engine:</span><br><span class="line">  Version:      18.03.1-ce</span><br><span class="line">  API version:  1.37 (minimum version 1.12)</span><br><span class="line">  Go version:   go1.9.5</span><br><span class="line">  Git commit:   9ee9f40</span><br><span class="line">  Built:        Thu Apr 26 07:23:58 2018</span><br><span class="line">  OS&#x2F;Arch:      linux&#x2F;amd64</span><br><span class="line">  Experimental: false</span><br><span class="line">[root@localhost ~]#</span><br></pre></td></tr></table></figure><h4 id="启动Docker"><a href="#启动Docker" class="headerlink" title="启动Docker"></a>启动Docker</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@192 ~]# systemctl start docker</span><br></pre></td></tr></table></figure><h4 id="查看镜像验证启动-刚下载-无镜像"><a href="#查看镜像验证启动-刚下载-无镜像" class="headerlink" title="查看镜像验证启动  (刚下载  无镜像)"></a>查看镜像验证启动 (刚下载 无镜像)</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@192 ~]# docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">[root@192 ~]#</span><br></pre></td></tr></table></figure><h4 id="开机启动docker"><a href="#开机启动docker" class="headerlink" title="开机启动docker"></a>开机启动docker</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@192 ~]# systemctl enable docker</span><br><span class="line">Created symlink from &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;multi-user.target.wants&#x2F;docker.service to &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;docker.service.</span><br></pre></td></tr></table></figure><h3 id="Docker卸载"><a href="#Docker卸载" class="headerlink" title="Docker卸载"></a><a href="https://www.cnblogs.com/kingsonfu/p/11582495.html" target="_blank" rel="external nofollow noopener noreferrer">Docker卸载</a></h3><p>Docker 帮助信息</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker --help</span><br></pre></td></tr></table></figure><h2 id="Docker关于镜像的基本操作"><a href="#Docker关于镜像的基本操作" class="headerlink" title="Docker关于镜像的基本操作"></a>Docker关于镜像的基本操作</h2><p>Docker每个仓库会有多个镜像，用tag表示，如果不加tag，默认使用latest镜像</p><h3 id="搜索centos镜像并下载已有镜像"><a href="#搜索centos镜像并下载已有镜像" class="headerlink" title="搜索centos镜像并下载已有镜像"></a>搜索centos镜像并下载已有镜像</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker search centos</span><br><span class="line">NAME                               DESCRIPTION                                     STARS               OFFICIAL            AUTOMATED</span><br><span class="line">centos                             The official build of CentOS.                   6100                [OK]                </span><br><span class="line">ansible&#x2F;centos7-ansible            Ansible on Centos7                              132                                     [OK]</span><br><span class="line">consol&#x2F;centos-xfce-vnc             Centos container with &quot;headless&quot; VNC session…   117                                     [OK]</span><br><span class="line">jdeathe&#x2F;centos-ssh                 OpenSSH &#x2F; Supervisor &#x2F; EPEL&#x2F;IUS&#x2F;SCL Repos - …   115                                     [OK]</span><br><span class="line">centos&#x2F;systemd                     systemd enabled base container.                 86                                      [OK]</span><br><span class="line">centos&#x2F;mysql-57-centos7            MySQL 5.7 SQL database server                   77                                      </span><br><span class="line">imagine10255&#x2F;centos6-lnmp-php56    centos6-lnmp-php56                              58                                      [OK]</span><br><span class="line">tutum&#x2F;centos                       Simple CentOS docker image with SSH access      47                                      </span><br><span class="line">[root@localhost ~]# docker pull centos</span><br><span class="line">Using default tag: latest</span><br><span class="line">latest: Pulling from library&#x2F;centos</span><br><span class="line">6910e5a164f7: Pull complete </span><br><span class="line">Digest: sha256:4062bbdd1bb0801b0aa38e0f83dece70fb7a5e9bce223423a68de2d8b784b43b</span><br><span class="line">Status: Downloaded newer image for centos:latest</span><br></pre></td></tr></table></figure><h3 id="新建自有镜像"><a href="#新建自有镜像" class="headerlink" title="新建自有镜像"></a>新建自有镜像</h3><p>利用镜像启动一个容器后进行修改 利用commit提交更新后的副本</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker run -it centos:latest &#x2F;bin&#x2F;bash   #启动容器</span><br><span class="line">[root@ea288062adff &#x2F;]# docker				#root@后面参数变了  进入了容器</span><br><span class="line">bash: docker: command not found  			#容器中没有docker了</span><br><span class="line">[root@ea288062adff &#x2F;]# git -version			</span><br><span class="line">bash: git: command not found				#同理 git也没有了</span><br><span class="line">[root@ea288062adff &#x2F;]# yum install git     #yum安装git</span><br><span class="line">Failed to set locale, defaulting to C.UTF-8</span><br><span class="line">CentOS-8 - AppStream                                                                                                                                                                                             1.2 MB&#x2F;s | 5.8 MB     00:04    </span><br><span class="line">CentOS-8 - Base                                                                                                                                                                                                  471 kB&#x2F;s | 2.2 MB     00:04    </span><br><span class="line">CentOS-8 - Extras                                                                                                                                                                                                7.1 kB&#x2F;s | 7.0 kB     00:00    </span><br><span class="line">Dependencies resolved.</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@ea288062adff &#x2F;]# git --version</span><br><span class="line">git version 2.18.4					#安装后已经有git了</span><br><span class="line">[root@ea288062adff &#x2F;]# exit			#exit退出容器</span><br></pre></td></tr></table></figure><p>退出后查看Docker中运行的容器</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker ps -a</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                     PORTS               NAMES</span><br><span class="line">ea288062adff        centos:latest       &quot;&#x2F;bin&#x2F;bash&quot;              2 minutes ago       Exited (0) 4 seconds ago                       goofy_yonath</span><br><span class="line">567a31230ca6        mysql:latest        &quot;docker-entrypoint.s…&quot;   9 minutes ago       Exited (0) 4 minutes ago                       hungry_goodall</span><br></pre></td></tr></table></figure><p>将容器转换为一个镜像，执行commit操作，完成后使用docker images查看</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker commit -m &quot;centos with git&quot; -a &quot;gitjzz&quot; ea288062adff gitjzz&#x2F;centos:git</span><br><span class="line">sha256:3fcad1be9818ef2cb6a975f499a4547e1080f136752af9660c57d13b930546f9</span><br><span class="line">[root@localhost ~]# docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">gitjzz&#x2F;centos       git                 3fcad1be9818        12 seconds ago      332MB</span><br><span class="line">mysql               5.7                 8679ced16d20        5 hours ago         448MB</span><br><span class="line">mysql               latest              e3fcc9e1cc04        5 hours ago         544MB</span><br><span class="line">centos              latest              831691599b88        5 weeks ago         215MB</span><br></pre></td></tr></table></figure><p>-m 指定说明信息 -a指定用户信息 ea288062adff 代表容器id gitjzz/centos:git 指定目标镜像的用户名、仓库名和tag信息。此时Docker引擎中就有了新建的镜像gitjzz/centos:git 与之前的centos镜像多了个git工具</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker run  gitjzz&#x2F;centos:git &#x2F;bin&#x2F;bash</span><br><span class="line">[root@61bdaf0a9695 &#x2F;]# git --version</span><br><span class="line">git version 2.18.4</span><br></pre></td></tr></table></figure><h2 id="Docker关于容器的基本操作"><a href="#Docker关于容器的基本操作" class="headerlink" title="Docker关于容器的基本操作"></a>Docker关于容器的基本操作</h2><h3 id="基于镜像启动一个容器"><a href="#基于镜像启动一个容器" class="headerlink" title="基于镜像启动一个容器"></a>基于镜像启动一个容器</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker run -it centos:latest &#x2F;bin&#x2F;bash   #启动容器</span><br></pre></td></tr></table></figure><p>-it是两个参数 -i和-t -i:表示打开并保持stdout -t:分配一个终端(pseudo-tty)</p><p>exit 退出 容器状态处于Exit 不是后台运行 让容器后台运行 使用快捷键ctrl+p+q退出 此时容器状态为Up</p><h3 id="d后台运行"><a href="#d后台运行" class="headerlink" title="-d后台运行"></a>-d后台运行</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker run -d centos:latest &#x2F;bin&#x2F;bash   #启动容器</span><br></pre></td></tr></table></figure><p>使用了-d参数，使这个容器处于后台运行的状态，不会对当前终端产生任何输出，所有的stdout都输出到log，可以使用docker logs container_name/container_id查看</p><h3 id="启动、停止、重启容器命令"><a href="#启动、停止、重启容器命令" class="headerlink" title="启动、停止、重启容器命令"></a>启动、停止、重启容器命令</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker start ba0f7e1e3f0d</span><br><span class="line">ba0f7e1e3f0d</span><br><span class="line">[root@localhost ~]# docker stop ba0f7e1e3f0d</span><br><span class="line">ba0f7e1e3f0d</span><br><span class="line">[root@localhost ~]# docker restart ba0f7e1e3f0d</span><br><span class="line">ba0f7e1e3f0d</span><br></pre></td></tr></table></figure><h3 id="后台启动一个容器后-如果想进入这个容器-attach命令"><a href="#后台启动一个容器后-如果想进入这个容器-attach命令" class="headerlink" title="后台启动一个容器后  如果想进入这个容器  attach命令"></a>后台启动一个容器后 如果想进入这个容器 attach命令</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker attach ba0f7e1e3f0d</span><br><span class="line">[root@ba0f7e1e3f0d &#x2F;]# 				#已经进入到容器中</span><br></pre></td></tr></table></figure><h3 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker rm ba0f7e1e3f0d</span><br></pre></td></tr></table></figure><h3 id="删除镜像"><a href="#删除镜像" class="headerlink" title="删除镜像"></a>删除镜像</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker rmi 镜像id</span><br></pre></td></tr></table></figure><h2 id="Docker关于仓库的基本操作"><a href="#Docker关于仓库的基本操作" class="headerlink" title="Docker关于仓库的基本操作"></a>Docker关于仓库的基本操作</h2><p>Docker官方维护了一个DockerHub的公共仓库，里边包含有很多平时用的较多的镜像。除了从上边下载镜像之外，我们也可以将自己自定义的镜像发布（push）到DockerHub上。</p><p>访问<a href="https://hub.docker.com/" target="_blank" rel="external nofollow noopener noreferrer">hub.docker.com</a></p><h3 id="注册账号后-docker-login登录DockerHub-输入账号密码"><a href="#注册账号后-docker-login登录DockerHub-输入账号密码" class="headerlink" title="注册账号后,docker login登录DockerHub  输入账号密码"></a>注册账号后,docker login登录DockerHub 输入账号密码</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker login</span><br><span class="line">Login with your Docker ID to push and pull images from Docker Hub. If you don&#39;t have a Docker ID, head over to https:&#x2F;&#x2F;hub.docker.com to create one.</span><br><span class="line">Username: gitjzz</span><br><span class="line">Password: </span><br><span class="line">Login Succeeded</span><br><span class="line">[root@localhost ~]#</span><br></pre></td></tr></table></figure><h3 id="将本地的镜像推送到DockerHub上-这里的gitjzzz要和你的username一致"><a href="#将本地的镜像推送到DockerHub上-这里的gitjzzz要和你的username一致" class="headerlink" title="将本地的镜像推送到DockerHub上,这里的gitjzzz要和你的username一致"></a>将本地的镜像推送到DockerHub上,这里的gitjzzz要和你的username一致</h3><figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line">[root<span class="symbol">@localhost</span> ~]<span class="meta"># docker push gitjzzz/centos:git</span></span><br><span class="line">The push refers <span class="keyword">to</span> repository [docker.io/gitjzzz/centos]</span><br><span class="line">An image does <span class="literal">not</span> exist locally <span class="keyword">with</span> the tag: gitjzzz/centos  <span class="meta">#username不匹配</span></span><br><span class="line">[root<span class="symbol">@localhost</span> ~]<span class="meta"># docker push gitjzz/centos:git</span></span><br><span class="line">The push refers <span class="keyword">to</span> repository [docker.io/gitjzz/centos]</span><br><span class="line"><span class="number">2</span>fafaaf7e942: Pushing [&gt;                            	                      ]  <span class="number">2.212</span>MB/<span class="number">117.2</span>MB 					<span class="meta">#匹配成功</span></span><br><span class="line">eb29745b8228: Preparing</span><br></pre></td></tr></table></figure><h3 id="别人就可以从你的仓库中下载这个镜像了，你也可以在别的环境拉取此镜像"><a href="#别人就可以从你的仓库中下载这个镜像了，你也可以在别的环境拉取此镜像" class="headerlink" title="别人就可以从你的仓库中下载这个镜像了，你也可以在别的环境拉取此镜像"></a>别人就可以从你的仓库中下载这个镜像了，你也可以在别的环境拉取此镜像</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker pull gitjzz&#x2F;centos:git</span><br></pre></td></tr></table></figure><p>镜像有两种创建方法 更新也有两种</p><p><a href="https://www.runoob.com/docker/docker-dockerfile.html" target="_blank" rel="external nofollow noopener noreferrer">Dockerfile使用方法</a></p><p>创建容器之后做更改，之后commit生成镜像，然后push到仓库中。</p><p>更新Dockerfile。在工作时一般建议这种方式，更简洁明了。</p><h2 id="尾部"><a href="#尾部" class="headerlink" title="尾部"></a>尾部</h2><p>从仓库（一般为DockerHub）下载（pull）一个镜像，Docker执行run方法得到一个容器，用户在容器里执行各种操作。Docker执行commit方法将一个容器转化为镜像。Docker利用login、push等命令将本地镜像推送（push）到仓库。其他机器或服务器上就可以使用该镜像去生成容器，进而运行相应的应用程序了。</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>Docker</category>
        <category>工具</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot集成Swagger文档</title>
    <url>/post/3c8d244d.html</url>
    <content><![CDATA[<!-- build time:Sat Jan 16 2021 18:50:27 GMT+0800 (GMT+08:00) --><h2 id="引入maven依赖"><a href="#引入maven依赖" class="headerlink" title="引入maven依赖"></a>引入maven依赖</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--swagger依赖--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;io.springfox&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;springfox-swagger2&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.7.0&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;io.springfox&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;springfox-swagger-ui&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.7.0&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><h2 id="创建Swagger配置类"><a href="#创建Swagger配置类" class="headerlink" title="创建Swagger配置类"></a>创建Swagger配置类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * . 创建配置类对 swagger进行基本的配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ComponentScan</span>(basePackages = &#123;<span class="string">"com.sb.userlink.controller"</span>&#125;)</span><br><span class="line"><span class="meta">@EnableSwagger</span>2</span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Swagger</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurationSupport</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Docket <span class="title">createRestApi</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">                .apiInfo(apiInfo())</span><br><span class="line">                .select()</span><br><span class="line">                .apis(RequestHandlerSelectors.any())</span><br><span class="line">                .paths(PathSelectors.any())</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> ApiInfo <span class="title">apiInfo</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ApiInfoBuilder()</span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                访问swagger</span></span><br><span class="line"><span class="comment">                http://localhost:端口号/swagger-ui.html</span></span><br><span class="line"><span class="comment">                * */</span></span><br><span class="line">                .title(<span class="string">"标题"</span>)</span><br><span class="line">                .description(<span class="string">"详细说明"</span>)</span><br><span class="line">                .version(<span class="string">"1.0"</span>)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Swagger常用注解"><a href="#Swagger常用注解" class="headerlink" title="Swagger常用注解"></a>Swagger常用注解</h2><ul><li>@Api()用于类；<br>表示标识这个类是swagger的资源</li><li>@ApiOperation()用于方法；<br>表示一个http请求的操作</li><li>@ApiParam()用于方法，参数，字段说明；<br>表示对参数的添加元数据（说明或是否必填等）</li><li>@ApiModel()用于类<br>表示对类进行说明，用于参数用实体类接收</li><li>@ApiModelProperty()用于方法，字段<br>表示对model属性的说明或者数据操作更改</li><li>@ApiIgnore()用于类，方法，方法参数<br>表示这个方法或者类被忽略</li><li>@ApiImplicitParam() 用于方法<br>表示单独的请求参数</li><li>@ApiImplicitParams() 用于方法，包含多个 @ApiImplicitParam</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sb.userlink.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sb.userlink.pojo.ItripUserLinkUser;</span><br><span class="line"><span class="keyword">import</span> com.sb.userlink.service.userlinkuser.ItripUserLinkUserService;</span><br><span class="line"><span class="keyword">import</span> com.sb.userlink.util.Result;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.Api;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiOperation;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@Api</span>(value = <span class="string">"UserLinkController"</span>, description = <span class="string">"接口文档"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserLinkController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    ItripUserLinkUserService itripUserLinkUserService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation</span>(value = <span class="string">"获取客户信息"</span>, notes = <span class="string">"返回Result对象"</span>)</span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/getUserLinkMap"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">getUserLinkMap</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ok(<span class="string">"获取数据成功"</span>, itripUserLinkUserService.getItripUserLinkUserList());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> Result.error(e.getMessage(), <span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation</span>(value = <span class="string">"新增客户信息"</span>, notes = <span class="string">"返回业务实况"</span>)</span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/addItripUserLinkUser"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">addUserLink</span><span class="params">(ItripUserLinkUser itripUserLinkUser)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            itripUserLinkUserService.insertItripUserLinkUser(itripUserLinkUser);</span><br><span class="line">            <span class="keyword">return</span> Result.ok(<span class="string">"添加成功"</span>, itripUserLinkUser);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> Result.error(e.getMessage(), <span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="访问swagger文档"><a href="#访问swagger文档" class="headerlink" title="访问swagger文档"></a>访问swagger文档</h2><p><a href="http://localhost:端口号/项目名/swagger-ui.html" rel="external nofollow noopener noreferrer" target="_blank">http://localhost:端口号/项目名/swagger-ui.html</a></p><p>如图所示</p><img src="/post/3c8d244d/m.jpg" title="访问swagger接口文档"><p>访问》》》<a href="https://jzai.xyz/post/3a300b1.html">404解决方案</a></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>swagger</tag>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot使用代码生成器MyBatis-Plus</title>
    <url>/post/e53743d3.html</url>
    <content><![CDATA[<!-- build time:Sat Jan 16 2021 18:50:27 GMT+0800 (GMT+08:00) --><h2 id="创建springboot项目-添加maven依赖"><a href="#创建springboot项目-添加maven依赖" class="headerlink" title="创建springboot项目,添加maven依赖"></a>创建springboot项目,添加maven依赖</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--数据库连接--&gt;</span><br><span class="line">       &lt;dependency&gt;</span><br><span class="line">           &lt;groupId&gt;com.alibaba&lt;&#x2F;groupId&gt;</span><br><span class="line">           &lt;artifactId&gt;druid&lt;&#x2F;artifactId&gt;</span><br><span class="line">           &lt;version&gt;1.1.9&lt;&#x2F;version&gt;</span><br><span class="line">       &lt;&#x2F;dependency&gt;</span><br><span class="line">       &lt;dependency&gt;</span><br><span class="line">           &lt;groupId&gt;mysql&lt;&#x2F;groupId&gt;</span><br><span class="line">           &lt;artifactId&gt;mysql-connector-java&lt;&#x2F;artifactId&gt;</span><br><span class="line">           &lt;scope&gt;runtime&lt;&#x2F;scope&gt;</span><br><span class="line">       &lt;&#x2F;dependency&gt;</span><br><span class="line">       &lt;!--构建项目freemarker模板依赖--&gt;</span><br><span class="line">       &lt;dependency&gt;</span><br><span class="line">           &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">           &lt;artifactId&gt;spring-boot-starter-freemarker&lt;&#x2F;artifactId&gt;</span><br><span class="line">       &lt;&#x2F;dependency&gt;</span><br><span class="line">       &lt;dependency&gt;</span><br><span class="line">           &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">           &lt;artifactId&gt;spring-boot-starter-web&lt;&#x2F;artifactId&gt;</span><br><span class="line">       &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">       &lt;!--代码生成器依赖--&gt;</span><br><span class="line">       &lt;dependency&gt;</span><br><span class="line">           &lt;groupId&gt;com.baomidou&lt;&#x2F;groupId&gt;</span><br><span class="line">           &lt;artifactId&gt;mybatis-plus-boot-starter&lt;&#x2F;artifactId&gt;</span><br><span class="line">           &lt;version&gt;3.1.2&lt;&#x2F;version&gt;</span><br><span class="line">       &lt;&#x2F;dependency&gt;</span><br><span class="line">       &lt;dependency&gt;</span><br><span class="line">           &lt;groupId&gt;com.baomidou&lt;&#x2F;groupId&gt;</span><br><span class="line">           &lt;artifactId&gt;mybatis-plus-generator&lt;&#x2F;artifactId&gt;</span><br><span class="line">           &lt;version&gt;3.1.2&lt;&#x2F;version&gt;</span><br><span class="line">       &lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><h2 id="application-yml配置"><a href="#application-yml配置" class="headerlink" title="application.yml配置"></a>application.yml配置</h2><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># datasource config</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql:///xmall?serverTimezone=GMT</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#mybatis config</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:mapper/*.xml</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.example.mybatisplus.pojo</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="attr">id-type:</span> <span class="string">auto</span></span><br></pre></td></tr></table></figure><h2 id="创建代码生成类CodeGenerator"><a href="#创建代码生成类CodeGenerator" class="headerlink" title="创建代码生成类CodeGenerator"></a>创建代码生成类CodeGenerator</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.mybatisplus;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.toolkit.StringPool;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.AutoGenerator;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.InjectionConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.*;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.po.TableInfo;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.rules.DateType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.engine.FreemarkerTemplateEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CodeGenerator</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//代码生成器</span></span><br><span class="line">        AutoGenerator mpg = <span class="keyword">new</span> AutoGenerator();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//全局配置</span></span><br><span class="line">        GlobalConfig gc = <span class="keyword">new</span> GlobalConfig();</span><br><span class="line">        String projectPath = System.getProperty(<span class="string">"user.dir"</span>);</span><br><span class="line">        gc.setOutputDir(projectPath + <span class="string">"/src/main/java"</span>);</span><br><span class="line">        gc.setAuthor(<span class="string">"jzz"</span>);</span><br><span class="line">        gc.setServiceName(<span class="string">"%sService"</span>);<span class="comment">//自定义Service接口生成的文件名</span></span><br><span class="line">        gc.setOpen(<span class="keyword">false</span>);</span><br><span class="line">        gc.setBaseResultMap(<span class="keyword">true</span>);</span><br><span class="line">        gc.setDateType(DateType.ONLY_DATE);</span><br><span class="line">        mpg.setGlobalConfig(gc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//数据源配置</span></span><br><span class="line">        DataSourceConfig dsc = <span class="keyword">new</span> DataSourceConfig();</span><br><span class="line">        dsc.setUrl(<span class="string">"jdbc:mysql://localhost:3306/xmall?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=UTF-8"</span>);</span><br><span class="line">        dsc.setDriverName(<span class="string">"com.mysql.cj.jdbc.Driver"</span>);</span><br><span class="line">        dsc.setUsername(<span class="string">"root"</span>);</span><br><span class="line">        dsc.setPassword(<span class="string">"root"</span>);</span><br><span class="line">        mpg.setDataSource(dsc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//包配置</span></span><br><span class="line">        PackageConfig pc = <span class="keyword">new</span> PackageConfig();</span><br><span class="line">        pc.setParent(<span class="string">"com.example.mybatisplus"</span>)</span><br><span class="line">                .setMapper(<span class="string">"mapper"</span>);</span><br><span class="line">        mpg.setPackageInfo(pc);</span><br><span class="line">        pc = <span class="keyword">new</span> PackageConfig();</span><br><span class="line">        pc.setParent(<span class="string">"com.example.mybatisplus"</span>)</span><br><span class="line">                .setEntity(<span class="string">"pojo"</span>);</span><br><span class="line">        mpg.setPackageInfo(pc);</span><br><span class="line">        <span class="comment">//自定义配置</span></span><br><span class="line">        InjectionConfig cfg = <span class="keyword">new</span> InjectionConfig() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initMap</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="comment">//to do nothing</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//自定义输出配置</span></span><br><span class="line">        List&lt;FileOutConfig&gt; focList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">//自定义配置会优先输出</span></span><br><span class="line">        focList.add(<span class="keyword">new</span> FileOutConfig(<span class="string">"/templates/mapper.xml.ftl"</span>) &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> String <span class="title">outputFile</span><span class="params">(TableInfo tableInfo)</span> </span>&#123;</span><br><span class="line">                <span class="comment">// 自定义输出文件名 ， 如果你 Entity 设置了前后缀、此处注意 xml 的名称会跟着发生变化！！</span></span><br><span class="line">                <span class="keyword">return</span> projectPath + <span class="string">"/src/main/resources/mapper/"</span></span><br><span class="line">                        + tableInfo.getEntityName() + <span class="string">"Mapper"</span> + StringPool.DOT_XML;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        cfg.setFileOutConfigList(focList);</span><br><span class="line">        mpg.setCfg(cfg);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 配置模板</span></span><br><span class="line">        TemplateConfig templateConfig = <span class="keyword">new</span> TemplateConfig();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 配置自定义输出模板</span></span><br><span class="line">        <span class="comment">//指定自定义模板路径，注意不要带上.ftl/.vm, 会根据使用的模板引擎自动识别</span></span><br><span class="line">        <span class="comment">// templateConfig.setEntity("templates/entity2.java");</span></span><br><span class="line">        <span class="comment">// templateConfig.setService();</span></span><br><span class="line">        <span class="comment">// templateConfig.setController();</span></span><br><span class="line">        templateConfig.setXml(<span class="keyword">null</span>);</span><br><span class="line">        mpg.setTemplate(templateConfig);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//配置策略</span></span><br><span class="line">        StrategyConfig strategy = <span class="keyword">new</span> StrategyConfig();</span><br><span class="line">        strategy.setNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        strategy.setColumnNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        <span class="comment">//strategy.setSuperControllerClass("com.example.demo.model.BaseEntity");</span></span><br><span class="line">        strategy.setEntityLombokModel(<span class="keyword">false</span>);<span class="comment">//默认是false</span></span><br><span class="line">        <span class="comment">//strategy.setRestControllerStyle(true);</span></span><br><span class="line">        <span class="comment">//公共父类</span></span><br><span class="line">        <span class="comment">//strategy.setSuperControllerClass("com.example.demo.controller.BaseController");</span></span><br><span class="line">        <span class="comment">// 写于父类中的公共字段</span></span><br><span class="line">        <span class="comment">//strategy.setSuperEntityColumns("id");</span></span><br><span class="line"><span class="comment">//        strategy.setInclude("tb_account");</span></span><br><span class="line">        strategy.setControllerMappingHyphenStyle(<span class="keyword">true</span>);</span><br><span class="line">        strategy.setTablePrefix(<span class="string">"tb_"</span>);</span><br><span class="line">        mpg.setStrategy(strategy);</span><br><span class="line">        mpg.setTemplateEngine(<span class="keyword">new</span> FreemarkerTemplateEngine());</span><br><span class="line">        mpg.execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="执行main方法，生成项目代码"><a href="#执行main方法，生成项目代码" class="headerlink" title="执行main方法，生成项目代码"></a>执行main方法，生成项目代码</h2><img src="/post/e53743d3/m.jpg" title="执行main方法"><h2 id="执行成功后项目架构"><a href="#执行成功后项目架构" class="headerlink" title="执行成功后项目架构"></a>执行成功后项目架构</h2><img src="/post/e53743d3/mm.jpg" title="项目架构"><!-- rebuild by neat -->]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>springboot使用分页插件PageHelper</title>
    <url>/post/74e44cd.html</url>
    <content><![CDATA[<!-- build time:Sat Jan 16 2021 18:50:27 GMT+0800 (GMT+08:00) --><h2 id="pom文件添加依赖"><a href="#pom文件添加依赖" class="headerlink" title="pom文件添加依赖"></a>pom文件添加依赖</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.github.pagehelper&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;pagehelper-spring-boot-starter&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.2.11&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><h2 id="Mapper-xml代码"><a href="#Mapper-xml代码" class="headerlink" title="Mapper.xml代码"></a>Mapper.xml代码</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getAllBooks"</span> <span class="attr">resultType</span>=<span class="string">"Book"</span>&gt;</span></span><br><span class="line">       select * from book</span><br><span class="line">   <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Mapper-interface代码"><a href="#Mapper-interface代码" class="headerlink" title="Mapper.interface代码"></a>Mapper.interface代码</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">List&lt;Book&gt; <span class="title">getAllBooks</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><h2 id="Service层代码"><a href="#Service层代码" class="headerlink" title="Service层代码"></a>Service层代码</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Resource</span></span><br><span class="line">    BookMapper bookMapper;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Book&gt; <span class="title">getAllBooks</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> bookMapper.getAllBooks();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="Controller层使用"><a href="#Controller层使用" class="headerlink" title="Controller层使用"></a>Controller层使用</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">   BookService bookService;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/getBookListPage/&#123;pageNo&#125;"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> Object <span class="title">getBookList</span><span class="params">(@PathVariable <span class="keyword">int</span> pageNo)</span></span>&#123;</span><br><span class="line">       PageHelper.startPage(pageNo,<span class="number">2</span>);</span><br><span class="line">       <span class="comment">//查询语句紧跟PageHelper.startPage(pageNo,2);之后</span></span><br><span class="line">       List&lt;Book&gt; books=bookService.getAllBooks();</span><br><span class="line">       PageInfo&lt;Book&gt; bookPageInfo=<span class="keyword">new</span> PageInfo&lt;Book&gt;(books);</span><br><span class="line">       Map&lt;String,Object&gt; map=<span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">       map.put(<span class="string">"msg"</span>, <span class="string">"success"</span>);</span><br><span class="line">       map.put(<span class="string">"data"</span>, bookPageInfo);</span><br><span class="line">       map.put(<span class="string">"code"</span>, <span class="number">200</span>);</span><br><span class="line">       <span class="keyword">return</span> map;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="启动项目，访问Controller"><a href="#启动项目，访问Controller" class="headerlink" title="启动项目，访问Controller"></a>启动项目，访问Controller</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">msg: "success",</span><br><span class="line">code: 200,</span><br><span class="line">data: &#123;</span><br><span class="line">total: 6,</span><br><span class="line">list: [</span><br><span class="line">&#123;</span><br><span class="line">id: 1,</span><br><span class="line">name: "朝花夕拾",</span><br><span class="line">author: "鲁迅"</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">id: 3,</span><br><span class="line">name: "ccc",</span><br><span class="line">author: "ccc1"</span><br><span class="line">&#125;</span><br><span class="line">],</span><br><span class="line">pageNum: 1,</span><br><span class="line">pageSize: 2,</span><br><span class="line">size: 2,</span><br><span class="line">startRow: 1,</span><br><span class="line">endRow: 2,</span><br><span class="line">pages: 3,</span><br><span class="line">prePage: 0,</span><br><span class="line">nextPage: 2,</span><br><span class="line">isFirstPage: true,</span><br><span class="line">isLastPage: false,</span><br><span class="line">hasPreviousPage: false,</span><br><span class="line">hasNextPage: true,</span><br><span class="line">navigatePages: 8,</span><br><span class="line">navigatepageNums: [</span><br><span class="line">1,</span><br><span class="line">2,</span><br><span class="line"><span class="number">3</span></span><br><span class="line">],</span><br><span class="line">navigateFirstPage: 1,</span><br><span class="line">navigateLastPage: 3</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>google浏览器安装JsonView插件</title>
    <url>/post/f4543ee0.html</url>
    <content><![CDATA[<!-- build time:Sat Jan 16 2021 18:50:27 GMT+0800 (GMT+08:00) --><p>进入链接<a href="https://github.com/gildas-lormeau/JSONView-for-Chrome" target="_blank" rel="external nofollow noopener noreferrer">JsonView</a></p><img src="/post/f4543ee0/json.jpg" title="图片"><p>下载后解压</p><p>点击google浏览器右上角，更多工具》》扩展程序》》选择解压后的目录即可。</p><p>获取数据 返回的格式为:</p><img src="/post/f4543ee0/json2.jpg" title="图片2"><!-- rebuild by neat -->]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>centos7虚拟机设置固定ip</title>
    <url>/post/72a467c6.html</url>
    <content><![CDATA[<!-- build time:Sat Jan 16 2021 18:50:27 GMT+0800 (GMT+08:00) --><p><a href="https://www.cnblogs.com/lfhappy/p/10798400.html" target="_blank" rel="external nofollow noopener noreferrer">链接直达</a></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#编辑网络配置</span><br><span class="line">vi &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-ens33</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">TYPE&#x3D;Ethernet</span><br><span class="line">BOOTPROTO&#x3D;static</span><br><span class="line">DEFROUTE&#x3D;yes</span><br><span class="line">PEERDNS&#x3D;yes</span><br><span class="line">PEERROUTES&#x3D;yes</span><br><span class="line">IPV4_FAILURE_FATAL&#x3D;no</span><br><span class="line">#IPV6INIT&#x3D;yes</span><br><span class="line">#IPV6_AUTOCONF&#x3D;yes</span><br><span class="line">#IPV6_DEFROUTE&#x3D;yes</span><br><span class="line">#IPV6_PEERDNS&#x3D;yes</span><br><span class="line">#IPV6_PEERROUTES&#x3D;yes</span><br><span class="line">#IPV6_FAILURE_FATAL&#x3D;no</span><br><span class="line">#IPV6_ADDR_GEN_MODE&#x3D;stable-privacy</span><br><span class="line">#static ip</span><br><span class="line">IPADDR&#x3D;192.168.194.***</span><br><span class="line">NETMASK&#x3D;255.255.255.0</span><br><span class="line">GATEWAY&#x3D;192.168.194.2</span><br><span class="line">DNS1&#x3D;192.168.194.2</span><br><span class="line"></span><br><span class="line">IPV6_PEERDNS&#x3D;yes</span><br><span class="line">IPV6_PEERROUTES&#x3D;yes</span><br><span class="line">ZONE&#x3D;</span><br><span class="line"></span><br><span class="line">NAME&#x3D;ens33</span><br><span class="line">UUID&#x3D;2b5cf656-32da-406f-bfcb-97fcaf9570b0</span><br><span class="line">DEVICE&#x3D;ens33</span><br><span class="line">ONBOOT&#x3D;yes</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#重启网络配置</span><br><span class="line">systemctl restart network</span><br><span class="line">ip addr   </span><br><span class="line">[root@192 ~]# ip addr</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN qlen 1</span><br><span class="line">    link&#x2F;loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1&#x2F;8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1&#x2F;128 scope host </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000</span><br><span class="line">    link&#x2F;ether 00:0c:29:9a:14:dc brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.194.***&#x2F;24 brd 192.168.194.255 scope global ens33</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::20c:29ff:fe9a:14dc&#x2F;64 scope link </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">[root@192 ~]#</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>centos</tag>
        <tag>静态ip</tag>
      </tags>
  </entry>
  <entry>
    <title>本机能ping虚拟机 telnet不到虚拟机端口</title>
    <url>/post/a7ec9c11.html</url>
    <content><![CDATA[<!-- build time:Sat Jan 16 2021 18:50:27 GMT+0800 (GMT+08:00) --><h2 id="虚拟机能ping通-连接不上具体端口"><a href="#虚拟机能ping通-连接不上具体端口" class="headerlink" title="虚拟机能ping通 连接不上具体端口"></a>虚拟机能ping通 连接不上具体端口</h2><p>在本机cmd窗口执行命令</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ipconfig</span>/all</span><br></pre></td></tr></table></figure><p>查看vmnet8的端口ip</p><p>查看虚拟机ip</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure><p>发现ip相同 冲突了 。</p><h2 id="修改本机vmnet8ip"><a href="#修改本机vmnet8ip" class="headerlink" title="修改本机vmnet8ip"></a>修改本机vmnet8ip</h2><p>打开windows系统设置-更改网络适配器-右键属性</p><img src="/post/a7ec9c11/ip.jpg" title="ip设置"><p>修改ip 例如虚拟机ip为192.169.194.122</p><p>物理ip则修改为192.169.194.123即可</p><p>重启vmnet8服务后问题解决</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>bug解决大全</category>
      </categories>
      <tags>
        <tag>bug</tag>
        <tag>linux</tag>
        <tag>net</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot使用Swagger2文档访问404错误</title>
    <url>/post/3a300b1.html</url>
    <content><![CDATA[<!-- build time:Sat Jan 16 2021 18:50:27 GMT+0800 (GMT+08:00) --><h2 id="访问Swagger文档出现如下错误"><a href="#访问Swagger文档出现如下错误" class="headerlink" title="访问Swagger文档出现如下错误"></a>访问Swagger文档出现如下错误</h2><img src="/post/3a300b1/psc.jpg" title="截图"><p>添加WebMvcConfigurer配置类 继承 WebMvcConfigurationSupport</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebMvcConfigurer</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurationSupport</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 重新指定静态资源</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">addResourceHandlers</span><span class="params">(ResourceHandlerRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addResourceHandler(<span class="string">"/**"</span>).addResourceLocations(</span><br><span class="line">                <span class="string">"classpath:/static/"</span>);</span><br><span class="line">        registry.addResourceHandler(<span class="string">"swagger-ui.html"</span>).addResourceLocations(</span><br><span class="line">                <span class="string">"classpath:/META-INF/resources/"</span>);</span><br><span class="line">        registry.addResourceHandler(<span class="string">"/webjars/**"</span>).addResourceLocations(</span><br><span class="line">                <span class="string">"classpath:/META-INF/resources/webjars/"</span>);</span><br><span class="line">        <span class="keyword">super</span>.addResourceHandlers(registry);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="再次访问Swagger文档即可"><a href="#再次访问Swagger文档即可" class="headerlink" title="再次访问Swagger文档即可"></a>再次访问Swagger文档即可</h2><!-- rebuild by neat -->]]></content>
      <categories>
        <category>bug解决大全</category>
      </categories>
      <tags>
        <tag>bug</tag>
        <tag>springboot</tag>
        <tag>swagger</tag>
      </tags>
  </entry>
  <entry>
    <title>解决linux下mysql中文乱码</title>
    <url>/post/1856c8ad.html</url>
    <content><![CDATA[<!-- build time:Sat Jan 16 2021 18:50:27 GMT+0800 (GMT+08:00) --><h2 id="查询mysql字符集"><a href="#查询mysql字符集" class="headerlink" title="查询mysql字符集"></a>查询mysql字符集</h2><p>mysql -uroot -p 输入密码 登录mysql</p><p>查看server、数据库、表的字符集 默认为 latin1 插入中文会乱码</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; show variables like &#39;character_set_%&#39;;</span><br><span class="line">+--------------------------+----------------------------------+</span><br><span class="line">| Variable_name            | Value                            |</span><br><span class="line">+--------------------------+----------------------------------+</span><br><span class="line">| character_set_client     | latin1                           |</span><br><span class="line">| character_set_connection | latin1                           |</span><br><span class="line">| character_set_database   | latin1                           |</span><br><span class="line">| character_set_filesystem | binary                           |</span><br><span class="line">| character_set_results    | latin1                           |</span><br><span class="line">| character_set_server     | latin1                           |</span><br><span class="line">| character_set_system     | utf8                             |</span><br><span class="line">| character_sets_dir       | &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;share&#x2F;charsets&#x2F; |</span><br><span class="line">+--------------------------+----------------------------------+</span><br><span class="line">8 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><h2 id="添加-etc-my-cnf文件-设置字符集"><a href="#添加-etc-my-cnf文件-设置字符集" class="headerlink" title="添加  /etc/my.cnf文件    设置字符集"></a>添加 /etc/my.cnf文件 设置字符集</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># For advice on how to change settings please see</span><br><span class="line"># http:&#x2F;&#x2F;dev.mysql.com&#x2F;doc&#x2F;refman&#x2F;5.6&#x2F;en&#x2F;server-configuration-defaults.html</span><br><span class="line"># *** DO NOT EDIT THIS FILE. It&#39;s a template which will be copied to the</span><br><span class="line"># *** default location during install, and will be replaced if you</span><br><span class="line"># *** upgrade to a newer version of MySQL.</span><br><span class="line"></span><br><span class="line">[client]  </span><br><span class="line">default-character-set&#x3D;utf8</span><br><span class="line"></span><br><span class="line">[mysql]  </span><br><span class="line">default-character-set&#x3D;utf8</span><br><span class="line"></span><br><span class="line">[mysqld]  </span><br><span class="line">collation-server &#x3D; utf8_general_ci</span><br><span class="line">character-set-server &#x3D; utf8</span><br><span class="line"></span><br><span class="line"># Remove leading # and set to the amount of RAM for the most important data</span><br><span class="line"># cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.</span><br><span class="line"># innodb_buffer_pool_size &#x3D; 128M</span><br><span class="line"></span><br><span class="line"># Remove leading # to turn on a very important data integrity option: logging</span><br><span class="line"># changes to the binary log between backups.</span><br><span class="line"># log_bin</span><br><span class="line"></span><br><span class="line"># These are commonly set, remove the # and set as required.</span><br><span class="line"># basedir &#x3D; .....</span><br><span class="line"># datadir &#x3D; .....</span><br><span class="line"># port &#x3D; .....</span><br><span class="line"># server_id &#x3D; .....</span><br><span class="line"># socket &#x3D; .....</span><br><span class="line"></span><br><span class="line"># Remove leading # to set options mainly useful for reporting servers.</span><br><span class="line"># The server defaults are faster for transactions and fast SELECTs.</span><br><span class="line"># Adjust sizes as needed, experiment to find the optimal values.</span><br><span class="line"># join_buffer_size &#x3D; 128M</span><br><span class="line"># sort_buffer_size &#x3D; 2M</span><br><span class="line"># read_rnd_buffer_size &#x3D; 2M </span><br><span class="line"></span><br><span class="line">sql_mode&#x3D;NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</span><br></pre></td></tr></table></figure><p>重启mysql服务,再次查询 发现字符集为utf8 可插入一条sql语句进行测试</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; show variables like &#39;character_set_%&#39;;</span><br><span class="line">+--------------------------+----------------------------------+</span><br><span class="line">| Variable_name            | Value                            |</span><br><span class="line">+--------------------------+----------------------------------+</span><br><span class="line">| character_set_client     | utf8                             |</span><br><span class="line">| character_set_connection | utf8                             |</span><br><span class="line">| character_set_database   | utf8                             |</span><br><span class="line">| character_set_filesystem | binary                           |</span><br><span class="line">| character_set_results    | utf8                             |</span><br><span class="line">| character_set_server     | utf8                             |</span><br><span class="line">| character_set_system     | utf8                             |</span><br><span class="line">| character_sets_dir       | &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;share&#x2F;charsets&#x2F; |</span><br><span class="line">+--------------------------+----------------------------------+</span><br><span class="line">8 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      <categories>
        <category>bug解决大全</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>bug</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>github搭建hexo博客</title>
    <url>/post/5d5a4712.html</url>
    <content><![CDATA[<!-- build time:Sat Jan 16 2021 18:50:27 GMT+0800 (GMT+08:00) --><h2 id="hexo搭建-这里给出几条链接-前人栽树后人乘凉嘛hhhh"><a href="#hexo搭建-这里给出几条链接-前人栽树后人乘凉嘛hhhh" class="headerlink" title="hexo搭建(这里给出几条链接 (前人栽树后人乘凉嘛hhhh))"></a>hexo搭建(这里给出几条链接 (前人栽树后人乘凉嘛hhhh))</h2><p>搭建 hexo博客 需要 git、node.js环境</p><p><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external nofollow noopener noreferrer">hexo官方文档</a></p><p><a href="https://blog.csdn.net/Hanani_Jia/article/details/77950594" target="_blank" rel="external nofollow noopener noreferrer">github新手详细教程</a></p><p><a href="https://nodejs.org/zh-cn/" target="_blank" rel="external nofollow noopener noreferrer">node.js官网</a></p><p>这里有一个详细的链接 <a href="使用github+hexo搭建自己的博客网站">使用github+hexo搭建自己的博客网站</a></p><p>到这里呢 基本上是搭建好了 不喜欢作的话已经可以了（建议不要作~）</p><h2 id="下面呢是一些主题风格样式的设置"><a href="#下面呢是一些主题风格样式的设置" class="headerlink" title="下面呢是一些主题风格样式的设置"></a>下面呢是一些主题风格样式的设置</h2><p><a href="https://blog.csdn.net/weixin_43216105/article/details/83449928" target="_blank" rel="external nofollow noopener noreferrer">hexo新建博客页面和next主题相关配置</a></p><p>​ <a href="https://blog.csdn.net/u012195214/article/details/79204088" target="_blank" rel="external nofollow noopener noreferrer">next主题的设置 超详细</a></p><p><a href="https://www.cnblogs.com/TRHX/p/11699939.html" target="_blank" rel="external nofollow noopener noreferrer">Hexo 博客优化之博客美化系列（主要是背景呀 样式之类的）</a></p><p><a href="https://www.jianshu.com/p/d0e3b55684b0" target="_blank" rel="external nofollow noopener noreferrer">Hexo NexT主题中添加人体时钟 hone hone clock</a></p><p><a href="https://www.pianshen.com/article/3147325559/" target="_blank" rel="external nofollow noopener noreferrer">Hexo(next主题)博客加上stackexchange愚人节鼠标跟随特效</a></p><p><a href="https://blog.csdn.net/wugenqiang/article/details/88376089" target="_blank" rel="external nofollow noopener noreferrer">Hexo NexT主题内网站运行时间的设置</a></p><p><a href="https://blog.csdn.net/qq_33430083/article/details/105626840" target="_blank" rel="external nofollow noopener noreferrer">给Hexo博客在复制时添加版权声明</a></p><p><a href="https://cloud.tencent.com/developer/article/1482137" target="_blank" rel="external nofollow noopener noreferrer">Hexo Next主题 文章末尾添加版权信息</a></p><h2 id="hexo添加Aplayer播放器"><a href="#hexo添加Aplayer播放器" class="headerlink" title="hexo添加Aplayer播放器"></a>hexo添加Aplayer播放器</h2><p>​ 你可以按照<a href="https://aplayer.js.org/#/home" target="_blank" rel="external nofollow noopener noreferrer">官方文档</a>去研究一下,也可以直接拷贝我github上面的<a href="https://github.com/git-jzzz/git-jzzz.github.io/tree/hexo/source" target="_blank" rel="external nofollow noopener noreferrer">dist文件夹</a></p><p>​ 放到你hexo/source目录下,在你想要放入的位置引用即可</p><p>​ 自己写了一个<a href="https://github.com/git-jzzz/git-jzzz.github.io/tree/hexo/AudioManager" target="_blank" rel="external nofollow noopener noreferrer">aplayer的管理</a>,方便歌曲的添加删除，以及设置到music.js的具体目录</p><p>​ springboot+layuiAdmin前后端分离</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;&#x2F;dist&#x2F;APlayer.min.css&quot;&gt;</span><br><span class="line">&lt;div   id&#x3D;&quot;aplayer&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;dist&#x2F;APlayer.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;dist&#x2F;music.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!--aplayer封面自定义颜色   没啥用~--&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;color-thief-don@2.0.2&#x2F;src&#x2F;color-thief.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line"> &lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">&lt;!-- 根据封面自适应主题色，主要是作用于进度条 --&gt;</span><br><span class="line">                      const colorThief &#x3D; new ColorThief();</span><br><span class="line">                      const setTheme &#x3D; (index) &#x3D;&gt; &#123;</span><br><span class="line">                        if (!ap.list.audios[index].theme) &#123;</span><br><span class="line">                          colorThief.getColorAsync(ap.list.audios[index].cover, function(color) &#123;</span><br><span class="line">                            ap.theme(&#96;rgb($&#123;color[0]&#125;, $&#123;color[1]&#125;, $&#123;color[2]&#125;)&#96;, index);</span><br><span class="line">                          &#125;);</span><br><span class="line">                        &#125;</span><br><span class="line">                      &#125;;</span><br><span class="line">                      setTheme(ap.list.index);</span><br><span class="line">                      ap.on(&#39;listswitch&#39;, (data) &#x3D;&gt; &#123;</span><br><span class="line">                        setTheme(data.index);</span><br><span class="line">                      &#125;);</span><br><span class="line">                &lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>​ 没有问题的话已经可以播放歌曲了,不过切换页面时,歌曲都会被重置~</p><p>逼格顿时就下来了,所以如果你想让歌曲全局播放的话,可以用一个 iframe 把整个博客包起来,这样hexo页面的切换就不会影响到歌曲播放。</p><p>也可以让hexo全站实现pjax无刷新加载~~</p><h2 id="添加pjax实现页面无刷新加载"><a href="#添加pjax实现页面无刷新加载" class="headerlink" title="添加pjax实现页面无刷新加载"></a>添加pjax实现页面无刷新加载</h2><p>​ 目前看到的很多的pc端页面点击页面某块链接的时候，原本应该是页面的某个部分更新的，但是却整个页面刷新，整个页面都闪了一下。特别是看某些图集的页面，一个页面本来就几十张图看，看完眼睛都闪瞎了。用ajax加载数据可以解决这个问题，但是也会造成另外的问题，页面无法前进和后退。支持浏览器历史的， 刷新页面的同时， 浏览器地址栏位上面的地址也是会更改， 用浏览器的回退功能也能够回退到上一个页面。要实现这样的功能， pjax就应运而生。</p><p>​ 基于ajax+history.pushState的新技术，该技术可以无刷新改变页面的内容，并且可以改变页面的URL。HTML5的新API扩展了window.history，使历史记录点更加开放了。可以存储当前历史记录点、替换当前历史记录点、监听历史记录点。github上有开源 <a href="https://github.com/defunkt/jquery-pjax" target="_blank" rel="external nofollow noopener noreferrer">项目地址</a>,可以查看文档，不过已经很久没有更新了。</p><p>​ 这里写了一个小例子</p><p>​ 当点击超链接时 pjax会获取url 发送返回后获取html片段</p><p>​ #pjax-container代表此页面接收的容器</p><p>​ fragment属性 代表 获取属性fragment对应容器的html 填充到#pjax-container</p><p>​ 不过运用到hexo中可能会有很多的js需要回调 需要手动填写回调函数,否则就失效了</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.4.1.min.js"</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/jquery.pjax.js"</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">(<span class="function"><span class="keyword">function</span> <span class="params">($)</span> </span>&#123;</span></span><br><span class="line">   </span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> containerId = <span class="string">'#pjax-comment'</span>;</span></span><br><span class="line">/**</span><br><span class="line">* 捕获 a 事件，当点击后要在 300 毫秒以后才会跳转。</span><br><span class="line">*/</span><br><span class="line"><span class="javascript">$(<span class="built_in">document</span>).on(<span class="string">'click'</span>, <span class="string">'a[target!=_blank]'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//$("#pjax-container").fadeOut();</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//NProgress.start();</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> url = $(<span class="keyword">this</span>).attr(<span class="string">"href"</span>);</span></span><br><span class="line"><span class="actionscript">    setTimeout(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line"><span class="actionscript">	<span class="comment">//$(document).pjax('a[target!=_blank]', '#pjax-container', &#123;fragment: '#pjax-container',timeout: 30000&#125;);	</span></span></span><br><span class="line"><span class="javascript">        $.pjax(&#123; <span class="attr">url</span>: url, <span class="attr">container</span>: containerId, <span class="attr">fragment</span>:containerId, <span class="attr">timeout</span>: <span class="number">30000</span> &#125;);</span></span><br><span class="line">    &#125;, 300);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#125;)(jQuery);</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">		POPOPO</span><br><span class="line">		</span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"pjax-comment"</span>&gt;</span></span><br><span class="line">				这是test1<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"test2.html"</span>&gt;</span>&gt;&gt;&gt;test2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.4.1.min.js"</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/jquery.pjax.js"</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="css">			<span class="selector-id">#pjax-comment</span>&#123;</span></span><br><span class="line">				color: red;</span><br><span class="line">			&#125;</span><br><span class="line">		<span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">				</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">(<span class="function"><span class="keyword">function</span> <span class="params">($)</span> </span>&#123;</span></span><br><span class="line">   </span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> containerId = <span class="string">'#pjax-comment'</span>;</span></span><br><span class="line">/**	</span><br><span class="line">* 捕获 a 事件，当点击后要在 300 毫秒以后才会跳转。</span><br><span class="line">*/</span><br><span class="line"><span class="javascript">$(<span class="built_in">document</span>).on(<span class="string">'click'</span>, <span class="string">'a[target!=_blank]'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//$("#pjax-container").fadeOut();</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//NProgress.start();</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> url = $(<span class="keyword">this</span>).attr(<span class="string">"href"</span>);</span></span><br><span class="line"><span class="actionscript">    setTimeout(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line"><span class="actionscript">	<span class="comment">//$(document).pjax('a[target!=_blank]', '#pjax-container', &#123;fragment: '#pjax-container',timeout: 30000&#125;);	</span></span></span><br><span class="line"><span class="javascript">        $.pjax(&#123; <span class="attr">url</span>: url, <span class="attr">container</span>: containerId, <span class="attr">fragment</span>:containerId, <span class="attr">timeout</span>: <span class="number">30000</span> &#125;);</span></span><br><span class="line">    &#125;, 300);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#125;)(jQuery);</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">		</span><br><span class="line">		DUUDUD</span><br><span class="line">			</span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"pjax-comment"</span>&gt;</span></span><br><span class="line">				这是test2<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"test1.html"</span>&gt;</span>返回test1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​ 上面的js在<a href="https://github.com/git-jzzz/git-jzzz.github.io/tree/master/js/src" target="_blank" rel="external nofollow noopener noreferrer">我的github</a>上有,这里提供一个loading加载动画:</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, minimum-scale=1.0, maximum-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>loading加载动画<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"https://www.17sucai.com/static/css/demo.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">media</span>=<span class="string">"all"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--[if IE]&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &lt;style type="text/css"&gt;</span></span><br><span class="line"><span class="comment">        li.remove_frame a &#123;</span></span><br><span class="line"><span class="comment">            padding-top: 5px;</span></span><br><span class="line"><span class="comment">            background-position: 0px -3px;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &lt;/style&gt;</span></span><br><span class="line"><span class="comment">    &lt;![endif]--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://hm.baidu.com/hm.js?382f81c966395258f239157654081890"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"https://www.17sucai.com/static/js/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"https://www.17sucai.com/static/js/jquery.qrcode.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">fixHeight</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">"#iframe"</span>).attr(<span class="string">"height"</span>, $(<span class="built_in">window</span>).height()<span class="number">-54</span>+ <span class="string">"px"</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            $(<span class="built_in">window</span>).resize(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line">                fixHeight();</span><br><span class="line">            &#125;).resize();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">//隐藏</span></span></span><br><span class="line">            clicktoLoadingHide();</span><br><span class="line"><span class="actionscript">            setTimeout(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//  加载</span></span></span><br><span class="line">                clicktoLoading();</span><br><span class="line">            &#125;,5000)</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">Responsive</span><span class="params">($a)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span> ($a == <span class="literal">true</span>) $(<span class="string">"#Device"</span>).css(<span class="string">"opacity"</span>, <span class="string">"100"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span> ($a == <span class="literal">false</span>) $(<span class="string">"#Device"</span>).css(<span class="string">"opacity"</span>, <span class="string">"0"</span>);</span></span><br><span class="line"><span class="javascript">            $(<span class="string">'#iframe-wrap'</span>).removeClass().addClass(<span class="string">'full-width'</span>);</span></span><br><span class="line"><span class="javascript">            $(<span class="string">'.icon-tablet,.icon-mobile-1,.icon-monitor,.icon-mobile-2,.icon-mobile-3'</span>).removeClass(<span class="string">'active'</span>);</span></span><br><span class="line"><span class="javascript">            $(<span class="keyword">this</span>).addClass(<span class="string">'active'</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">        &#125;;</span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">clicktoLoading</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">"#iframe-wrap,#iframe"</span>).css(<span class="string">"display"</span>,<span class="string">"block"</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">clicktoLoadingHide</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">"#iframe-wrap,#iframe"</span>).css(<span class="string">"display"</span>,<span class="string">"none"</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">id</span>=<span class="string">"by"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"iframe-wrap"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">id</span>=<span class="string">"iframe"</span> <span class="attr">src</span>=<span class="string">"https://www.17sucai.com/preview/602230/2019-07-15/loading/index.html"</span> <span class="attr">frameborder</span>=<span class="string">"0"</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"97px"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​ 按照自己的需要放入到pjax的函数中：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// pjax请求开始</span></span><br><span class="line">            $(<span class="built_in">document</span>).on(<span class="string">'pjax:start'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">				clicktoLoading();</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="comment">// PJAX 渲染结束时</span></span><br><span class="line">            $(<span class="built_in">document</span>).on(<span class="string">'pjax:end'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                clicktoLoadingHide();</span><br><span class="line">				</span><br><span class="line">				<span class="comment">//这里可以进行一些组件的函数回调</span></span><br><span class="line">                opacity_js();</span><br><span class="line">                sidebar_show();</span><br><span class="line">                valine();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>​ 样式丢失</p><p>​ 当我的hexo使用pjax时出现了一些bug,比如评论不加载、文章无内容、侧边栏消失,估计应该是hexo加载css是模板的原因吧,所以样式丢失,无效。这里记录一下:</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">opacity_js</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="comment">//文章不显示</span></span><br><span class="line">    $(<span class="string">".post-block"</span>).css(&#123;<span class="attr">opacity</span>: <span class="number">1</span>&#125;);</span><br><span class="line">    $(<span class="string">".post-header"</span>).css(&#123;<span class="attr">opacity</span>: <span class="number">1</span>&#125;);</span><br><span class="line">    $(<span class="string">".post-body"</span>).css(&#123;<span class="attr">opacity</span>: <span class="number">1</span>&#125;);</span><br><span class="line">    $(<span class="string">".pagination"</span>).css(&#123;<span class="attr">opacity</span>: <span class="number">1</span>&#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//侧边栏</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sidebar_show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//侧边栏不显示</span></span><br><span class="line">	$(<span class="string">"#sidebar"</span>).css(&#123;<span class="string">"margin-top"</span>:<span class="string">"358px"</span>,<span class="string">"margin-left"</span>:<span class="string">"initial"</span>,<span class="string">"opacity"</span>:<span class="string">"1"</span>&#125;);</span><br><span class="line">	$(<span class="string">".sidebar-inner"</span>).css(&#123;<span class="string">"display"</span>:<span class="string">"block"</span>,<span class="string">"transform"</span>:<span class="string">"initial"</span>,<span class="string">"opacity"</span>:<span class="string">"1"</span>&#125;);</span><br><span class="line">	$(<span class="string">".site-overview"</span>).css(&#123;<span class="string">"opacity"</span>:<span class="string">"1"</span>&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">//点击切换侧边栏样式</span></span><br><span class="line">				$(<span class="string">"[data-target='post-toc-wrap']"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">				$(<span class="string">"[data-target='post-toc-wrap']"</span>).css(&#123;<span class="string">"color"</span>:<span class="string">"#fc6423"</span>,<span class="string">"border-bottom-color"</span>:<span class="string">"#fc6423"</span>&#125;);</span><br><span class="line">				$(<span class="string">"[data-target='site-overview-wrap']"</span>).css(&#123;<span class="string">"color"</span>:<span class="string">"#555"</span>,<span class="string">"border-bottom-color"</span>:<span class="string">"transparent"</span>&#125;);</span><br><span class="line">				$(<span class="string">".post-toc-wrap"</span>).css(&#123;<span class="string">"opacity"</span>:<span class="string">"1"</span>,<span class="string">"transform"</span>:<span class="string">"translateY(0px)"</span>,<span class="string">"display"</span>:<span class="string">"block"</span>&#125;);</span><br><span class="line">							$(<span class="string">".site-overview-wrap"</span>).css(&#123;<span class="string">"opacity"</span>:<span class="string">"0"</span>,<span class="string">"transform"</span>:<span class="string">"translateY(0px)"</span>,<span class="string">"display"</span>:<span class="string">"none"</span>&#125;);</span><br><span class="line">				&#125;)</span><br><span class="line"></span><br><span class="line">				$(<span class="string">"[data-target='site-overview-wrap']"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">				$(<span class="string">"[data-target='site-overview-wrap']"</span>).css(&#123;<span class="string">"color"</span>:<span class="string">"#fc6423"</span>,<span class="string">"border-bottom-color"</span>:<span class="string">"#fc6423"</span>&#125;);</span><br><span class="line">				$(<span class="string">"[data-target='post-toc-wrap']"</span>).css(&#123;<span class="string">"color"</span>:<span class="string">"#555"</span>,<span class="string">"border-bottom-color"</span>:<span class="string">"transparent"</span>&#125;);</span><br><span class="line">				$(<span class="string">".post-toc-wrap"</span>).css(&#123;<span class="string">"opacity"</span>:<span class="string">"0"</span>,<span class="string">"transform"</span>:<span class="string">"translateY(0px)"</span>,<span class="string">"display"</span>:<span class="string">"none"</span>&#125;);</span><br><span class="line">				$(<span class="string">".site-overview-wrap"</span>).css(&#123;<span class="string">"opacity"</span>:<span class="string">"1"</span>,<span class="string">"transform"</span>:<span class="string">"translateY(0px)"</span>,<span class="string">"display"</span>:<span class="string">"block"</span>&#125;);</span><br><span class="line">				&#125;)</span><br><span class="line">				<span class="comment">//滚动条事件  固定侧边栏</span></span><br><span class="line">					$(<span class="built_in">document</span>).scroll(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">						<span class="keyword">var</span> scroH = $(<span class="built_in">document</span>).scrollTop();</span><br><span class="line">						<span class="keyword">if</span>(scroH&gt;=<span class="number">346</span>)&#123;</span><br><span class="line">							$(<span class="string">".sidebar-inner"</span>).css(&#123;<span class="string">"position"</span>:<span class="string">"fixed"</span>,<span class="string">"top"</span>:<span class="string">"12px"</span>&#125;);</span><br><span class="line">						&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">						$(<span class="string">".sidebar-inner"</span>).css(&#123;<span class="string">"position"</span>:<span class="string">"initial"</span>&#125;);</span><br><span class="line">						&#125;</span><br><span class="line">						&#125;);</span><br><span class="line"></span><br><span class="line">						<span class="comment">//侧边栏悬浮时样式判断</span></span><br><span class="line">				$(<span class="string">"[data-target='post-toc-wrap'],[data-target='site-overview-wrap']"</span>).hover(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">				<span class="keyword">if</span>($(<span class="keyword">this</span>).css(<span class="string">"border-bottom-color"</span>)!=<span class="string">"rgb(252, 100, 35)"</span>)&#123;</span><br><span class="line">					$(<span class="keyword">this</span>).css(<span class="string">"color"</span>,<span class="string">"#fc6423"</span>);</span><br><span class="line">				&#125;</span><br><span class="line"></span><br><span class="line">			&#125;,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">					<span class="keyword">if</span>($(<span class="keyword">this</span>).css(<span class="string">"border-bottom-color"</span>)!=<span class="string">"rgb(252, 100, 35)"</span>)&#123;</span><br><span class="line">					  $(<span class="keyword">this</span>).css(<span class="string">"color"</span>,<span class="string">"#555"</span>);<span class="comment">//非 hover时效果</span></span><br><span class="line">				&#125;</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">valine</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//valine评论</span></span><br><span class="line">			<span class="keyword">if</span>($(<span class="string">"#comments"</span>).length&gt;<span class="number">0</span>)&#123;</span><br><span class="line">			<span class="built_in">console</span>.log(<span class="string">"valine 重载"</span>);</span><br><span class="line">			<span class="keyword">var</span> GUEST = [<span class="string">'nick'</span>,<span class="string">'mail'</span>,<span class="string">'link'</span>];</span><br><span class="line">    <span class="keyword">var</span> guest = <span class="string">'nick,mail,link'</span>;</span><br><span class="line">    guest = guest.split(<span class="string">','</span>).filter(<span class="function"><span class="params">item</span>=&gt;</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> GUEST.indexOf(item)&gt;<span class="number">-1</span>;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">   <span class="built_in">window</span>.valine= <span class="keyword">new</span> Valine(&#123;</span><br><span class="line">        el: <span class="string">'#comments'</span> ,</span><br><span class="line">        verify: <span class="literal">false</span>,</span><br><span class="line">        notify: <span class="literal">false</span>,</span><br><span class="line">        appId: <span class="string">'M7OkzmDiLVfdEb2n2QPsyVBR-gzGzoHsz'</span>,</span><br><span class="line">        appKey: <span class="string">'KKlp9GtMfNQQAjFzcIBSseJo'</span>,</span><br><span class="line">        placeholder: <span class="string">'Just go go ~~'</span>,</span><br><span class="line">        avatar:<span class="string">'robohash'</span>,</span><br><span class="line">        guest_info:guest,</span><br><span class="line">        pageSize:<span class="string">'10'</span> || <span class="number">10</span>,</span><br><span class="line">		 recordIP: <span class="literal">true</span>,</span><br><span class="line">		path: <span class="built_in">window</span>.location.pathname</span><br><span class="line">    &#125;);</span><br><span class="line">			&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="看到左下角那个萌萌哒的小萝莉了吗"><a href="#看到左下角那个萌萌哒的小萝莉了吗" class="headerlink" title="看到左下角那个萌萌哒的小萝莉了吗?"></a>看到左下角那个萌萌哒的小萝莉了吗?</h2><p>以下代码放到你所需要的位置即可:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> &lt;!--Live-2D看板娘模型--&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;eqcn.ajz.miesnfu.com&#x2F;wp-content&#x2F;plugins&#x2F;wp-3d-pony&#x2F;live2dw&#x2F;lib&#x2F;L2Dwidget.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;!--Live-2D看板娘模型--&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">    &#x2F;&#x2F;Live-2D看板娘模型</span><br><span class="line">    L2Dwidget.init(&#123;</span><br><span class="line">        model: &#123;</span><br><span class="line">            &#x2F;&#x2F;jsonpath控制显示那个小萝莉模型 &#x2F;&#x2F;hijiki hibiki  z16  &#x2F;&#x2F;izumi &#x2F;&#x2F;shizuku &#x2F;&#x2F;koharu</span><br><span class="line">            jsonPath: &quot;https:&#x2F;&#x2F;unpkg.com&#x2F;live2d-widget-model-koharu@1.0.5&#x2F;assets&#x2F;koharu.model.json&quot;, &#x2F;&#x2F;这里改模型，前面后面都要改</span><br><span class="line">            scale: 1,</span><br><span class="line">        &#125;,</span><br><span class="line">        display: &#123;</span><br><span class="line">            position: &quot;left&quot;, &#x2F;&#x2F;设置看板娘的上下左右位置</span><br><span class="line"></span><br><span class="line">            width: 120,  &#x2F;&#x2F;小萝莉的宽度</span><br><span class="line">            height: 200, &#x2F;&#x2F;小萝莉的高度</span><br><span class="line">            hOffset: 80,  &#x2F;&#x2F;水平偏移</span><br><span class="line">            vOffset: 10  &#x2F;&#x2F;垂直偏移</span><br><span class="line">        &#125;,</span><br><span class="line">        mobile: &#123;</span><br><span class="line">            show: true,  &#x2F;&#x2F;在移动端显示</span><br><span class="line">            scale: 0.5   &#x2F;&#x2F;移动设备上的缩放</span><br><span class="line">        &#125;,</span><br><span class="line">        react: &#123;</span><br><span class="line">            opacityDefault: 0.9, &#x2F;&#x2F;设置透明度</span><br><span class="line">            opacityOnHover: 0.2</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h2 id="hexo源码保存"><a href="#hexo源码保存" class="headerlink" title="hexo源码保存:"></a>hexo源码保存:</h2><p>​ hexo默认上传的是编译后的文件,源码是不上传的,如果这时候电脑坏了，那么就会导致之前的配置丢失,就很麻烦,所以我们可以把hexo源码也保存到git:但是再开一个git项目优点多余了,所以我们可以将hexo源码保存到此项目分支中保存,每次更改配置后就可以直接上传.</p><p>在hexo根目录执行:</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">git</span> <span class="string">init</span></span><br><span class="line"><span class="string">git</span> <span class="string">remote</span> <span class="string">add</span> <span class="string">origin</span> <span class="string">git@github.com:username/username.github.io.git</span> <span class="comment">#添加远程仓库</span></span><br><span class="line"><span class="string">git</span> <span class="string">checkout</span> <span class="string">-b</span> <span class="string">name</span> <span class="comment">#新建分支并切换到该分支</span></span><br><span class="line"><span class="string">git</span> <span class="string">add</span> <span class="string">.</span> <span class="comment">#提交所有文件到暂存区</span></span><br><span class="line"><span class="string">git</span> <span class="string">commit</span> <span class="string">-m</span> <span class="string">"提交hexo源码"</span> <span class="comment">#提交文件</span></span><br><span class="line"><span class="string">git</span> <span class="string">push</span> <span class="string">origin</span> <span class="string">name</span> <span class="comment">#推送分支到github</span></span><br></pre></td></tr></table></figure><p>现在github上就有hexo的源码了 可以设置默认分支为此分支:<a href="https://blog.csdn.net/newbunny/article/details/97106033" target="_blank" rel="external nofollow noopener noreferrer">git修改分支</a></p><p>如果你的主题是直接clone下来的 是无法直接提交的</p><p>使用git submodule 实现第三方主题同步:</p><p>我们可以把主题的仓库Fork到自己的仓库 然后备份你之前的主题文件</p><p>hexo根目录 git clone 自己账号下的主题url,以next主题为例:</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">git submodule add git@github.com:username/hexo-theme-next.git themes/next</span><br></pre></td></tr></table></figure><p>如果报错 ‘themes/next’ already exists in the index:</p><p>解决方案:</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">git</span> <span class="string">rm</span> <span class="string">-r</span> <span class="string">--cached</span> <span class="string">themes/next</span></span><br></pre></td></tr></table></figure><p>hexo根目录会多一个.gitmodules文件,这是一个配置文件,保存了项目url和子目录</p><p>然后推送到分支:</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">git</span> <span class="string">add</span> <span class="string">.</span></span><br><span class="line"><span class="string">git</span> <span class="string">commit</span> <span class="string">-m</span> <span class="string">"添加子模块"</span></span><br><span class="line"><span class="string">git</span> <span class="string">push</span> <span class="string">origin</span> <span class="string">name</span></span><br></pre></td></tr></table></figure><p>如果主题有更改时，在主题根目录下执行:</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">git</span> <span class="string">add</span> <span class="string">.</span></span><br><span class="line"><span class="string">git</span> <span class="string">commit</span> <span class="string">-m</span> <span class="string">"提交主题更改“</span></span><br><span class="line"><span class="string">git push origin master #推送主题到github</span></span><br></pre></td></tr></table></figure><p>换电脑时:</p><p>安装node.js 和 git</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-cli</span> <span class="string">-g</span> <span class="comment">#安装hexo脚手架</span></span><br><span class="line"><span class="string">git</span> <span class="string">clone</span> <span class="string">git@github.com:username/username.github.io.git</span>  <span class="comment">#下载你的hexo项目  设置了默认分支的话 直接下载</span></span><br><span class="line"><span class="string">git</span> <span class="string">submodule</span> <span class="string">update</span> <span class="string">--init</span></span><br><span class="line"><span class="string">cd</span> <span class="string">themes/next</span></span><br><span class="line"><span class="string">git</span> <span class="string">pull</span> <span class="string">origin</span> <span class="string">master</span> <span class="comment">#获取最新配置</span></span><br><span class="line"><span class="string">npm</span> <span class="string">i</span> <span class="comment">#安装依赖</span></span><br><span class="line"><span class="string">hexo</span> <span class="string">s</span> <span class="comment">#启动hexo本地服务器</span></span><br></pre></td></tr></table></figure><h2 id="hexo以及github访问太慢的问题"><a href="#hexo以及github访问太慢的问题" class="headerlink" title="hexo以及github访问太慢的问题:"></a>hexo以及github访问太慢的问题:</h2><p>github的CDN被墙了，由于网络代理商的原因，所以访问下载很慢，我们可以绕过dns解析；</p><p>直接在本地绑定host</p><p>前往<a href="http://tool.chinaz.com/" target="_blank" rel="external nofollow noopener noreferrer">站长之家</a>查询你对应的 username.github.io 解析dns 复制最快的解析</p><p>打开 C:\Windows\System32\drivers\etc\host 文件 写入；</p><p>如:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"># GItHub</span><br><span class="line">185.199.111.153	git-jzzz.github.io</span><br><span class="line">13.229.188.59	github.com</span><br><span class="line">199.232.5.194	github.global.ssl.fastly.net</span><br><span class="line"></span><br><span class="line">103.245.222.133 assets-cdn.github.com</span><br><span class="line">23.235.47.133 assets-cdn.github.com</span><br><span class="line">203.208.39.104 assets-cdn.github.com</span><br><span class="line">204.232.175.78 documentcloud.github.com</span><br><span class="line">204.232.175.94 gist.github.com</span><br><span class="line">107.21.116.220 help.github.com</span><br><span class="line">207.97.227.252 nodeload.github.com</span><br><span class="line">199.27.76.130 raw.github.com	</span><br><span class="line">107.22.3.110 status.github.com</span><br><span class="line">204.232.175.78 training.github.com</span><br><span class="line">207.97.227.243 www.github.com</span><br><span class="line">185.31.16.184 github.global.ssl.fastly.net</span><br><span class="line">185.31.18.133 avatars0.githubusercontent.com</span><br><span class="line">185.31.19.133 avatars1.githubusercontent.com</span><br></pre></td></tr></table></figure><p>windows打开cmd控制器 输入ipconfig /flushdns 刷新dns 再次访问 速度有很大提升；</p><p>有时候也因为生成的html文件有大量空白,一定程度上也会影响网页的加载,所以我们可以对文件进行压缩:</p><p><a href="https://blog.csdn.net/lewky_liu/article/details/82432003" target="_blank" rel="external nofollow noopener noreferrer">使用hexo-neat插件压缩页面静态资源</a></p><h2 id="自定义域名、github-coding双线部署加速"><a href="#自定义域名、github-coding双线部署加速" class="headerlink" title="自定义域名、github/coding双线部署加速:"></a>自定义域名、github/coding双线部署加速:</h2><p>github毕竟是国外的网站，访问起来经常丢失，很恼火呀有木有，所以我们可以使hexo双线部署</p><p>国内访问coding ,国外访问github,提高访问速度</p><p>链接码上:</p><p><a href="[https://jzzs.coding.net](https://jzzs.coding.net/)">coding首页</a> <a href="https://dns.console.aliyun.com/#/dns/domainList" target="_blank" rel="external nofollow noopener noreferrer">阿里云解析</a></p><p><a href="https://blog.csdn.net/a1064072510/article/details/90442555" target="_blank" rel="external nofollow noopener noreferrer">CSDN 博客园，简书 主页 自定义域名</a> <a href="https://blog.csdn.net/xfdywy/article/details/79720070" target="_blank" rel="external nofollow noopener noreferrer">hexo自定义域名以及解析</a></p><p><a href="https://www.cnblogs.com/sunhang32/p/11969964.html" target="_blank" rel="external nofollow noopener noreferrer">加速自己的hexo，使用GitHub+Coding实现国内外网站加速</a></p><h2 id="hexo部署到Vercel"><a href="#hexo部署到Vercel" class="headerlink" title="hexo部署到Vercel"></a>hexo部署到Vercel</h2><p>———————————————更新———————————————</p><p>​ 经过部署之后呢 还没到朋友面前装逼 问题来了 由于github经常被墙，访问速度是很慢的。。。。。。</p><p>coding吧，也好不了多少 一天给你断个百分之八十的访问吧。。。。这就很烦啦，直接无响应啊喂！！！！！</p><p>比较无语 辛辛苦苦弄了好几天 难道只能本地访问,自然是不甘心的…所以疯狂找&gt;&gt;&gt;&gt;&gt;<a href="https://www.baidu.com/" target="_blank" rel="external nofollow noopener noreferrer">度娘</a></p><p>解决方式呢 自然是有的！</p><p>1:买台服务器部署 2:部署在<a href="https://gitee.com/" target="_blank" rel="external nofollow noopener noreferrer">码云</a>上</p><p>​ 很遗憾,作为一个白嫖党,是付不起服务器这个钱的， 何况我搭个博客 说不定后天就没兴致了（狗头）对吧。部署在码云上，作为中国的github，访问速度自然是飞快，但是自定义域名需要99rmb开通标准版才能….咳咳咳</p><p>​ 所以呢经过多次百度百科之后，瞅见了Vercel<a href="https://vercel.com" target="_blank" rel="external nofollow noopener noreferrer">官网</a>。Vercel:原名Zeit Now 更改了名字 但是服务没改,依旧可以托管我们的静态网页: 到这里了,相信你已经拥有了一个github仓库了吧&gt;&gt;&gt;访问<a href="https://vercel.com" target="_blank" rel="external nofollow noopener noreferrer">官网</a>:</p><img src="/post/5d5a4712/1.PNG" title="login"><img src="/post/5d5a4712/2.PNG" title="选择github">选择github登录<p>导入仓库<img src="/post/5d5a4712/3.PNG" title="import"> 选择导入github仓库 <img src="/post/5d5a4712/4.PNG" title="github项目"></p><p>选择你的hexo项目地址 记住 这里的项目是你提交的静态文件 如果你和我一样把hexo源文件放在一起 就先去github设置你的默认分支为 博客静态文件那个分支 否则导入则会失败 之后再设置回来即可</p><img src="/post/5d5a4712/5.PNG" title="select"><p>可以把项目名换掉<del>等待一段时间 导入就会成功啦。 这时候你可以通过右边的链接访问你的博客啦</del></p><img src="/post/5d5a4712/6.PNG" title="访问地址"><p>​ 当然你也可以通过项目的 Setting》》》Domains 填写你的域名 Add即可 会叫你解析 但是我试了下 比他自己的有时候要慢一点,可能因为域名也是白嫖来的hhhh。</p><p>​ 可以通过 <a href="https://tool.chinaz.com/dns/" target="_blank" rel="external nofollow noopener noreferrer">站长工具</a>查询网站速度~可以看到访问速度有很大的提升！</p><img src="/post/5d5a4712/7.PNG" title="查询速度"><p>所以你如果想自定义域名的话,解析域名那里 把github的二级域名设置为国外就行了</p><p>这样国内访问你的域名是访问的是Vercel提供的,国外访问你的域名则是github提供(hhhhh你可以去 <a href="https://tool.chinaz.com/dns/" target="_blank" rel="external nofollow noopener noreferrer">站长工具</a>设置国内国外都去访问一下你的域名~</p><p>如果要更改github.io 域名 Custom domain修改 CNAME文件修改</p><p>一般还会指向你之前的域名 只要清空浏览器缓存就可以了。</p><hr><p>我觉得吧 貌似 username.github.io可以关闭呀..Vercel全球网速感觉都可以 就没必把域名开着了..</p><p>搞不太懂….. 还有username.github.io转过来域名是不是访问的github上的服务器呢。唔…..</p><h2 id="hexo提交搜索引擎"><a href="#hexo提交搜索引擎" class="headerlink" title="hexo提交搜索引擎"></a>hexo提交搜索引擎</h2><p>到了这里，离装逼还差最后一步 引擎是搜索不到你的博客的</p><p>链接:</p><p><a href="https://www.cnblogs.com/tengj/p/5357879.html" target="_blank" rel="external nofollow noopener noreferrer">hexo提交搜索引擎</a></p><p><a href="https://blog.csdn.net/lzy98/article/details/81140704" target="_blank" rel="external nofollow noopener noreferrer">HEXO SEO 高级优化</a></p><p>等啊等啊等吧………</p><blockquote><p>jzzaiyx</p></blockquote><!-- rebuild by neat -->]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>Begin</title>
    <url>/post/bb44ba11.html</url>
    <content><![CDATA[<!-- build time:Sat Jan 16 2021 18:50:27 GMT+0800 (GMT+08:00) --><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a><strong>测试</strong></h1><img src="/post/bb44ba11/head.jpg" title="头像"><!-- rebuild by neat -->]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/now.json</url>
    <content><![CDATA[{"version":2,"routes":[{"handle":"filesystem"},{"src":"/(.*)","status":404,"dest":"/404.html"}]}]]></content>
  </entry>
  <entry>
    <title>about</title>
    <url>/about/index.html</url>
    <content><![CDATA[<!-- build time:Sat Jan 16 2021 18:50:27 GMT+0800 (GMT+08:00) --><!-- rebuild by neat -->]]></content>
  </entry>
  <entry>
    <title>categories</title>
    <url>/categories/index.html</url>
    <content><![CDATA[<!-- build time:Sat Jan 16 2021 18:50:27 GMT+0800 (GMT+08:00) --><!-- rebuild by neat -->]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/dist/APlayer.min.css</url>
    <content><![CDATA[.aplayer{background:#fff;font-family:Arial,Helvetica,sans-serif;margin:5px;box-shadow:0 2px 2px 0 rgba(0,0,0,.07),0 1px 5px 0 rgba(0,0,0,.1);border-radius:2px;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;line-height:normal;position:relative}.aplayer *{box-sizing:content-box}.aplayer svg{width:100%;height:100%}.aplayer svg circle,.aplayer svg path{fill:#fff}.aplayer.aplayer-withlist .aplayer-info{border-bottom:1px solid #e9e9e9}.aplayer.aplayer-withlist .aplayer-list{display:block}.aplayer.aplayer-withlist .aplayer-icon-order,.aplayer.aplayer-withlist .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon.aplayer-icon-menu{display:inline}.aplayer.aplayer-withlrc .aplayer-pic{height:90px;width:90px}.aplayer.aplayer-withlrc .aplayer-info{margin-left:90px;height:90px;padding:10px 7px 0}.aplayer.aplayer-withlrc .aplayer-lrc{display:block}.aplayer.aplayer-narrow{width:66px}.aplayer.aplayer-narrow .aplayer-info,.aplayer.aplayer-narrow .aplayer-list{display:none}.aplayer.aplayer-narrow .aplayer-body,.aplayer.aplayer-narrow .aplayer-pic{height:66px;width:66px}.aplayer.aplayer-fixed{position:fixed;bottom:0;left:0;right:0;margin:0;z-index:99;overflow:visible;max-width:400px;box-shadow:none}.aplayer.aplayer-fixed .aplayer-list{margin-bottom:65px;border:1px solid #eee;border-bottom:none}.aplayer.aplayer-fixed .aplayer-body{position:fixed;bottom:0;left:0;right:0;margin:0;z-index:99;background:#fff;padding-right:18px;transition:all .3s ease;max-width:400px}.aplayer.aplayer-fixed .aplayer-lrc{display:block;position:fixed;bottom:10px;left:0;right:0;margin:0;z-index:98;pointer-events:none;text-shadow:-1px -1px 0 #fff}.aplayer.aplayer-fixed .aplayer-lrc:after,.aplayer.aplayer-fixed .aplayer-lrc:before{display:none}.aplayer.aplayer-fixed .aplayer-info{-webkit-transform:scaleX(1);transform:scaleX(1);-webkit-transform-origin:0 0;transform-origin:0 0;transition:all .3s ease;border-bottom:none;border-top:1px solid #e9e9e9}.aplayer.aplayer-fixed .aplayer-info .aplayer-music{width:calc(100% - 105px)}.aplayer.aplayer-fixed .aplayer-miniswitcher{display:block}.aplayer.aplayer-fixed.aplayer-narrow .aplayer-info{display:block;-webkit-transform:scaleX(0);transform:scaleX(0)}.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body{width:66px!important}.aplayer.aplayer-fixed.aplayer-narrow .aplayer-miniswitcher .aplayer-icon{-webkit-transform:rotateY(0);transform:rotateY(0)}.aplayer.aplayer-fixed .aplayer-icon-back,.aplayer.aplayer-fixed .aplayer-icon-forward,.aplayer.aplayer-fixed .aplayer-icon-lrc,.aplayer.aplayer-fixed .aplayer-icon-play{display:inline-block}.aplayer.aplayer-fixed .aplayer-icon-back,.aplayer.aplayer-fixed .aplayer-icon-forward,.aplayer.aplayer-fixed .aplayer-icon-menu,.aplayer.aplayer-fixed .aplayer-icon-play{position:absolute;bottom:27px;width:20px;height:20px}.aplayer.aplayer-fixed .aplayer-icon-back{right:75px}.aplayer.aplayer-fixed .aplayer-icon-play{right:50px}.aplayer.aplayer-fixed .aplayer-icon-forward{right:25px}.aplayer.aplayer-fixed .aplayer-icon-menu{right:0}.aplayer.aplayer-arrow .aplayer-icon-loop,.aplayer.aplayer-arrow .aplayer-icon-order,.aplayer.aplayer-mobile .aplayer-icon-volume-down{display:none}.aplayer.aplayer-loading .aplayer-info .aplayer-controller .aplayer-loading-icon{display:block}.aplayer.aplayer-loading .aplayer-info .aplayer-controller .aplayer-bar-wrap .aplayer-bar .aplayer-played .aplayer-thumb{-webkit-transform:scale(1);transform:scale(1)}.aplayer .aplayer-body{position:relative}.aplayer .aplayer-icon{width:15px;height:15px;border:none;background-color:transparent;outline:none;cursor:pointer;opacity:.8;vertical-align:middle;padding:0;font-size:12px;margin:0;display:inline-block}.aplayer .aplayer-icon path{transition:all .2s ease-in-out}.aplayer .aplayer-icon-back,.aplayer .aplayer-icon-forward,.aplayer .aplayer-icon-lrc,.aplayer .aplayer-icon-order,.aplayer .aplayer-icon-play{display:none}.aplayer .aplayer-icon-lrc-inactivity svg{opacity:.4}.aplayer .aplayer-icon-forward{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.aplayer .aplayer-lrc-content{display:none}.aplayer .aplayer-pic{position:relative;float:left;height:66px;width:66px;background-size:cover;background-position:50%;transition:all .3s ease;cursor:pointer}.aplayer .aplayer-pic:hover .aplayer-button{opacity:1}.aplayer .aplayer-pic .aplayer-button{position:absolute;border-radius:50%;opacity:.8;text-shadow:0 1px 1px rgba(0,0,0,.2);box-shadow:0 1px 1px rgba(0,0,0,.2);background:rgba(0,0,0,.2);transition:all .1s ease}.aplayer .aplayer-pic .aplayer-button path{fill:#fff}.aplayer .aplayer-pic .aplayer-hide{display:none}.aplayer .aplayer-pic .aplayer-play{width:26px;height:26px;border:2px solid #fff;bottom:50%;right:50%;margin:0 -15px -15px 0}.aplayer .aplayer-pic .aplayer-play svg{position:absolute;top:3px;left:4px;height:20px;width:20px}.aplayer .aplayer-pic .aplayer-pause{width:16px;height:16px;border:2px solid #fff;bottom:4px;right:4px}.aplayer .aplayer-pic .aplayer-pause svg{position:absolute;top:2px;left:2px;height:12px;width:12px}.aplayer .aplayer-info{margin-left:66px;padding:14px 7px 0 10px;height:66px;box-sizing:border-box}.aplayer .aplayer-info .aplayer-music{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;margin:0 0 13px 5px;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text;cursor:default;padding-bottom:2px;height:20px}.aplayer .aplayer-info .aplayer-music .aplayer-title{font-size:14px}.aplayer .aplayer-info .aplayer-music .aplayer-author{font-size:12px;color:#666}.aplayer .aplayer-info .aplayer-controller{position:relative;display:flex}.aplayer .aplayer-info .aplayer-controller .aplayer-bar-wrap{margin:0 0 0 5px;padding:4px 0;cursor:pointer!important;flex:1}.aplayer .aplayer-info .aplayer-controller .aplayer-bar-wrap:hover .aplayer-bar .aplayer-played .aplayer-thumb{-webkit-transform:scale(1);transform:scale(1)}.aplayer .aplayer-info .aplayer-controller .aplayer-bar-wrap .aplayer-bar{position:relative;height:2px;width:100%;background:#cdcdcd}.aplayer .aplayer-info .aplayer-controller .aplayer-bar-wrap .aplayer-bar .aplayer-loaded{position:absolute;left:0;top:0;bottom:0;background:#aaa;height:2px;transition:all .5s ease}.aplayer .aplayer-info .aplayer-controller .aplayer-bar-wrap .aplayer-bar .aplayer-played{position:absolute;left:0;top:0;bottom:0;height:2px}.aplayer .aplayer-info .aplayer-controller .aplayer-bar-wrap .aplayer-bar .aplayer-played .aplayer-thumb{position:absolute;top:0;right:5px;margin-top:-4px;margin-right:-10px;height:10px;width:10px;border-radius:50%;cursor:pointer;transition:all .3s ease-in-out;-webkit-transform:scale(0);transform:scale(0)}.aplayer .aplayer-info .aplayer-controller .aplayer-time{position:relative;right:0;bottom:4px;height:17px;color:#999;font-size:11px;padding-left:7px}.aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-time-inner{vertical-align:middle}.aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon{cursor:pointer;transition:all .2s ease}.aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon path{fill:#666}.aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon.aplayer-icon-loop{margin-right:2px}.aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon:hover path{fill:#000}.aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon.aplayer-icon-menu,.aplayer .aplayer-info .aplayer-controller .aplayer-time.aplayer-time-narrow .aplayer-icon-menu,.aplayer .aplayer-info .aplayer-controller .aplayer-time.aplayer-time-narrow .aplayer-icon-mode{display:none}.aplayer .aplayer-info .aplayer-controller .aplayer-volume-wrap{position:relative;display:inline-block;margin-left:3px;cursor:pointer!important}.aplayer .aplayer-info .aplayer-controller .aplayer-volume-wrap:hover .aplayer-volume-bar-wrap{height:40px}.aplayer .aplayer-info .aplayer-controller .aplayer-volume-wrap .aplayer-volume-bar-wrap{position:absolute;bottom:15px;right:-3px;width:25px;height:0;z-index:99;overflow:hidden;transition:all .2s ease-in-out}.aplayer .aplayer-info .aplayer-controller .aplayer-volume-wrap .aplayer-volume-bar-wrap.aplayer-volume-bar-wrap-active{height:40px}.aplayer .aplayer-info .aplayer-controller .aplayer-volume-wrap .aplayer-volume-bar-wrap .aplayer-volume-bar{position:absolute;bottom:0;right:10px;width:5px;height:35px;background:#aaa;border-radius:2.5px;overflow:hidden}.aplayer .aplayer-info .aplayer-controller .aplayer-volume-wrap .aplayer-volume-bar-wrap .aplayer-volume-bar .aplayer-volume{position:absolute;bottom:0;right:0;width:5px;transition:all .1s ease}.aplayer .aplayer-info .aplayer-controller .aplayer-loading-icon{display:none}.aplayer .aplayer-info .aplayer-controller .aplayer-loading-icon svg{position:absolute;-webkit-animation:rotate 1s linear infinite;animation:rotate 1s linear infinite}.aplayer .aplayer-lrc{display:none;position:relative;height:30px;text-align:center;overflow:hidden;margin:-10px 0 7px}.aplayer .aplayer-lrc:before{top:0;height:10%;background:linear-gradient(180deg,#fff 0,hsla(0,0%,100%,0));filter:progid:DXImageTransform.Microsoft.gradient(startColorstr="#ffffff",endColorstr="#00ffffff",GradientType=0)}.aplayer .aplayer-lrc:after,.aplayer .aplayer-lrc:before{position:absolute;z-index:1;display:block;overflow:hidden;width:100%;content:" "}.aplayer .aplayer-lrc:after{bottom:0;height:33%;background:linear-gradient(180deg,hsla(0,0%,100%,0) 0,hsla(0,0%,100%,.8));filter:progid:DXImageTransform.Microsoft.gradient(startColorstr="#00ffffff",endColorstr="#ccffffff",GradientType=0)}.aplayer .aplayer-lrc p{font-size:12px;color:#666;line-height:16px!important;height:16px!important;padding:0!important;margin:0!important;transition:all .5s ease-out;opacity:.4;overflow:hidden}.aplayer .aplayer-lrc p.aplayer-lrc-current{opacity:1;overflow:visible;height:auto!important;min-height:16px}.aplayer .aplayer-lrc.aplayer-lrc-hide{display:none}.aplayer .aplayer-lrc .aplayer-lrc-contents{width:100%;transition:all .5s ease-out;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text;cursor:default}.aplayer .aplayer-list{overflow:auto;transition:all .5s ease;will-change:height;display:none;overflow:hidden}.aplayer .aplayer-list.aplayer-list-hide{max-height:0!important}.aplayer .aplayer-list ol{list-style-type:none;margin:0;padding:0;overflow-y:auto}.aplayer .aplayer-list ol::-webkit-scrollbar{width:5px}.aplayer .aplayer-list ol::-webkit-scrollbar-thumb{border-radius:3px;background-color:#eee}.aplayer .aplayer-list ol::-webkit-scrollbar-thumb:hover{background-color:#ccc}.aplayer .aplayer-list ol li{position:relative;height:32px;line-height:32px;padding:0 15px;font-size:12px;border-top:1px solid #e9e9e9;cursor:pointer;transition:all .2s ease;overflow:hidden;margin:0}.aplayer .aplayer-list ol li:first-child{border-top:none}.aplayer .aplayer-list ol li:hover{background:#efefef}.aplayer .aplayer-list ol li.aplayer-list-light{background:#e9e9e9}.aplayer .aplayer-list ol li.aplayer-list-light .aplayer-list-cur{display:inline-block}.aplayer .aplayer-list ol li .aplayer-list-cur{display:none;width:3px;height:22px;position:absolute;left:0;top:5px;cursor:pointer}.aplayer .aplayer-list ol li .aplayer-list-index{color:#666;margin-right:12px;cursor:pointer}.aplayer .aplayer-list ol li .aplayer-list-author{color:#666;float:right;cursor:pointer}.aplayer .aplayer-notice{opacity:0;position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);font-size:12px;border-radius:4px;padding:5px 10px;transition:all .3s ease-in-out;overflow:hidden;color:#fff;pointer-events:none;background-color:#f4f4f5;color:#909399}.aplayer .aplayer-miniswitcher{display:none;position:absolute;top:0;right:0;bottom:0;height:100%;background:#e6e6e6;width:18px;border-radius:0 2px 2px 0}.aplayer .aplayer-miniswitcher .aplayer-icon{height:100%;width:100%;-webkit-transform:rotateY(180deg);transform:rotateY(180deg);transition:all .3s ease}.aplayer .aplayer-miniswitcher .aplayer-icon path{fill:#666}.aplayer .aplayer-miniswitcher .aplayer-icon:hover path{fill:#000}@-webkit-keyframes aplayer-roll{0%{left:0}to{left:-100%}}@keyframes aplayer-roll{0%{left:0}to{left:-100%}}@-webkit-keyframes rotate{0%{-webkit-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@keyframes rotate{0%{-webkit-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}

/*# sourceMappingURL=APlayer.min.css.map*/]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/dist/music.js</url>
    <content><![CDATA[// build time:Sat Jan 16 2021 18:50:27 GMT+0800 (GMT+08:00)
const ap=new APlayer({container:document.getElementById("aplayer"),listFolded:true,listMaxHeight:100,lrcType:3,autoplay:true,fixed:true,theme:"#b7daff",loop:"all",order:"random",preload:"metadata",mutex:true,audio:[{artist:"Sasha Sloan",url:"http://qny.jzai.xyz/Dancing With Your Ghost-Sasha Sloan.mp3",cover:"http://qny.jzai.xyz/Dancing With Your Ghost-Sasha Sloan.jpg",name:"Dancing With Your Ghost",lrc:"http://qny.jzai.xyz/Dancing With Your Ghost-Sasha Sloan.lrc"},{artist:"TRA$H",url:"http://qny.jzai.xyz/ＡＬＯＮＥ-TRA$H.mp3",cover:"http://qny.jzai.xyz/ＡＬＯＮＥ-TRA$H.jpg",name:"ＡＬＯＮＥ",lrc:"http://qny.jzai.xyz/ＡＬＯＮＥ-TRA$H.lrc"},{artist:"米津玄師",url:"http://qny.jzai.xyz/LOSER-米津玄師.mp3",cover:"http://qny.jzai.xyz/LOSER-米津玄師.jpg",name:"LOSER",lrc:"http://qny.jzai.xyz/LOSER-米津玄師.lrc"},{artist:"许嵩",url:"http://qny.jzai.xyz/你若成风-许嵩.mp3",cover:"http://qny.jzai.xyz/你若成风-许嵩.jpg",name:"你若成风",lrc:"http://qny.jzai.xyz/你若成风-许嵩.lrc"},{artist:"Yuna",url:"http://qny.jzai.xyz/Better Now-Yuna.mp3",cover:"http://qny.jzai.xyz/Better Now-Yuna.jpg",name:"Better Now",lrc:"http://qny.jzai.xyz/Better Now-Yuna.lrc"},{artist:"Beth",url:"http://qny.jzai.xyz/Let Me Down Slowly -Beth.mp3",cover:"http://qny.jzai.xyz/Let Me Down Slowly -Beth.jpg",name:"Let Me Down Slowly ",lrc:"http://qny.jzai.xyz/Let Me Down Slowly -Beth.lrc"},{artist:"SLANDER  Dylan Matthew",url:"http://qny.jzai.xyz/LoveisGone-SLANDER  Dylan Matthew.mp3",cover:"http://qny.jzai.xyz/LoveisGone-SLANDER  Dylan Matthew.jpg",name:"LoveisGone",lrc:"http://qny.jzai.xyz/LoveisGone-SLANDER  Dylan Matthew.lrc"},{artist:"dylanf",url:"http://qny.jzai.xyz/卡农（经典钢琴版）-dylanf.mp3",cover:"http://qny.jzai.xyz/卡农（经典钢琴版）-dylanf.jpg",name:"卡农（经典钢琴版）",lrc:"http://qny.jzai.xyz/卡农（经典钢琴版）-dylanf.lrc"},{artist:"Alexi Noa",url:"http://qny.jzai.xyz/Send It-Alexi Noa.mp3",cover:"http://qny.jzai.xyz/Send It-Alexi Noa.jpg",name:"Send It",lrc:"http://qny.jzai.xyz/Send It-Alexi Noa.lrc"},{artist:"B.o.B  Bruno Mars",url:"http://qny.jzai.xyz/Nothing On You-B.o.B  Bruno Mars.mp3",cover:"http://qny.jzai.xyz/Nothing On You-B.o.B  Bruno Mars.jpg",name:"Nothing On You",lrc:"http://qny.jzai.xyz/Nothing On You-B.o.B  Bruno Mars.lrc"},{artist:"Hawk Nelson",url:"http://qny.jzai.xyz/Sold Out-Hawk Nelson.mp3",cover:"http://qny.jzai.xyz/Sold Out-Hawk Nelson.jpg",name:"Sold Out",lrc:"http://qny.jzai.xyz/Sold Out-Hawk Nelson.lrc"},{artist:"Matte  Ember Island",url:"http://qny.jzai.xyz/Umbrella (Matte Remix)-Matte  Ember Island.mp3",cover:"http://qny.jzai.xyz/Umbrella (Matte Remix)-Matte  Ember Island.jpg",name:"Umbrella (Matte Remix)",lrc:"http://qny.jzai.xyz/Umbrella (Matte Remix)-Matte  Ember Island.lrc"},{artist:"Fool's Garden",url:"http://qny.jzai.xyz/Lemon Tree-Fool's Garden.mp3",cover:"http://qny.jzai.xyz/Lemon Tree-Fool's Garden.jpg",name:"Lemon Tree",lrc:"http://qny.jzai.xyz/Lemon Tree-Fool's Garden.lrc"},{artist:"Reynard /Silva",url:"http://qny.jzai.xyz/The Way I Still Love You-Reynard Silva.mp3",cover:"http://qny.jzai.xyz/The Way I Still Love You-Reynard Silva.jpg",name:"The Way I Still Love You",lrc:"http://qny.jzai.xyz/The Way I Still Love You-Reynard Silva.lrc"},{artist:"Davin大文  小郭雨儿",url:"http://qny.jzai.xyz/My beautiful-Davin大文  小郭雨儿.mp3",cover:"http://qny.jzai.xyz/My beautiful-Davin大文  小郭雨儿.jpg",name:"My beautiful",lrc:"http://qny.jzai.xyz/My beautiful-Davin大文  小郭雨儿.lrc"},{artist:"Planet in Limbo",url:"http://qny.jzai.xyz/Natural-Planet in Limbo.mp3",cover:"http://qny.jzai.xyz/Natural-Planet in Limbo.jpg",name:"Natural",lrc:"http://qny.jzai.xyz/Natural-Planet in Limbo.lrc"},{artist:"ZAYN  Sia",url:"http://qny.jzai.xyz/Dusk Till Dawn-ZAYN  Sia.mp3",cover:"http://qny.jzai.xyz/Dusk Till Dawn-ZAYN  Sia.jpg",name:"Dusk Till Dawn",lrc:"http://qny.jzai.xyz/Dusk Till Dawn-ZAYN  Sia.lrc"},{artist:"神山羊",url:"http://qny.jzai.xyz/YELLOW-神山羊.mp3",cover:"http://qny.jzai.xyz/YELLOW-神山羊.jpg",name:"YELLOW",lrc:"http://qny.jzai.xyz/YELLOW-神山羊.lrc"},{artist:"Anna F",url:"http://qny.jzai.xyz/Too Far-Anna F.mp3",cover:"http://qny.jzai.xyz/Too Far-Anna F.jpg",name:"Too Far",lrc:"http://qny.jzai.xyz/Too Far-Anna F.lrc"},{artist:"SoMo",url:"http://qny.jzai.xyz/50 Feet-SoMo.mp3",cover:"http://qny.jzai.xyz/50 Feet-SoMo.jpg",name:"50 Feet",lrc:"http://qny.jzai.xyz/50 Feet-SoMo.lrc"},{artist:"MADILYN",url:"http://qny.jzai.xyz/Galway Girl-MADILYN.mp3",cover:"http://qny.jzai.xyz/Galway Girl-MADILYN.jpg",name:"Galway Girl",lrc:"http://qny.jzai.xyz/Galway Girl-MADILYN.lrc"},{artist:"Skylar Grey  Diddy-Dirty Money",url:"http://qny.jzai.xyz/Coming Home-Skylar Grey  Diddy-Dirty Money.mp3",cover:"http://qny.jzai.xyz/Coming Home-Skylar Grey  Diddy-Dirty Money.jpg",name:"Coming Home",lrc:"http://qny.jzai.xyz/Coming Home-Skylar Grey  Diddy-Dirty Money.lrc"},{artist:"Boyce Avenue  Bea Miller",url:"http://qny.jzai.xyz/We Can't Stop-Boyce Avenue  Bea Miller.mp3",cover:"http://qny.jzai.xyz/We Can't Stop-Boyce Avenue  Bea Miller.jpg",name:"We Can't Stop",lrc:"http://qny.jzai.xyz/We Can't Stop-Boyce Avenue  Bea Miller.lrc"},{artist:"White Cherry",url:"http://qny.jzai.xyz/MELANCHOLY-White Cherry.mp3",cover:"http://qny.jzai.xyz/MELANCHOLY-White Cherry.jpg",name:"MELANCHOLY",lrc:"http://qny.jzai.xyz/MELANCHOLY-White Cherry.lrc"},{artist:"Tamas Wells",url:"http://qny.jzai.xyz/Valder Fields-Tamas Wells.mp3",cover:"http://qny.jzai.xyz/Valder Fields-Tamas Wells.jpg",name:"Valder Fields",lrc:"http://qny.jzai.xyz/Valder Fields-Tamas Wells.lrc"},{artist:"AGAM",url:"http://qny.jzai.xyz/Girls Like You（toby randall）-AGAM.mp3",cover:"http://qny.jzai.xyz/Girls Like You（toby randall）-AGAM.jpg",name:"Girls Like You（toby randall）",lrc:"http://qny.jzai.xyz/Girls Like You（toby randall）-AGAM.lrc"},{artist:"沈以诚",url:"http://qny.jzai.xyz/椿-沈以诚.mp3",cover:"http://qny.jzai.xyz/椿-沈以诚.jpg",name:"椿",lrc:"http://qny.jzai.xyz/椿-沈以诚.lrc"},{artist:"周杰伦",url:"http://qny.jzai.xyz/晴天-周杰伦.mp3",cover:"http://qny.jzai.xyz/晴天-周杰伦.jpg",name:"晴天",lrc:"http://qny.jzai.xyz/晴天-周杰伦.lrc"},{artist:"周杰伦",url:"http://qny.jzai.xyz/七里香-周杰伦.mp3",cover:"http://qny.jzai.xyz/七里香-周杰伦.jpg",name:"七里香",lrc:"http://qny.jzai.xyz/七里香-周杰伦.lrc"},{artist:"周杰伦",url:"http://qny.jzai.xyz/以父之名-周杰伦.mp3",cover:"http://qny.jzai.xyz/以父之名-周杰伦.jpg",name:"以父之名",lrc:"http://qny.jzai.xyz/以父之名-周杰伦.lrc"},{artist:"周杰伦",url:"http://qny.jzai.xyz/稻香-周杰伦.mp3",cover:"http://qny.jzai.xyz/稻香-周杰伦.jpg",name:"稻香",lrc:"http://qny.jzai.xyz/稻香-周杰伦.lrc"},{artist:"周杰伦",url:"http://qny.jzai.xyz/告白气球-周杰伦.mp3",cover:"http://qny.jzai.xyz/告白气球-周杰伦.jpg",name:"告白气球",lrc:"http://qny.jzai.xyz/告白气球-周杰伦.lrc"},{artist:"周杰伦",url:"http://qny.jzai.xyz/听妈妈的话-周杰伦.mp3",cover:"http://qny.jzai.xyz/听妈妈的话-周杰伦.jpg",name:"听妈妈的话",lrc:"http://qny.jzai.xyz/听妈妈的话-周杰伦.lrc"},{artist:"周杰伦",url:"http://qny.jzai.xyz/彩虹(电影《命运呼叫转移》片尾曲)-周杰伦.mp3",cover:"http://qny.jzai.xyz/彩虹(电影《命运呼叫转移》片尾曲)-周杰伦.jpg",name:"彩虹(电影《命运呼叫转移》片尾曲)",lrc:"http://qny.jzai.xyz/彩虹(电影《命运呼叫转移》片尾曲)-周杰伦.lrc"},{artist:"周杰伦",url:"http://qny.jzai.xyz/夜的第七章-周杰伦.mp3",cover:"http://qny.jzai.xyz/夜的第七章-周杰伦.jpg",name:"夜的第七章",lrc:"http://qny.jzai.xyz/夜的第七章-周杰伦.lrc"},{artist:"周杰伦",url:"http://qny.jzai.xyz/说好的幸福呢-周杰伦.mp3",cover:"http://qny.jzai.xyz/说好的幸福呢-周杰伦.jpg",name:"说好的幸福呢",lrc:"http://qny.jzai.xyz/说好的幸福呢-周杰伦.lrc"},{artist:"周杰伦",url:"http://qny.jzai.xyz/烟花易冷-周杰伦.mp3",cover:"http://qny.jzai.xyz/烟花易冷-周杰伦.jpg",name:"烟花易冷",lrc:"http://qny.jzai.xyz/烟花易冷-周杰伦.lrc"},{artist:"周杰伦",url:"http://qny.jzai.xyz/夜曲-周杰伦.mp3",cover:"http://qny.jzai.xyz/夜曲-周杰伦.jpg",name:"夜曲",lrc:"http://qny.jzai.xyz/夜曲-周杰伦.lrc"},{artist:"周杰伦",url:"http://qny.jzai.xyz/青花瓷-周杰伦.mp3",cover:"http://qny.jzai.xyz/青花瓷-周杰伦.jpg",name:"青花瓷",lrc:"http://qny.jzai.xyz/青花瓷-周杰伦.lrc"},{artist:"周杰伦",url:"http://qny.jzai.xyz/明明就-周杰伦.mp3",cover:"http://qny.jzai.xyz/明明就-周杰伦.jpg",name:"明明就",lrc:"http://qny.jzai.xyz/明明就-周杰伦.lrc"},{artist:"周杰伦",url:"http://qny.jzai.xyz/龙卷风-周杰伦.mp3",cover:"http://qny.jzai.xyz/龙卷风-周杰伦.jpg",name:"龙卷风",lrc:"http://qny.jzai.xyz/龙卷风-周杰伦.lrc"},{artist:"周杰伦",url:"http://qny.jzai.xyz/黑色毛衣-周杰伦.mp3",cover:"http://qny.jzai.xyz/黑色毛衣-周杰伦.jpg",name:"黑色毛衣",lrc:"http://qny.jzai.xyz/黑色毛衣-周杰伦.lrc"},{artist:"买辣椒也用券",url:"http://qny.jzai.xyz/起风了-买辣椒也用券.mp3",cover:"http://qny.jzai.xyz/起风了-买辣椒也用券.jpg",name:"起风了",lrc:"http://qny.jzai.xyz/起风了-买辣椒也用券.lrc"},{artist:"杨千嬅",url:"http://qny.jzai.xyz/处处吻-杨千嬅.mp3",cover:"http://qny.jzai.xyz/处处吻-杨千嬅.jpg",name:"处处吻",lrc:"http://qny.jzai.xyz/处处吻-杨千嬅.lrc"},{artist:"程响",url:"http://qny.jzai.xyz/世界这么大还是遇见你-程响.mp3",cover:"http://qny.jzai.xyz/世界这么大还是遇见你-程响.jpg",name:"世界这么大还是遇见你",lrc:"http://qny.jzai.xyz/世界这么大还是遇见你-程响.lrc"}]});
//rebuild by neat ]]></content>
  </entry>
  <entry>
    <title>标签</title>
    <url>/tags/index.html</url>
    <content><![CDATA[<!-- build time:Sat Jan 16 2021 18:50:27 GMT+0800 (GMT+08:00) --><!-- rebuild by neat -->]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/dist/APlayer.min.js</url>
    <content><![CDATA[!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("APlayer",[],t):"object"==typeof exports?exports.APlayer=t():e.APlayer=t()}(window,function(){return function(e){var t={};function n(i){if(t[i])return t[i].exports;var a=t[i]={i:i,l:!1,exports:{}};return e[i].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:i})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/",n(n.s=41)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=/mobile/i.test(window.navigator.userAgent),a={secondToTime:function(e){var t=Math.floor(e/3600),n=Math.floor((e-3600*t)/60),i=Math.floor(e-3600*t-60*n);return(t>0?[t,n,i]:[n,i]).map(function(e){return e<10?"0"+e:""+e}).join(":")},getElementViewLeft:function(e){var t=e.offsetLeft,n=e.offsetParent,i=document.body.scrollLeft+document.documentElement.scrollLeft;if(document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement)for(;null!==n&&n!==e;)t+=n.offsetLeft,n=n.offsetParent;else for(;null!==n;)t+=n.offsetLeft,n=n.offsetParent;return t-i},getElementViewTop:function(e,t){for(var n,i=e.offsetTop,a=e.offsetParent;null!==a;)i+=a.offsetTop,a=a.offsetParent;return n=document.body.scrollTop+document.documentElement.scrollTop,t?i:i-n},isMobile:i,storage:{set:function(e,t){localStorage.setItem(e,t)},get:function(e){return localStorage.getItem(e)}},nameMap:{dragStart:i?"touchstart":"mousedown",dragMove:i?"touchmove":"mousemove",dragEnd:i?"touchend":"mouseup"},randomOrder:function(e){return function(e){for(var t=e.length-1;t>=0;t--){var n=Math.floor(Math.random()*(t+1)),i=e[n];e[n]=e[t],e[t]=i}return e}([].concat(function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}(Array(e))).map(function(e,t){return t}))}};t.default=a},function(e,t,n){var i=n(2);e.exports=function(e){"use strict";e=e||{};var t="",n=i.$each,a=e.audio,r=(e.$value,e.$index,i.$escape),o=e.theme,s=e.index;return n(a,function(e,n){t+='\n<li>\n    <span class="aplayer-list-cur" style="background-color: ',t+=r(e.theme||o),t+=';"></span>\n    <span class="aplayer-list-index">',t+=r(n+s),t+='</span>\n    <span class="aplayer-list-title">',t+=r(e.name),t+='</span>\n    <span class="aplayer-list-author">',t+=r(e.artist),t+="</span>\n</li>\n"}),t}},function(e,t,n){"use strict";e.exports=n(15)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=g(n(33)),a=g(n(32)),r=g(n(31)),o=g(n(30)),s=g(n(29)),l=g(n(28)),u=g(n(27)),c=g(n(26)),p=g(n(25)),d=g(n(24)),h=g(n(23)),y=g(n(22)),f=g(n(21)),v=g(n(20)),m=g(n(19));function g(e){return e&&e.__esModule?e:{default:e}}var w={play:i.default,pause:a.default,volumeUp:r.default,volumeDown:o.default,volumeOff:s.default,orderRandom:l.default,orderList:u.default,menu:c.default,loopAll:p.default,loopOne:d.default,loopNone:h.default,loading:y.default,right:f.default,skip:v.default,lrc:m.default};t.default=w},function(e,t,n){"use strict";var i,a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};i=function(){return this}();try{i=i||Function("return this")()||(0,eval)("this")}catch(e){"object"===("undefined"==typeof window?"undefined":a(window))&&(i=window)}e.exports=i},function(e,t,n){"use strict";var i,a,r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};void 0===(a="function"==typeof(i=function(){if("object"===("undefined"==typeof window?"undefined":r(window))&&void 0!==document.querySelectorAll&&void 0!==window.pageYOffset&&void 0!==history.pushState){var e=function(e,t,n,i){return n>i?t:e+(t-e)*((a=n/i)<.5?4*a*a*a:(a-1)*(2*a-2)*(2*a-2)+1);var a},t=function(t,n,i,a){n=n||500;var r=(a=a||window).scrollTop||window.pageYOffset;if("number"==typeof t)var o=parseInt(t);else var o=function(e,t){return"HTML"===e.nodeName?-t:e.getBoundingClientRect().top+t}(t,r);var s=Date.now(),l=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||function(e){window.setTimeout(e,15)};!function u(){var c=Date.now()-s;a!==window?a.scrollTop=e(r,o,c,n):window.scroll(0,e(r,o,c,n)),c>n?"function"==typeof i&&i(t):l(u)}()},n=function(e){if(!e.defaultPrevented){e.preventDefault(),location.hash!==this.hash&&window.history.pushState(null,null,this.hash);var n=document.getElementById(this.hash.substring(1));if(!n)return;t(n,500,function(e){location.replace("#"+e.id)})}};return document.addEventListener("DOMContentLoaded",function(){for(var e,t=document.querySelectorAll('a[href^="#"]:not([href="#"])'),i=t.length;e=t[--i];)e.addEventListener("click",n,!1)}),t}})?i.call(t,n,t,e):i)||(e.exports=a)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),a=s(n(1)),r=s(n(0)),o=s(n(5));function s(e){return e&&e.__esModule?e:{default:e}}var l=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.player=t,this.index=0,this.audios=this.player.options.audio,this.bindEvents()}return i(e,[{key:"bindEvents",value:function(){var e=this;this.player.template.list.addEventListener("click",function(t){var n=void 0;n="LI"===t.target.tagName.toUpperCase()?t.target:t.target.parentElement;var i=parseInt(n.getElementsByClassName("aplayer-list-index")[0].innerHTML)-1;i!==e.index?(e.switch(i),e.player.play()):e.player.toggle()})}},{key:"show",value:function(){this.player.events.trigger("listshow"),this.player.template.list.classList.remove("aplayer-list-hide"),this.player.template.listOl.scrollTop=33*this.index}},{key:"hide",value:function(){this.player.events.trigger("listhide"),this.player.template.list.classList.add("aplayer-list-hide")}},{key:"toggle",value:function(){this.player.template.list.classList.contains("aplayer-list-hide")?this.show():this.hide()}},{key:"add",value:function(e){this.player.events.trigger("listadd",{audios:e}),"[object Array]"!==Object.prototype.toString.call(e)&&(e=[e]),e.map(function(e){return e.name=e.name||e.title||"Audio name",e.artist=e.artist||e.author||"Audio artist",e.cover=e.cover||e.pic,e.type=e.type||"normal",e});var t=!(this.audios.length>1),n=0===this.audios.length;this.player.template.listOl.innerHTML+=(0,a.default)({theme:this.player.options.theme,audio:e,index:this.audios.length+1}),this.audios=this.audios.concat(e),t&&this.audios.length>1&&this.player.container.classList.add("aplayer-withlist"),this.player.randomOrder=r.default.randomOrder(this.audios.length),this.player.template.listCurs=this.player.container.querySelectorAll(".aplayer-list-cur"),this.player.template.listCurs[this.audios.length-1].style.backgroundColor=e.theme||this.player.options.theme,n&&("random"===this.player.options.order?this.switch(this.player.randomOrder[0]):this.switch(0))}},{key:"remove",value:function(e){if(this.player.events.trigger("listremove",{index:e}),this.audios[e])if(this.audios.length>1){var t=this.player.container.querySelectorAll(".aplayer-list li");t[e].remove(),this.audios.splice(e,1),this.player.lrc&&this.player.lrc.remove(e),e===this.index&&(this.audios[e]?this.switch(e):this.switch(e-1)),this.index>e&&this.index--;for(var n=e;n<t.length;n++)t[n].getElementsByClassName("aplayer-list-index")[0].textContent=n;1===this.audios.length&&this.player.container.classList.remove("aplayer-withlist"),this.player.template.listCurs=this.player.container.querySelectorAll(".aplayer-list-cur")}else this.clear()}},{key:"switch",value:function(e){if(this.player.events.trigger("listswitch",{index:e}),void 0!==e&&this.audios[e]){this.index=e;var t=this.audios[this.index];this.player.template.pic.style.backgroundImage=t.cover?"url('"+t.cover+"')":"",this.player.theme(this.audios[this.index].theme||this.player.options.theme,this.index,!1),this.player.template.title.innerHTML=t.name,this.player.template.author.innerHTML=t.artist?" - "+t.artist:"";var n=this.player.container.getElementsByClassName("aplayer-list-light")[0];n&&n.classList.remove("aplayer-list-light"),this.player.container.querySelectorAll(".aplayer-list li")[this.index].classList.add("aplayer-list-light"),(0,o.default)(33*this.index,500,null,this.player.template.listOl),this.player.setAudio(t),this.player.lrc&&this.player.lrc.switch(this.index),this.player.lrc&&this.player.lrc.update(0),1!==this.player.duration&&(this.player.template.dtime.innerHTML=r.default.secondToTime(this.player.duration))}}},{key:"clear",value:function(){this.player.events.trigger("listclear"),this.index=0,this.player.container.classList.remove("aplayer-withlist"),this.player.pause(),this.audios=[],this.player.lrc&&this.player.lrc.clear(),this.player.audio.src="",this.player.template.listOl.innerHTML="",this.player.template.pic.style.backgroundImage="",this.player.theme(this.player.options.theme,this.index,!1),this.player.template.title.innerHTML="No audio",this.player.template.author.innerHTML="",this.player.bar.set("loaded",0,"width"),this.player.template.dtime.innerHTML=r.default.secondToTime(0)}}]),e}();t.default=l},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}();var a=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.events={},this.audioEvents=["abort","canplay","canplaythrough","durationchange","emptied","ended","error","loadeddata","loadedmetadata","loadstart","mozaudioavailable","pause","play","playing","progress","ratechange","seeked","seeking","stalled","suspend","timeupdate","volumechange","waiting"],this.playerEvents=["destroy","listshow","listhide","listadd","listremove","listswitch","listclear","noticeshow","noticehide","lrcshow","lrchide"]}return i(e,[{key:"on",value:function(e,t){this.type(e)&&"function"==typeof t&&(this.events[e]||(this.events[e]=[]),this.events[e].push(t))}},{key:"trigger",value:function(e,t){if(this.events[e]&&this.events[e].length)for(var n=0;n<this.events[e].length;n++)this.events[e][n](t)}},{key:"type",value:function(e){return-1!==this.playerEvents.indexOf(e)?"player":-1!==this.audioEvents.indexOf(e)?"audio":(console.error("Unknown event name: "+e),null)}}]),e}();t.default=a},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}();var a=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.player=t,window.requestAnimationFrame=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(e){window.setTimeout(e,1e3/60)},this.types=["loading"],this.init()}return i(e,[{key:"init",value:function(){var e=this;this.types.forEach(function(t){e["init"+t+"Checker"]()})}},{key:"initloadingChecker",value:function(){var e=this,t=0,n=0,i=!1;this.loadingChecker=setInterval(function(){e.enableloadingChecker&&(n=e.player.audio.currentTime,i||n!==t||e.player.audio.paused||(e.player.container.classList.add("aplayer-loading"),i=!0),i&&n>t&&!e.player.audio.paused&&(e.player.container.classList.remove("aplayer-loading"),i=!1),t=n)},100)}},{key:"enable",value:function(e){this["enable"+e+"Checker"]=!0,"fps"===e&&this.initfpsChecker()}},{key:"disable",value:function(e){this["enable"+e+"Checker"]=!1}},{key:"destroy",value:function(){var e=this;this.types.forEach(function(t){e["enable"+t+"Checker"]=!1,e[t+"Checker"]&&clearInterval(e[t+"Checker"])})}}]),e}();t.default=a},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),a=o(n(0)),r=o(n(3));function o(e){return e&&e.__esModule?e:{default:e}}var s=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.player=t,this.initPlayButton(),this.initPlayBar(),this.initOrderButton(),this.initLoopButton(),this.initMenuButton(),a.default.isMobile||this.initVolumeButton(),this.initMiniSwitcher(),this.initSkipButton(),this.initLrcButton()}return i(e,[{key:"initPlayButton",value:function(){var e=this;this.player.template.pic.addEventListener("click",function(){e.player.toggle()})}},{key:"initPlayBar",value:function(){var e=this,t=function(t){var n=((t.clientX||t.changedTouches[0].clientX)-a.default.getElementViewLeft(e.player.template.barWrap))/e.player.template.barWrap.clientWidth;n=Math.max(n,0),n=Math.min(n,1),e.player.bar.set("played",n,"width"),e.player.lrc&&e.player.lrc.update(n*e.player.duration),e.player.template.ptime.innerHTML=a.default.secondToTime(n*e.player.duration)},n=function n(i){document.removeEventListener(a.default.nameMap.dragEnd,n),document.removeEventListener(a.default.nameMap.dragMove,t);var r=((i.clientX||i.changedTouches[0].clientX)-a.default.getElementViewLeft(e.player.template.barWrap))/e.player.template.barWrap.clientWidth;r=Math.max(r,0),r=Math.min(r,1),e.player.bar.set("played",r,"width"),e.player.seek(e.player.bar.get("played","width")*e.player.duration),e.player.disableTimeupdate=!1};this.player.template.barWrap.addEventListener(a.default.nameMap.dragStart,function(){e.player.disableTimeupdate=!0,document.addEventListener(a.default.nameMap.dragMove,t),document.addEventListener(a.default.nameMap.dragEnd,n)})}},{key:"initVolumeButton",value:function(){var e=this;this.player.template.volumeButton.addEventListener("click",function(){e.player.audio.muted?(e.player.audio.muted=!1,e.player.switchVolumeIcon(),e.player.bar.set("volume",e.player.volume(),"height")):(e.player.audio.muted=!0,e.player.switchVolumeIcon(),e.player.bar.set("volume",0,"height"))});var t=function(t){var n=1-((t.clientY||t.changedTouches[0].clientY)-a.default.getElementViewTop(e.player.template.volumeBar,e.player.options.fixed))/e.player.template.volumeBar.clientHeight;n=Math.max(n,0),n=Math.min(n,1),e.player.volume(n)},n=function n(i){e.player.template.volumeBarWrap.classList.remove("aplayer-volume-bar-wrap-active"),document.removeEventListener(a.default.nameMap.dragEnd,n),document.removeEventListener(a.default.nameMap.dragMove,t);var r=1-((i.clientY||i.changedTouches[0].clientY)-a.default.getElementViewTop(e.player.template.volumeBar,e.player.options.fixed))/e.player.template.volumeBar.clientHeight;r=Math.max(r,0),r=Math.min(r,1),e.player.volume(r)};this.player.template.volumeBarWrap.addEventListener(a.default.nameMap.dragStart,function(){e.player.template.volumeBarWrap.classList.add("aplayer-volume-bar-wrap-active"),document.addEventListener(a.default.nameMap.dragMove,t),document.addEventListener(a.default.nameMap.dragEnd,n)})}},{key:"initOrderButton",value:function(){var e=this;this.player.template.order.addEventListener("click",function(){"list"===e.player.options.order?(e.player.options.order="random",e.player.template.order.innerHTML=r.default.orderRandom):"random"===e.player.options.order&&(e.player.options.order="list",e.player.template.order.innerHTML=r.default.orderList)})}},{key:"initLoopButton",value:function(){var e=this;this.player.template.loop.addEventListener("click",function(){e.player.list.audios.length>1?"one"===e.player.options.loop?(e.player.options.loop="none",e.player.template.loop.innerHTML=r.default.loopNone):"none"===e.player.options.loop?(e.player.options.loop="all",e.player.template.loop.innerHTML=r.default.loopAll):"all"===e.player.options.loop&&(e.player.options.loop="one",e.player.template.loop.innerHTML=r.default.loopOne):"one"===e.player.options.loop||"all"===e.player.options.loop?(e.player.options.loop="none",e.player.template.loop.innerHTML=r.default.loopNone):"none"===e.player.options.loop&&(e.player.options.loop="all",e.player.template.loop.innerHTML=r.default.loopAll)})}},{key:"initMenuButton",value:function(){var e=this;this.player.template.menu.addEventListener("click",function(){e.player.list.toggle()})}},{key:"initMiniSwitcher",value:function(){var e=this;this.player.template.miniSwitcher.addEventListener("click",function(){e.player.setMode("mini"===e.player.mode?"normal":"mini")})}},{key:"initSkipButton",value:function(){var e=this;this.player.template.skipBackButton.addEventListener("click",function(){e.player.skipBack()}),this.player.template.skipForwardButton.addEventListener("click",function(){e.player.skipForward()}),this.player.template.skipPlayButton.addEventListener("click",function(){e.player.toggle()})}},{key:"initLrcButton",value:function(){var e=this;this.player.template.lrcButton.addEventListener("click",function(){e.player.template.lrcButton.classList.contains("aplayer-icon-lrc-inactivity")?(e.player.template.lrcButton.classList.remove("aplayer-icon-lrc-inactivity"),e.player.lrc&&e.player.lrc.show()):(e.player.template.lrcButton.classList.add("aplayer-icon-lrc-inactivity"),e.player.lrc&&e.player.lrc.hide())})}}]),e}();t.default=s},function(e,t,n){var i=n(2);e.exports=function(e){"use strict";e=e||{};var t="",n=i.$each,a=e.lyrics,r=(e.$value,e.$index,i.$escape);return n(a,function(e,n){t+="\n    <p",0===n&&(t+=' class="aplayer-lrc-current"'),t+=">",t+=r(e[1]),t+="</p>\n"}),t}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i,a=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),r=n(10),o=(i=r)&&i.__esModule?i:{default:i};var s=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.container=t.container,this.async=t.async,this.player=t.player,this.parsed=[],this.index=0,this.current=[]}return a(e,[{key:"show",value:function(){this.player.events.trigger("lrcshow"),this.player.template.lrcWrap.classList.remove("aplayer-lrc-hide")}},{key:"hide",value:function(){this.player.events.trigger("lrchide"),this.player.template.lrcWrap.classList.add("aplayer-lrc-hide")}},{key:"toggle",value:function(){this.player.template.lrcWrap.classList.contains("aplayer-lrc-hide")?this.show():this.hide()}},{key:"update",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.player.audio.currentTime;if(this.index>this.current.length-1||e<this.current[this.index][0]||!this.current[this.index+1]||e>=this.current[this.index+1][0])for(var t=0;t<this.current.length;t++)e>=this.current[t][0]&&(!this.current[t+1]||e<this.current[t+1][0])&&(this.index=t,this.container.style.transform="translateY("+16*-this.index+"px)",this.container.style.webkitTransform="translateY("+16*-this.index+"px)",this.container.getElementsByClassName("aplayer-lrc-current")[0].classList.remove("aplayer-lrc-current"),this.container.getElementsByTagName("p")[t].classList.add("aplayer-lrc-current"))}},{key:"switch",value:function(e){var t=this;if(!this.parsed[e])if(this.async){this.parsed[e]=[["00:00","Loading"]];var n=new XMLHttpRequest;n.onreadystatechange=function(){e===t.player.list.index&&4===n.readyState&&(n.status>=200&&n.status<300||304===n.status?t.parsed[e]=t.parse(n.responseText):(t.player.notice("LRC file request fails: status "+n.status),t.parsed[e]=[["00:00","Not available"]]),t.container.innerHTML=(0,o.default)({lyrics:t.parsed[e]}),t.update(0),t.current=t.parsed[e])};var i=this.player.list.audios[e].lrc;n.open("get",i,!0),n.send(null)}else this.player.list.audios[e].lrc?this.parsed[e]=this.parse(this.player.list.audios[e].lrc):this.parsed[e]=[["00:00","Not available"]];this.container.innerHTML=(0,o.default)({lyrics:this.parsed[e]}),this.update(0),this.current=this.parsed[e]}},{key:"parse",value:function(e){if(e){for(var t=(e=e.replace(/([^\]^\n])\[/g,function(e,t){return t+"\n["})).split("\n"),n=[],i=t.length,a=0;a<i;a++){var r=t[a].match(/\[(\d{2}):(\d{2})(\.(\d{2,3}))?]/g),o=t[a].replace(/.*\[(\d{2}):(\d{2})(\.(\d{2,3}))?]/g,"").replace(/<(\d{2}):(\d{2})(\.(\d{2,3}))?>/g,"").replace(/^\s+|\s+$/g,"");if(r)for(var s=r.length,l=0;l<s;l++){var u=/\[(\d{2}):(\d{2})(\.(\d{2,3}))?]/.exec(r[l]),c=60*u[1]+parseInt(u[2])+(u[4]?parseInt(u[4])/(2===(u[4]+"").length?100:1e3):0);n.push([c,o])}}return(n=n.filter(function(e){return e[1]})).sort(function(e,t){return e[0]-t[0]}),n}return[]}},{key:"remove",value:function(e){this.parsed.splice(e,1)}},{key:"clear",value:function(){this.parsed=[],this.container.innerHTML=""}}]),e}();t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i,a=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),r=n(0),o=(i=r)&&i.__esModule?i:{default:i};var s=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.storageName=t.options.storageName,this.data=JSON.parse(o.default.storage.get(this.storageName)),this.data||(this.data={}),this.data.volume=this.data.volume||t.options.volume}return a(e,[{key:"get",value:function(e){return this.data[e]}},{key:"set",value:function(e,t){this.data[e]=t,o.default.storage.set(this.storageName,JSON.stringify(this.data))}}]),e}();t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}();var a=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.elements={},this.elements.volume=t.volume,this.elements.played=t.played,this.elements.loaded=t.loaded}return i(e,[{key:"set",value:function(e,t,n){t=Math.max(t,0),t=Math.min(t,1),this.elements[e].style[n]=100*t+"%"}},{key:"get",value:function(e,t){return parseFloat(this.elements[e].style[t])/100}}]),e}();t.default=a},function(e,t,n){"use strict";(function(t){e.exports=!1;try{e.exports="[object process]"===Object.prototype.toString.call(t.process)}catch(e){}}).call(this,n(4))},function(e,t,n){"use strict";(function(t){var i=n(14),a=Object.create(i?t:window),r=/["&'<>]/;a.$escape=function(e){return function(e){var t=""+e,n=r.exec(t);if(!n)return e;var i="",a=void 0,o=void 0,s=void 0;for(a=n.index,o=0;a<t.length;a++){switch(t.charCodeAt(a)){case 34:s="&#34;";break;case 38:s="&#38;";break;case 39:s="&#39;";break;case 60:s="&#60;";break;case 62:s="&#62;";break;default:continue}o!==a&&(i+=t.substring(o,a)),o=a+1,i+=s}return o!==a?i+t.substring(o,a):i}(function e(t){"string"!=typeof t&&(t=void 0===t||null===t?"":"function"==typeof t?e(t.call(t)):JSON.stringify(t));return t}(e))},a.$each=function(e,t){if(Array.isArray(e))for(var n=0,i=e.length;n<i;n++)t(e[n],n);else for(var a in e)t(e[a],a)},e.exports=a}).call(this,n(4))},function(e,t,n){var i=n(2);e.exports=function(e){"use strict";var t="",a=(e=e||{}).options,r=e.cover,o=i.$escape,s=e.icons,l=(arguments[1],function(e){return t+=e}),u=e.getObject;e.theme,e.audio,e.index;return a.fixed?(t+='\n<div class="aplayer-list',a.listFolded&&(t+=" aplayer-list-hide"),t+='"',a.listMaxHeight&&(t+=' style="max-height: ',t+=o(a.listMaxHeight),t+='"'),t+=">\n    <ol",a.listMaxHeight&&(t+=' style="max-height: ',t+=o(a.listMaxHeight),t+='"'),t+=">\n        ",l(n(1)(u({theme:a.theme,audio:a.audio,index:1}))),t+='\n    </ol>\n</div>\n<div class="aplayer-body">\n    <div class="aplayer-pic" style="',r&&(t+="background-image: url(&quot;",t+=o(r),t+="&quot;);"),t+="background-color: ",t+=o(a.theme),t+=';">\n        <div class="aplayer-button aplayer-play">',t+=s.play,t+='</div>\n    </div>\n    <div class="aplayer-info" style="display: none;">\n        <div class="aplayer-music">\n            <span class="aplayer-title">No audio</span>\n            <span class="aplayer-author"></span>\n        </div>\n        <div class="aplayer-controller">\n            <div class="aplayer-bar-wrap">\n                <div class="aplayer-bar">\n                    <div class="aplayer-loaded" style="width: 0"></div>\n                    <div class="aplayer-played" style="width: 0; background: ',t+=o(a.theme),t+=';">\n                        <span class="aplayer-thumb" style="background: ',t+=o(a.theme),t+=';">\n                            <span class="aplayer-loading-icon">',t+=s.loading,t+='</span>\n                        </span>\n                    </div>\n                </div>\n            </div>\n            <div class="aplayer-time">\n                <span class="aplayer-time-inner">\n                    <span class="aplayer-ptime">00:00</span> / <span class="aplayer-dtime">00:00</span>\n                </span>\n                <span class="aplayer-icon aplayer-icon-back">\n                    ',t+=s.skip,t+='\n                </span>\n                <span class="aplayer-icon aplayer-icon-play">\n                    ',t+=s.play,t+='\n                </span>\n                <span class="aplayer-icon aplayer-icon-forward">\n                    ',t+=s.skip,t+='\n                </span>\n                <div class="aplayer-volume-wrap">\n                    <button type="button" class="aplayer-icon aplayer-icon-volume-down">\n                        ',t+=s.volumeDown,t+='\n                    </button>\n                    <div class="aplayer-volume-bar-wrap">\n                        <div class="aplayer-volume-bar">\n                            <div class="aplayer-volume" style="height: 80%; background: ',t+=o(a.theme),t+=';"></div>\n                        </div>\n                    </div>\n                </div>\n                <button type="button" class="aplayer-icon aplayer-icon-order">\n                    ',"list"===a.order?t+=s.orderList:"random"===a.order&&(t+=s.orderRandom),t+='\n                </button>\n                <button type="button" class="aplayer-icon aplayer-icon-loop">\n                    ',"one"===a.loop?t+=s.loopOne:"all"===a.loop?t+=s.loopAll:"none"===a.loop&&(t+=s.loopNone),t+='\n                </button>\n                <button type="button" class="aplayer-icon aplayer-icon-menu">\n                    ',t+=s.menu,t+='\n                </button>\n                <button type="button" class="aplayer-icon aplayer-icon-lrc">\n                    ',t+=s.lrc,t+='\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="aplayer-notice"></div>\n    <div class="aplayer-miniswitcher"><button class="aplayer-icon">',t+=s.right,t+='</button></div>\n</div>\n<div class="aplayer-lrc">\n    <div class="aplayer-lrc-contents" style="transform: translateY(0); -webkit-transform: translateY(0);"></div>\n</div>\n'):(t+='\n<div class="aplayer-body">\n    <div class="aplayer-pic" style="',r&&(t+="background-image: url(&quot;",t+=o(r),t+="&quot;);"),t+="background-color: ",t+=o(a.theme),t+=';">\n        <div class="aplayer-button aplayer-play">',t+=s.play,t+='</div>\n    </div>\n    <div class="aplayer-info">\n        <div class="aplayer-music">\n            <span class="aplayer-title">No audio</span>\n            <span class="aplayer-author"></span>\n        </div>\n        <div class="aplayer-lrc">\n            <div class="aplayer-lrc-contents" style="transform: translateY(0); -webkit-transform: translateY(0);"></div>\n        </div>\n        <div class="aplayer-controller">\n            <div class="aplayer-bar-wrap">\n                <div class="aplayer-bar">\n                    <div class="aplayer-loaded" style="width: 0"></div>\n                    <div class="aplayer-played" style="width: 0; background: ',t+=o(a.theme),t+=';">\n                        <span class="aplayer-thumb" style="background: ',t+=o(a.theme),t+=';">\n                            <span class="aplayer-loading-icon">',t+=s.loading,t+='</span>\n                        </span>\n                    </div>\n                </div>\n            </div>\n            <div class="aplayer-time">\n                <span class="aplayer-time-inner">\n                    <span class="aplayer-ptime">00:00</span> / <span class="aplayer-dtime">00:00</span>\n                </span>\n                <span class="aplayer-icon aplayer-icon-back">\n                    ',t+=s.skip,t+='\n                </span>\n                <span class="aplayer-icon aplayer-icon-play">\n                    ',t+=s.play,t+='\n                </span>\n                <span class="aplayer-icon aplayer-icon-forward">\n                    ',t+=s.skip,t+='\n                </span>\n                <div class="aplayer-volume-wrap">\n                    <button type="button" class="aplayer-icon aplayer-icon-volume-down">\n                        ',t+=s.volumeDown,t+='\n                    </button>\n                    <div class="aplayer-volume-bar-wrap">\n                        <div class="aplayer-volume-bar">\n                            <div class="aplayer-volume" style="height: 80%; background: ',t+=o(a.theme),t+=';"></div>\n                        </div>\n                    </div>\n                </div>\n                <button type="button" class="aplayer-icon aplayer-icon-order">\n                    ',"list"===a.order?t+=s.orderList:"random"===a.order&&(t+=s.orderRandom),t+='\n                </button>\n                <button type="button" class="aplayer-icon aplayer-icon-loop">\n                    ',"one"===a.loop?t+=s.loopOne:"all"===a.loop?t+=s.loopAll:"none"===a.loop&&(t+=s.loopNone),t+='\n                </button>\n                <button type="button" class="aplayer-icon aplayer-icon-menu">\n                    ',t+=s.menu,t+='\n                </button>\n                <button type="button" class="aplayer-icon aplayer-icon-lrc">\n                    ',t+=s.lrc,t+='\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="aplayer-notice"></div>\n    <div class="aplayer-miniswitcher"><button class="aplayer-icon">',t+=s.right,t+='</button></div>\n</div>\n<div class="aplayer-list',a.listFolded&&(t+=" aplayer-list-hide"),t+='"',a.listMaxHeight&&(t+=' style="max-height: ',t+=o(a.listMaxHeight),t+='"'),t+=">\n    <ol",a.listMaxHeight&&(t+=' style="max-height: ',t+=o(a.listMaxHeight),t+='"'),t+=">\n        ",l(n(1)(u({theme:a.theme,audio:a.audio,index:1}))),t+="\n    </ol>\n</div>\n"),t}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),a=o(n(3)),r=o(n(16));function o(e){return e&&e.__esModule?e:{default:e}}var s=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.container=t.container,this.options=t.options,this.randomOrder=t.randomOrder,this.init()}return i(e,[{key:"init",value:function(){var e="";this.options.audio.length&&(e="random"===this.options.order?this.options.audio[this.randomOrder[0]].cover:this.options.audio[0].cover),this.container.innerHTML=(0,r.default)({options:this.options,icons:a.default,cover:e,getObject:function(e){return e}}),this.lrc=this.container.querySelector(".aplayer-lrc-contents"),this.lrcWrap=this.container.querySelector(".aplayer-lrc"),this.ptime=this.container.querySelector(".aplayer-ptime"),this.info=this.container.querySelector(".aplayer-info"),this.time=this.container.querySelector(".aplayer-time"),this.barWrap=this.container.querySelector(".aplayer-bar-wrap"),this.button=this.container.querySelector(".aplayer-button"),this.body=this.container.querySelector(".aplayer-body"),this.list=this.container.querySelector(".aplayer-list"),this.listOl=this.container.querySelector(".aplayer-list ol"),this.listCurs=this.container.querySelectorAll(".aplayer-list-cur"),this.played=this.container.querySelector(".aplayer-played"),this.loaded=this.container.querySelector(".aplayer-loaded"),this.thumb=this.container.querySelector(".aplayer-thumb"),this.volume=this.container.querySelector(".aplayer-volume"),this.volumeBar=this.container.querySelector(".aplayer-volume-bar"),this.volumeButton=this.container.querySelector(".aplayer-time button"),this.volumeBarWrap=this.container.querySelector(".aplayer-volume-bar-wrap"),this.loop=this.container.querySelector(".aplayer-icon-loop"),this.order=this.container.querySelector(".aplayer-icon-order"),this.menu=this.container.querySelector(".aplayer-icon-menu"),this.pic=this.container.querySelector(".aplayer-pic"),this.title=this.container.querySelector(".aplayer-title"),this.author=this.container.querySelector(".aplayer-author"),this.dtime=this.container.querySelector(".aplayer-dtime"),this.notice=this.container.querySelector(".aplayer-notice"),this.miniSwitcher=this.container.querySelector(".aplayer-miniswitcher"),this.skipBackButton=this.container.querySelector(".aplayer-icon-back"),this.skipForwardButton=this.container.querySelector(".aplayer-icon-forward"),this.skipPlayButton=this.container.querySelector(".aplayer-icon-play"),this.lrcButton=this.container.querySelector(".aplayer-icon-lrc")}}]),e}();t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t={container:e.element||document.getElementsByClassName("aplayer")[0],mini:e.narrow||e.fixed||!1,fixed:!1,autoplay:!1,mutex:!0,lrcType:e.showlrc||e.lrc||0,preload:"auto",theme:"#b7daff",loop:"all",order:"list",volume:.7,listFolded:e.fixed,listMaxHeight:e.listmaxheight||"250px",audio:e.music||[],storageName:"aplayer-setting"};for(var n in t)t.hasOwnProperty(n)&&!e.hasOwnProperty(n)&&(e[n]=t[n]);return"[object Array]"!==Object.prototype.toString.call(e.audio)&&(e.audio=[e.audio]),e.audio.map(function(e){return e.name=e.name||e.title||"Audio name",e.artist=e.artist||e.author||"Audio artist",e.cover=e.cover||e.pic,e.type=e.type||"normal",e}),e.audio.length<=1&&"one"===e.loop&&(e.loop="all"),e}},function(e,t){e.exports='<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 32 32"><path d="M26.667 5.333h-21.333c-0 0-0.001 0-0.001 0-1.472 0-2.666 1.194-2.666 2.666 0 0 0 0.001 0 0.001v-0 16c0 0 0 0.001 0 0.001 0 1.472 1.194 2.666 2.666 2.666 0 0 0.001 0 0.001 0h21.333c0 0 0.001 0 0.001 0 1.472 0 2.666-1.194 2.666-2.666 0-0 0-0.001 0-0.001v0-16c0-0 0-0.001 0-0.001 0-1.472-1.194-2.666-2.666-2.666-0 0-0.001 0-0.001 0h0zM5.333 16h5.333v2.667h-5.333v-2.667zM18.667 24h-13.333v-2.667h13.333v2.667zM26.667 24h-5.333v-2.667h5.333v2.667zM26.667 18.667h-13.333v-2.667h13.333v2.667z"></path></svg>'},function(e,t){e.exports='<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 32 32"><path d="M25.468 6.947c-0.326-0.172-0.724-0.151-1.030 0.057l-6.438 4.38v-3.553c0-0.371-0.205-0.71-0.532-0.884-0.326-0.172-0.724-0.151-1.030 0.057l-12 8.164c-0.274 0.186-0.438 0.496-0.438 0.827s0.164 0.641 0.438 0.827l12 8.168c0.169 0.115 0.365 0.174 0.562 0.174 0.16 0 0.321-0.038 0.468-0.116 0.327-0.173 0.532-0.514 0.532-0.884v-3.556l6.438 4.382c0.169 0.115 0.365 0.174 0.562 0.174 0.16 0 0.321-0.038 0.468-0.116 0.327-0.173 0.532-0.514 0.532-0.884v-16.333c0-0.371-0.205-0.71-0.532-0.884z"></path></svg>'},function(e,t){e.exports='<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 32 32"><path d="M22 16l-10.105-10.6-1.895 1.987 8.211 8.613-8.211 8.612 1.895 1.988 8.211-8.613z"></path></svg>'},function(e,t){e.exports='<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 32 32"><path d="M4 16c0-6.6 5.4-12 12-12s12 5.4 12 12c0 1.2-0.8 2-2 2s-2-0.8-2-2c0-4.4-3.6-8-8-8s-8 3.6-8 8 3.6 8 8 8c1.2 0 2 0.8 2 2s-0.8 2-2 2c-6.6 0-12-5.4-12-12z"></path></svg>'},function(e,t){e.exports='<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 29 32"><path d="M2.667 7.027l1.707-1.693 22.293 22.293-1.693 1.707-4-4h-11.64v4l-5.333-5.333 5.333-5.333v4h8.973l-8.973-8.973v0.973h-2.667v-3.64l-4-4zM22.667 17.333h2.667v5.573l-2.667-2.667v-2.907zM22.667 6.667v-4l5.333 5.333-5.333 5.333v-4h-10.907l-2.667-2.667h13.573z"></path></svg>'},function(e,t){e.exports='<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 33 32"><path d="M9.333 9.333h13.333v4l5.333-5.333-5.333-5.333v4h-16v8h2.667v-5.333zM22.667 22.667h-13.333v-4l-5.333 5.333 5.333 5.333v-4h16v-8h-2.667v5.333zM17.333 20v-8h-1.333l-2.667 1.333v1.333h2v5.333h2z"></path></svg>'},function(e,t){e.exports='<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 29 32"><path d="M9.333 9.333h13.333v4l5.333-5.333-5.333-5.333v4h-16v8h2.667v-5.333zM22.667 22.667h-13.333v-4l-5.333 5.333 5.333 5.333v-4h16v-8h-2.667v5.333z"></path></svg>'},function(e,t){e.exports='<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 22 32"><path d="M20.8 14.4q0.704 0 1.152 0.48t0.448 1.12-0.48 1.12-1.12 0.48h-19.2q-0.64 0-1.12-0.48t-0.48-1.12 0.448-1.12 1.152-0.48h19.2zM1.6 11.2q-0.64 0-1.12-0.48t-0.48-1.12 0.448-1.12 1.152-0.48h19.2q0.704 0 1.152 0.48t0.448 1.12-0.48 1.12-1.12 0.48h-19.2zM20.8 20.8q0.704 0 1.152 0.48t0.448 1.12-0.48 1.12-1.12 0.48h-19.2q-0.64 0-1.12-0.48t-0.48-1.12 0.448-1.12 1.152-0.48h19.2z"></path></svg>'},function(e,t){e.exports='<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 32 32"><path d="M0.622 18.334h19.54v7.55l11.052-9.412-11.052-9.413v7.549h-19.54v3.725z"></path></svg>'},function(e,t){e.exports='<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 32 32"><path d="M22.667 4l7 6-7 6 7 6-7 6v-4h-3.653l-3.76-3.76 2.827-2.827 2.587 2.587h2v-8h-2l-12 12h-6v-4h4.347l12-12h3.653v-4zM2.667 8h6l3.76 3.76-2.827 2.827-2.587-2.587h-4.347v-4z"></path></svg>'},function(e,t){e.exports='<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 28 32"><path d="M13.728 6.272v19.456q0 0.448-0.352 0.8t-0.8 0.32-0.8-0.32l-5.952-5.952h-4.672q-0.48 0-0.8-0.352t-0.352-0.8v-6.848q0-0.48 0.352-0.8t0.8-0.352h4.672l5.952-5.952q0.32-0.32 0.8-0.32t0.8 0.32 0.352 0.8z"></path></svg>'},function(e,t){e.exports='<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 28 32"><path d="M13.728 6.272v19.456q0 0.448-0.352 0.8t-0.8 0.32-0.8-0.32l-5.952-5.952h-4.672q-0.48 0-0.8-0.352t-0.352-0.8v-6.848q0-0.48 0.352-0.8t0.8-0.352h4.672l5.952-5.952q0.32-0.32 0.8-0.32t0.8 0.32 0.352 0.8zM20.576 16q0 1.344-0.768 2.528t-2.016 1.664q-0.16 0.096-0.448 0.096-0.448 0-0.8-0.32t-0.32-0.832q0-0.384 0.192-0.64t0.544-0.448 0.608-0.384 0.512-0.64 0.192-1.024-0.192-1.024-0.512-0.64-0.608-0.384-0.544-0.448-0.192-0.64q0-0.48 0.32-0.832t0.8-0.32q0.288 0 0.448 0.096 1.248 0.48 2.016 1.664t0.768 2.528z"></path></svg>'},function(e,t){e.exports='<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 28 32"><path d="M13.728 6.272v19.456q0 0.448-0.352 0.8t-0.8 0.32-0.8-0.32l-5.952-5.952h-4.672q-0.48 0-0.8-0.352t-0.352-0.8v-6.848q0-0.48 0.352-0.8t0.8-0.352h4.672l5.952-5.952q0.32-0.32 0.8-0.32t0.8 0.32 0.352 0.8zM20.576 16q0 1.344-0.768 2.528t-2.016 1.664q-0.16 0.096-0.448 0.096-0.448 0-0.8-0.32t-0.32-0.832q0-0.384 0.192-0.64t0.544-0.448 0.608-0.384 0.512-0.64 0.192-1.024-0.192-1.024-0.512-0.64-0.608-0.384-0.544-0.448-0.192-0.64q0-0.48 0.32-0.832t0.8-0.32q0.288 0 0.448 0.096 1.248 0.48 2.016 1.664t0.768 2.528zM25.152 16q0 2.72-1.536 5.056t-4 3.36q-0.256 0.096-0.448 0.096-0.48 0-0.832-0.352t-0.32-0.8q0-0.704 0.672-1.056 1.024-0.512 1.376-0.8 1.312-0.96 2.048-2.4t0.736-3.104-0.736-3.104-2.048-2.4q-0.352-0.288-1.376-0.8-0.672-0.352-0.672-1.056 0-0.448 0.32-0.8t0.8-0.352q0.224 0 0.48 0.096 2.496 1.056 4 3.36t1.536 5.056zM29.728 16q0 4.096-2.272 7.552t-6.048 5.056q-0.224 0.096-0.448 0.096-0.48 0-0.832-0.352t-0.32-0.8q0-0.64 0.704-1.056 0.128-0.064 0.384-0.192t0.416-0.192q0.8-0.448 1.44-0.896 2.208-1.632 3.456-4.064t1.216-5.152-1.216-5.152-3.456-4.064q-0.64-0.448-1.44-0.896-0.128-0.096-0.416-0.192t-0.384-0.192q-0.704-0.416-0.704-1.056 0-0.448 0.32-0.8t0.832-0.352q0.224 0 0.448 0.096 3.776 1.632 6.048 5.056t2.272 7.552z"></path></svg>'},function(e,t){e.exports='<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 17 32"><path d="M14.080 4.8q2.88 0 2.88 2.048v18.24q0 2.112-2.88 2.112t-2.88-2.112v-18.24q0-2.048 2.88-2.048zM2.88 4.8q2.88 0 2.88 2.048v18.24q0 2.112-2.88 2.112t-2.88-2.112v-18.24q0-2.048 2.88-2.048z"></path></svg>'},function(e,t){e.exports='<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 16 31"><path d="M15.552 15.168q0.448 0.32 0.448 0.832 0 0.448-0.448 0.768l-13.696 8.512q-0.768 0.512-1.312 0.192t-0.544-1.28v-16.448q0-0.96 0.544-1.28t1.312 0.192z"></path></svg>'},function(e,t,n){"use strict";var i,a,r=e.exports={};function o(){throw new Error("setTimeout has not been defined")}function s(){throw new Error("clearTimeout has not been defined")}function l(e){if(i===setTimeout)return setTimeout(e,0);if((i===o||!i)&&setTimeout)return i=setTimeout,setTimeout(e,0);try{return i(e,0)}catch(t){try{return i.call(null,e,0)}catch(t){return i.call(this,e,0)}}}!function(){try{i="function"==typeof setTimeout?setTimeout:o}catch(e){i=o}try{a="function"==typeof clearTimeout?clearTimeout:s}catch(e){a=s}}();var u,c=[],p=!1,d=-1;function h(){p&&u&&(p=!1,u.length?c=u.concat(c):d=-1,c.length&&y())}function y(){if(!p){var e=l(h);p=!0;for(var t=c.length;t;){for(u=c,c=[];++d<t;)u&&u[d].run();d=-1,t=c.length}u=null,p=!1,function(e){if(a===clearTimeout)return clearTimeout(e);if((a===s||!a)&&clearTimeout)return a=clearTimeout,clearTimeout(e);try{a(e)}catch(t){try{return a.call(null,e)}catch(t){return a.call(this,e)}}}(e)}}function f(e,t){this.fun=e,this.array=t}function v(){}r.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];c.push(new f(e,t)),1!==c.length||p||l(y)},f.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=v,r.addListener=v,r.once=v,r.off=v,r.removeListener=v,r.removeAllListeners=v,r.emit=v,r.prependListener=v,r.prependOnceListener=v,r.listeners=function(e){return[]},r.binding=function(e){throw new Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(e){throw new Error("process.chdir is not supported")},r.umask=function(){return 0}},function(e,t,n){"use strict";(function(e,t){!function(e,n){if(!e.setImmediate){var i,a,r,o,s,l=1,u={},c=!1,p=e.document,d=Object.getPrototypeOf&&Object.getPrototypeOf(e);d=d&&d.setTimeout?d:e,"[object process]"==={}.toString.call(e.process)?i=function(e){t.nextTick(function(){y(e)})}:!function(){if(e.postMessage&&!e.importScripts){var t=!0,n=e.onmessage;return e.onmessage=function(){t=!1},e.postMessage("","*"),e.onmessage=n,t}}()?e.MessageChannel?((r=new MessageChannel).port1.onmessage=function(e){y(e.data)},i=function(e){r.port2.postMessage(e)}):p&&"onreadystatechange"in p.createElement("script")?(a=p.documentElement,i=function(e){var t=p.createElement("script");t.onreadystatechange=function(){y(e),t.onreadystatechange=null,a.removeChild(t),t=null},a.appendChild(t)}):i=function(e){setTimeout(y,0,e)}:(o="setImmediate$"+Math.random()+"$",s=function(t){t.source===e&&"string"==typeof t.data&&0===t.data.indexOf(o)&&y(+t.data.slice(o.length))},e.addEventListener?e.addEventListener("message",s,!1):e.attachEvent("onmessage",s),i=function(t){e.postMessage(o+t,"*")}),d.setImmediate=function(e){"function"!=typeof e&&(e=new Function(""+e));for(var t=new Array(arguments.length-1),n=0;n<t.length;n++)t[n]=arguments[n+1];var a={callback:e,args:t};return u[l]=a,i(l),l++},d.clearImmediate=h}function h(e){delete u[e]}function y(e){if(c)setTimeout(y,0,e);else{var t=u[e];if(t){c=!0;try{!function(e){var t=e.callback,i=e.args;switch(i.length){case 0:t();break;case 1:t(i[0]);break;case 2:t(i[0],i[1]);break;case 3:t(i[0],i[1],i[2]);break;default:t.apply(n,i)}}(t)}finally{h(e),c=!1}}}}}("undefined"==typeof self?void 0===e?void 0:e:self)}).call(this,n(4),n(34))},function(e,t,n){"use strict";var i=Function.prototype.apply;function a(e,t){this._id=e,this._clearFn=t}t.setTimeout=function(){return new a(i.call(setTimeout,window,arguments),clearTimeout)},t.setInterval=function(){return new a(i.call(setInterval,window,arguments),clearInterval)},t.clearTimeout=t.clearInterval=function(e){e&&e.close()},a.prototype.unref=a.prototype.ref=function(){},a.prototype.close=function(){this._clearFn.call(window,this._id)},t.enroll=function(e,t){clearTimeout(e._idleTimeoutId),e._idleTimeout=t},t.unenroll=function(e){clearTimeout(e._idleTimeoutId),e._idleTimeout=-1},t._unrefActive=t.active=function(e){clearTimeout(e._idleTimeoutId);var t=e._idleTimeout;t>=0&&(e._idleTimeoutId=setTimeout(function(){e._onTimeout&&e._onTimeout()},t))},n(35),t.setImmediate=setImmediate,t.clearImmediate=clearImmediate},function(e,t,n){"use strict";(function(t){var n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i=setTimeout;function a(){}function r(e){if(!(this instanceof r))throw new TypeError("Promises must be constructed via new");if("function"!=typeof e)throw new TypeError("not a function");this._state=0,this._handled=!1,this._value=void 0,this._deferreds=[],c(e,this)}function o(e,t){for(;3===e._state;)e=e._value;0!==e._state?(e._handled=!0,r._immediateFn(function(){var n=1===e._state?t.onFulfilled:t.onRejected;if(null!==n){var i;try{i=n(e._value)}catch(e){return void l(t.promise,e)}s(t.promise,i)}else(1===e._state?s:l)(t.promise,e._value)})):e._deferreds.push(t)}function s(e,t){try{if(t===e)throw new TypeError("A promise cannot be resolved with itself.");if(t&&("object"===(void 0===t?"undefined":n(t))||"function"==typeof t)){var i=t.then;if(t instanceof r)return e._state=3,e._value=t,void u(e);if("function"==typeof i)return void c((a=i,o=t,function(){a.apply(o,arguments)}),e)}e._state=1,e._value=t,u(e)}catch(t){l(e,t)}var a,o}function l(e,t){e._state=2,e._value=t,u(e)}function u(e){2===e._state&&0===e._deferreds.length&&r._immediateFn(function(){e._handled||r._unhandledRejectionFn(e._value)});for(var t=0,n=e._deferreds.length;t<n;t++)o(e,e._deferreds[t]);e._deferreds=null}function c(e,t){var n=!1;try{e(function(e){n||(n=!0,s(t,e))},function(e){n||(n=!0,l(t,e))})}catch(e){if(n)return;n=!0,l(t,e)}}r.prototype.catch=function(e){return this.then(null,e)},r.prototype.then=function(e,t){var n=new this.constructor(a);return o(this,new function(e,t,n){this.onFulfilled="function"==typeof e?e:null,this.onRejected="function"==typeof t?t:null,this.promise=n}(e,t,n)),n},r.prototype.finally=function(e){var t=this.constructor;return this.then(function(n){return t.resolve(e()).then(function(){return n})},function(n){return t.resolve(e()).then(function(){return t.reject(n)})})},r.all=function(e){return new r(function(t,i){if(!e||void 0===e.length)throw new TypeError("Promise.all accepts an array");var a=Array.prototype.slice.call(e);if(0===a.length)return t([]);var r=a.length;function o(e,s){try{if(s&&("object"===(void 0===s?"undefined":n(s))||"function"==typeof s)){var l=s.then;if("function"==typeof l)return void l.call(s,function(t){o(e,t)},i)}a[e]=s,0==--r&&t(a)}catch(e){i(e)}}for(var s=0;s<a.length;s++)o(s,a[s])})},r.resolve=function(e){return e&&"object"===(void 0===e?"undefined":n(e))&&e.constructor===r?e:new r(function(t){t(e)})},r.reject=function(e){return new r(function(t,n){n(e)})},r.race=function(e){return new r(function(t,n){for(var i=0,a=e.length;i<a;i++)e[i].then(t,n)})},r._immediateFn="function"==typeof t&&function(e){t(e)}||function(e){i(e,0)},r._unhandledRejectionFn=function(e){"undefined"!=typeof console&&console&&console.warn("Possible Unhandled Promise Rejection:",e)},e.exports=r}).call(this,n(36).setImmediate)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),a=v(n(37)),r=v(n(0)),o=v(n(3)),s=v(n(18)),l=v(n(17)),u=v(n(13)),c=v(n(12)),p=v(n(11)),d=v(n(9)),h=v(n(8)),y=v(n(7)),f=v(n(6));function v(e){return e&&e.__esModule?e:{default:e}}var m=[],g=function(){function e(t){if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.options=(0,s.default)(t),this.container=this.options.container,this.paused=!0,this.playedPromise=a.default.resolve(),this.mode="normal",this.randomOrder=r.default.randomOrder(this.options.audio.length),this.container.classList.add("aplayer"),this.options.lrcType&&!this.options.fixed&&this.container.classList.add("aplayer-withlrc"),this.options.audio.length>1&&this.container.classList.add("aplayer-withlist"),r.default.isMobile&&this.container.classList.add("aplayer-mobile"),this.arrow=this.container.offsetWidth<=300,this.arrow&&this.container.classList.add("aplayer-arrow"),this.container=this.options.container,2===this.options.lrcType||!0===this.options.lrcType)for(var n=this.container.getElementsByClassName("aplayer-lrc-content"),i=0;i<n.length;i++)this.options.audio[i]&&(this.options.audio[i].lrc=n[i].innerHTML);this.template=new l.default({container:this.container,options:this.options,randomOrder:this.randomOrder}),this.options.fixed&&(this.container.classList.add("aplayer-fixed"),this.template.body.style.width=this.template.body.offsetWidth-18+"px"),this.options.mini&&(this.setMode("mini"),this.template.info.style.display="block"),this.template.info.offsetWidth<200&&this.template.time.classList.add("aplayer-time-narrow"),this.options.lrcType&&(this.lrc=new p.default({container:this.template.lrc,async:3===this.options.lrcType,player:this})),this.events=new y.default,this.storage=new c.default(this),this.bar=new u.default(this.template),this.controller=new d.default(this),this.timer=new h.default(this),this.list=new f.default(this),this.initAudio(),this.bindEvents(),"random"===this.options.order?this.list.switch(this.randomOrder[0]):this.list.switch(0),this.options.autoplay&&this.play(),m.push(this)}return i(e,[{key:"initAudio",value:function(){var e=this;this.audio=document.createElement("audio"),this.audio.preload=this.options.preload;for(var t=function(t){e.audio.addEventListener(e.events.audioEvents[t],function(n){e.events.trigger(e.events.audioEvents[t],n)})},n=0;n<this.events.audioEvents.length;n++)t(n);this.volume(this.storage.get("volume"),!0)}},{key:"bindEvents",value:function(){var e=this;this.on("play",function(){e.paused&&e.setUIPlaying()}),this.on("pause",function(){e.paused||e.setUIPaused()}),this.on("timeupdate",function(){if(!e.disableTimeupdate){e.bar.set("played",e.audio.currentTime/e.duration,"width"),e.lrc&&e.lrc.update();var t=r.default.secondToTime(e.audio.currentTime);e.template.ptime.innerHTML!==t&&(e.template.ptime.innerHTML=t)}}),this.on("durationchange",function(){1!==e.duration&&(e.template.dtime.innerHTML=r.default.secondToTime(e.duration))}),this.on("progress",function(){var t=e.audio.buffered.length?e.audio.buffered.end(e.audio.buffered.length-1)/e.duration:0;e.bar.set("loaded",t,"width")});var t=void 0;this.on("error",function(){e.list.audios.length>1?(e.notice("An audio error has occurred, player will skip forward in 2 seconds."),t=setTimeout(function(){e.skipForward(),e.paused||e.play()},2e3)):1===e.list.audios.length&&e.notice("An audio error has occurred.")}),this.events.on("listswitch",function(){t&&clearTimeout(t)}),this.on("ended",function(){"none"===e.options.loop?"list"===e.options.order?e.list.index<e.list.audios.length-1?(e.list.switch((e.list.index+1)%e.list.audios.length),e.play()):(e.list.switch((e.list.index+1)%e.list.audios.length),e.pause()):"random"===e.options.order&&(e.randomOrder.indexOf(e.list.index)<e.randomOrder.length-1?(e.list.switch(e.nextIndex()),e.play()):(e.list.switch(e.nextIndex()),e.pause())):"one"===e.options.loop?(e.list.switch(e.list.index),e.play()):"all"===e.options.loop&&(e.skipForward(),e.play())})}},{key:"setAudio",value:function(e){this.hls&&(this.hls.destroy(),this.hls=null);var t=e.type;this.options.customAudioType&&this.options.customAudioType[t]?"[object Function]"===Object.prototype.toString.call(this.options.customAudioType[t])?this.options.customAudioType[t](this.audio,e,this):console.error("Illegal customType: "+t):(t&&"auto"!==t||(t=/m3u8(#|\?|$)/i.exec(e.url)?"hls":"normal"),"hls"===t?Hls.isSupported()?(this.hls=new Hls,this.hls.loadSource(e.url),this.hls.attachMedia(this.audio)):this.audio.canPlayType("application/x-mpegURL")||this.audio.canPlayType("application/vnd.apple.mpegURL")?this.audio.src=e.url:this.notice("Error: HLS is not supported."):"normal"===t&&(this.audio.src=e.url)),this.seek(0),this.paused||this.audio.play()}},{key:"theme",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.list.audios[this.list.index].theme||this.options.theme,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.list.index;(!(arguments.length>2&&void 0!==arguments[2])||arguments[2])&&this.list.audios[t]&&(this.list.audios[t].theme=e),this.template.listCurs[t]&&(this.template.listCurs[t].style.backgroundColor=e),t===this.list.index&&(this.template.pic.style.backgroundColor=e,this.template.played.style.background=e,this.template.thumb.style.background=e,this.template.volume.style.background=e)}},{key:"seek",value:function(e){e=Math.max(e,0),e=Math.min(e,this.duration),this.audio.currentTime=e,this.bar.set("played",e/this.duration,"width"),this.template.ptime.innerHTML=r.default.secondToTime(e)}},{key:"setUIPlaying",value:function(){var e=this;if(this.paused&&(this.paused=!1,this.template.button.classList.remove("aplayer-play"),this.template.button.classList.add("aplayer-pause"),this.template.button.innerHTML="",setTimeout(function(){e.template.button.innerHTML=o.default.pause},100),this.template.skipPlayButton.innerHTML=o.default.pause),this.timer.enable("loading"),this.options.mutex)for(var t=0;t<m.length;t++)this!==m[t]&&m[t].pause()}},{key:"play",value:function(){var e=this;this.setUIPlaying();var t=this.audio.play();t&&t.catch(function(t){console.warn(t),"NotAllowedError"===t.name&&e.setUIPaused()})}},{key:"setUIPaused",value:function(){var e=this;this.paused||(this.paused=!0,this.template.button.classList.remove("aplayer-pause"),this.template.button.classList.add("aplayer-play"),this.template.button.innerHTML="",setTimeout(function(){e.template.button.innerHTML=o.default.play},100),this.template.skipPlayButton.innerHTML=o.default.play),this.container.classList.remove("aplayer-loading"),this.timer.disable("loading")}},{key:"pause",value:function(){this.setUIPaused(),this.audio.pause()}},{key:"switchVolumeIcon",value:function(){this.volume()>=.95?this.template.volumeButton.innerHTML=o.default.volumeUp:this.volume()>0?this.template.volumeButton.innerHTML=o.default.volumeDown:this.template.volumeButton.innerHTML=o.default.volumeOff}},{key:"volume",value:function(e,t){return e=parseFloat(e),isNaN(e)||(e=Math.max(e,0),e=Math.min(e,1),this.bar.set("volume",e,"height"),t||this.storage.set("volume",e),this.audio.volume=e,this.audio.muted&&(this.audio.muted=!1),this.switchVolumeIcon()),this.audio.muted?0:this.audio.volume}},{key:"on",value:function(e,t){this.events.on(e,t)}},{key:"toggle",value:function(){this.template.button.classList.contains("aplayer-play")?this.play():this.template.button.classList.contains("aplayer-pause")&&this.pause()}},{key:"switchAudio",value:function(e){this.list.switch(e)}},{key:"addAudio",value:function(e){this.list.add(e)}},{key:"removeAudio",value:function(e){this.list.remove(e)}},{key:"destroy",value:function(){m.splice(m.indexOf(this),1),this.pause(),this.container.innerHTML="",this.audio.src="",this.timer.destroy(),this.events.trigger("destroy")}},{key:"setMode",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"normal";this.mode=e,"mini"===e?this.container.classList.add("aplayer-narrow"):"normal"===e&&this.container.classList.remove("aplayer-narrow")}},{key:"notice",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2e3,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.8;this.template.notice.innerHTML=e,this.template.notice.style.opacity=i,this.noticeTime&&clearTimeout(this.noticeTime),this.events.trigger("noticeshow",{text:e}),n&&(this.noticeTime=setTimeout(function(){t.template.notice.style.opacity=0,t.events.trigger("noticehide")},n))}},{key:"prevIndex",value:function(){if(!(this.list.audios.length>1))return 0;if("list"===this.options.order)return this.list.index-1<0?this.list.audios.length-1:this.list.index-1;if("random"===this.options.order){var e=this.randomOrder.indexOf(this.list.index);return 0===e?this.randomOrder[this.randomOrder.length-1]:this.randomOrder[e-1]}}},{key:"nextIndex",value:function(){if(!(this.list.audios.length>1))return 0;if("list"===this.options.order)return(this.list.index+1)%this.list.audios.length;if("random"===this.options.order){var e=this.randomOrder.indexOf(this.list.index);return e===this.randomOrder.length-1?this.randomOrder[0]:this.randomOrder[e+1]}}},{key:"skipBack",value:function(){this.list.switch(this.prevIndex())}},{key:"skipForward",value:function(){this.list.switch(this.nextIndex())}},{key:"duration",get:function(){return isNaN(this.audio.duration)?0:this.audio.duration}}],[{key:"version",get:function(){return"1.10.1"}}]),e}();t.default=g},,function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n(40);var i,a=n(38),r=(i=a)&&i.__esModule?i:{default:i};console.log("\n %c APlayer v1.10.1 af84efb %c http://aplayer.js.org \n","color: #fadfa3; background: #030307; padding:5px 0;","background: #fadfa3; padding:5px 0;"),t.default=r.default}]).default});
//# sourceMappingURL=APlayer.min.js.map]]></content>
  </entry>
</search>
